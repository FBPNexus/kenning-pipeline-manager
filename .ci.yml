image: $CI_IMAGE

variables:
    GIT_STRATEGY: clone
    GIT_SUBMODULE_STRATEGY: recursive

stages:
    - lint
    - build
    - deploy

flake8:
    stage: lint
    script:
        - flake8 .

eslint:
    stage: lint
    script:
        - cd pipeline_manager/frontend
        - npm install
        - npm run lint

build-server-app:
    stage: build
    script:
        - ./build server-app

pytest:
    stage: build
    script:
        - pip install -r requirements.txt
        - python3 -m pytest

check-links:
    stage: build
    script:
        - cd docs
        - make linkcheck
    allow_failure: true

build-docs-and-static-html:
    stage: build
    script:
        - cd docs
        - echo -en "\nhtml_js_files = [ '$ANNOTANT' ]" >> source/conf.py
        - make html latexpdf
        - cp build/latex/*.pdf build/html/
        - tar cf $CI_DOCS_ARCHIVE -C build/html/ .
        - mv $CI_DOCS_ARCHIVE ..
    artifacts:
        paths:
            - docs/build/html
            - docs/build/latex/*.pdf
            - $CI_DOCS_ARCHIVE

deploy:
    image: $CI_DOCS_DOCKER_IMAGE
    stage: deploy
    dependencies:
        - build-docs-and-static-html
    variables:
        GIT_STRATEGY: none
    tags:
        - docs
    script: echo 'Deploying docs'
    artifacts:
        paths:
            - $CI_DOCS_ARCHIVE
