image: $CI_IMAGE

.ace: &ace
    tags: ['ace-x86_64']

.common_only: &common_only
    only:
        - main
        - dev
        - merge_requests

variables:
    GIT_STRATEGY: clone
    GIT_SUBMODULE_STRATEGY: recursive

stages:
    - lint
    - build
    - deploy

before_script:
    - n 20.5.0

flake8:
    stage: lint
    <<: *ace
    <<: *common_only
    script:
        - flake8 .

eslint:
    stage: lint
    <<: *ace
    <<: *common_only
    script:
        - cd pipeline_manager/frontend
        - npm install
        - npm run lint
        - test $(git status --porcelain | wc -l) -eq 0 || { git diff; false; }

build-server-app:
    stage: build
    <<: *ace
    <<: *common_only
    script:
        - ./build server-app

test_singlehtml_build:
    stage: build
    <<: *ace
    <<: *common_only
    script:
        - pip install beautifulsoup4
        - ./build static-html ./examples/sample-specification.json ./examples/sample-dataflow.json --editor-title "Test webpage" --output-directory ./output-dir --clean-build --single-html output.html --minify-specification

test_validate:
    stage: build
    <<: *ace
    <<: *common_only
    script:
        - ./validate ./examples/sample-specification.json ./examples/sample-dataflow.json --install-dependencies

pytest:
    stage: build
    <<: *ace
    <<: *common_only
    script:
        - pip install -r requirements.txt
        - python3 -m pytest

check-links:
    stage: build
    <<: *ace
    <<: *common_only
    script:
        - cd docs
        - make linkcheck
    allow_failure: true

build-docs-and-static-html:
    stage: build
    <<: *ace
    <<: *common_only
    script:
        - cd docs
        - echo -en "\nhtml_js_files = [ '$ANNOTANT' ]" >> source/conf.py
        - make html latexpdf
        - cp build/latex/*.pdf build/html/
        - tar cf $CI_DOCS_ARCHIVE -C build/html/ .
        - mv $CI_DOCS_ARCHIVE ..
    artifacts:
        paths:
            - docs/build/html
            - docs/build/latex/*.pdf
            - $CI_DOCS_ARCHIVE

deploy:
    image: $CI_DOCS_DOCKER_IMAGE
    stage: deploy
    <<: *common_only
    dependencies:
        - build-docs-and-static-html
    variables:
        GIT_STRATEGY: none
    tags:
        - docs
    before_script: []
    script: echo 'Deploying docs'
    artifacts:
        paths:
            - $CI_DOCS_ARCHIVE
