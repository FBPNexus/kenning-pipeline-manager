{"version":3,"file":"js/814.ca93ca2c.js","mappings":"oHACAA,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQE,gBAAkBF,EAAQG,gBAAkBH,EAAQI,QAAUJ,EAAQK,KAAOL,EAAQM,IAAMN,EAAQO,UAAYP,EAAQQ,IAAMR,EAAQS,EAAIT,EAAQU,gBAAa,EACtK,MAAMC,EAAS,EAAQ,MACjBC,EAAW,EAAQ,OACnBC,EAAY,EAAQ,OACpBC,EAAS,EAAQ,OACjBC,EAAgB,EAAQ,OACxBC,EAAkB,EAAQ,OAC1BC,EAAwB,EAAQ,OAChCC,EAAiB,+CACvB,MAAMC,UAAgBR,EAAOS,QACzB,WAAAC,CAAYC,EAAO,CAAC,GAChBC,MAAM,IACCD,EACHE,YAAY,EACZC,MAAM,EACNC,aAAa,GAErB,CACA,gBAAAC,GACIJ,MAAMI,mBACNC,KAAKC,cAAchB,EAAUO,SAC7BR,EAASQ,QAAQU,SAASC,GAAMH,KAAKC,cAAcE,KACnDH,KAAKC,cAAcf,EAAOM,SAC1BQ,KAAKC,cAAcd,EAAcK,SAC7BQ,KAAKN,KAAKU,eACVJ,KAAKK,WAAWjB,EAAgBI,QACxC,CACA,qBAAAc,GACIX,MAAMW,wBACN,MAAM,MAAEC,EAAK,KAAEC,GAASR,KAAKN,KACxBc,IAELnB,EAAsBG,QAAQiB,KAAKT,KAAMO,GACzCP,KAAKU,KAAK,iCAAmCpB,EACjD,CACA,WAAAqB,GACI,OAAQX,KAAKN,KAAKiB,YACdhB,MAAMgB,gBAAkBX,KAAKY,UAAUtB,GAAkBA,OAAiBuB,EAClF,EAEJC,EAAO1C,QAAUA,EAAUmB,EAC3BrB,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAA,QAAkBmB,EAClB,IAAIwB,EAAa,EAAQ,OACzB7C,OAAOC,eAAeC,EAAS,aAAc,CAAE4C,YAAY,EAAMC,IAAK,WAAc,OAAOF,EAAWjC,UAAY,IAClH,IAAIoC,EAAY,EAAQ,OACxBhD,OAAOC,eAAeC,EAAS,IAAK,CAAE4C,YAAY,EAAMC,IAAK,WAAc,OAAOC,EAAUrC,CAAG,IAC/FX,OAAOC,eAAeC,EAAS,MAAO,CAAE4C,YAAY,EAAMC,IAAK,WAAc,OAAOC,EAAUtC,GAAK,IACnGV,OAAOC,eAAeC,EAAS,YAAa,CAAE4C,YAAY,EAAMC,IAAK,WAAc,OAAOC,EAAUvC,SAAW,IAC/GT,OAAOC,eAAeC,EAAS,MAAO,CAAE4C,YAAY,EAAMC,IAAK,WAAc,OAAOC,EAAUxC,GAAK,IACnGR,OAAOC,eAAeC,EAAS,OAAQ,CAAE4C,YAAY,EAAMC,IAAK,WAAc,OAAOC,EAAUzC,IAAM,IACrGP,OAAOC,eAAeC,EAAS,UAAW,CAAE4C,YAAY,EAAMC,IAAK,WAAc,OAAOC,EAAU1C,OAAS,IAC3G,IAAI2C,EAAqB,EAAQ,OACjCjD,OAAOC,eAAeC,EAAS,kBAAmB,CAAE4C,YAAY,EAAMC,IAAK,WAAc,OAAOE,EAAmB3B,OAAS,IAC5H,IAAI4B,EAAc,EAAQ,OAC1BlD,OAAOC,eAAeC,EAAS,kBAAmB,CAAE4C,YAAY,EAAMC,IAAK,WAAc,OAAOG,EAAY5B,OAAS,G,kBCxDrHtB,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQE,gBAAkBF,EAAQG,gBAAkBH,EAAQI,QAAUJ,EAAQK,KAAOL,EAAQM,IAAMN,EAAQO,UAAYP,EAAQQ,IAAMR,EAAQS,EAAIT,EAAQU,gBAAa,EACtK,MAAMC,EAAS,EAAQ,MACjBC,EAAW,EAAQ,OACnBI,EAAkB,EAAQ,OAC1BiC,EAAmB,EAAQ,OAC3BC,EAAoB,CAAC,eACrBhC,EAAiB,yCACvB,MAAMiC,UAAYxC,EAAOS,QACrB,gBAAAO,GACIJ,MAAMI,mBACNf,EAASQ,QAAQU,SAASC,GAAMH,KAAKC,cAAcE,KAC/CH,KAAKN,KAAKU,eACVJ,KAAKK,WAAWjB,EAAgBI,QACxC,CACA,qBAAAc,GAEI,GADAX,MAAMW,yBACDN,KAAKN,KAAKc,KACX,OACJ,MAAMgB,EAAaxB,KAAKN,KAAKa,MACvBP,KAAKyB,gBAAgBJ,EAAkBC,GACvCD,EACNrB,KAAK0B,cAAcF,EAAYlC,GAAgB,GAC/CU,KAAKU,KAAK,iCAAmCpB,CACjD,CACA,WAAAqB,GACI,OAAQX,KAAKN,KAAKiB,YACdhB,MAAMgB,gBAAkBX,KAAKY,UAAUtB,GAAkBA,OAAiBuB,EAClF,EAEJC,EAAO1C,QAAUA,EAAUmD,EAC3BrD,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAA,QAAkBmD,EAClB,IAAIR,EAAa,EAAQ,OACzB7C,OAAOC,eAAeC,EAAS,aAAc,CAAE4C,YAAY,EAAMC,IAAK,WAAc,OAAOF,EAAWjC,UAAY,IAClH,IAAIoC,EAAY,EAAQ,OACxBhD,OAAOC,eAAeC,EAAS,IAAK,CAAE4C,YAAY,EAAMC,IAAK,WAAc,OAAOC,EAAUrC,CAAG,IAC/FX,OAAOC,eAAeC,EAAS,MAAO,CAAE4C,YAAY,EAAMC,IAAK,WAAc,OAAOC,EAAUtC,GAAK,IACnGV,OAAOC,eAAeC,EAAS,YAAa,CAAE4C,YAAY,EAAMC,IAAK,WAAc,OAAOC,EAAUvC,SAAW,IAC/GT,OAAOC,eAAeC,EAAS,MAAO,CAAE4C,YAAY,EAAMC,IAAK,WAAc,OAAOC,EAAUxC,GAAK,IACnGR,OAAOC,eAAeC,EAAS,OAAQ,CAAE4C,YAAY,EAAMC,IAAK,WAAc,OAAOC,EAAUzC,IAAM,IACrGP,OAAOC,eAAeC,EAAS,UAAW,CAAE4C,YAAY,EAAMC,IAAK,WAAc,OAAOC,EAAU1C,OAAS,IAC3G,IAAI2C,EAAqB,EAAQ,OACjCjD,OAAOC,eAAeC,EAAS,kBAAmB,CAAE4C,YAAY,EAAMC,IAAK,WAAc,OAAOE,EAAmB3B,OAAS,IAC5H,IAAI4B,EAAc,EAAQ,OAC1BlD,OAAOC,eAAeC,EAAS,kBAAmB,CAAE4C,YAAY,EAAMC,IAAK,WAAc,OAAOG,EAAY5B,OAAS,G,gBC7CrHtB,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQuD,WAAavD,EAAQwD,iBAAmBxD,EAAQyD,YAAczD,EAAQ0D,cAAgB1D,EAAQO,UAAYP,EAAQ2D,UAAY3D,EAAQ4D,WAAa5D,EAAQQ,IAAMR,EAAQS,EAAIT,EAAQM,IAAMN,EAAQ6D,MAAQ7D,EAAQK,KAAOL,EAAQ8D,WAAa9D,EAAQ+D,iBAAc,EAC7Q,MAAMA,GAEN/D,EAAQ+D,YAAcA,EACtB/D,EAAQ8D,WAAa,wBACrB,MAAMzD,UAAa0D,EACf,WAAA1C,CAAY2C,GAER,GADAzC,SACKvB,EAAQ8D,WAAWG,KAAKD,GACzB,MAAM,IAAIE,MAAM,4CACpBtC,KAAKpB,IAAMwD,CACf,CACA,QAAAG,GACI,OAAOvC,KAAKpB,GAChB,CACA,QAAA4D,GACI,OAAO,CACX,CACA,SAAIC,GACA,MAAO,CAAE,CAACzC,KAAKpB,KAAM,EACzB,EAEJR,EAAQK,KAAOA,EACf,MAAMwD,UAAcE,EAChB,WAAA1C,CAAYiD,GACR/C,QACAK,KAAK2C,OAAyB,iBAATD,EAAoB,CAACA,GAAQA,CACtD,CACA,QAAAH,GACI,OAAOvC,KAAKpB,GAChB,CACA,QAAA4D,GACI,GAAIxC,KAAK2C,OAAOC,OAAS,EACrB,OAAO,EACX,MAAMC,EAAO7C,KAAK2C,OAAO,GACzB,MAAgB,KAATE,GAAwB,OAATA,CAC1B,CACA,OAAIjE,GACA,IAAIkE,EACJ,OAA6B,QAApBA,EAAK9C,KAAK+C,YAAyB,IAAPD,EAAgBA,EAAM9C,KAAK+C,KAAO/C,KAAK2C,OAAOK,QAAO,CAACZ,EAAGa,IAAM,GAAGb,IAAIa,KAAK,GACpH,CACA,SAAIR,GACA,IAAIK,EACJ,OAA+B,QAAtBA,EAAK9C,KAAKkD,cAA2B,IAAPJ,EAAgBA,EAAM9C,KAAKkD,OAASlD,KAAK2C,OAAOK,QAAO,CAACP,EAAOQ,KAC9FA,aAAaxE,IACbgE,EAAMQ,EAAErE,MAAQ6D,EAAMQ,EAAErE,MAAQ,GAAK,GAClC6D,IACR,CAAC,EACR,EAIJ,SAAS5D,EAAEsE,KAASC,GAChB,MAAMV,EAAO,CAACS,EAAK,IACnB,IAAIE,EAAI,EACR,KAAOA,EAAID,EAAKR,QACZZ,EAAWU,EAAMU,EAAKC,IACtBX,EAAKY,KAAKH,IAAOE,IAErB,OAAO,IAAIpB,EAAMS,EACrB,CAVAtE,EAAQ6D,MAAQA,EAChB7D,EAAQM,IAAM,IAAIuD,EAAM,IAUxB7D,EAAQS,EAAIA,EACZ,MAAM0E,EAAO,IAAItB,EAAM,KACvB,SAASrD,EAAIuE,KAASC,GAClB,MAAMI,EAAO,CAAC1B,EAAcqB,EAAK,KACjC,IAAIE,EAAI,EACR,KAAOA,EAAID,EAAKR,QACZY,EAAKF,KAAKC,GACVvB,EAAWwB,EAAMJ,EAAKC,IACtBG,EAAKF,KAAKC,EAAMzB,EAAcqB,IAAOE,KAGzC,OAYJ,SAAkBG,GACd,IAAIH,EAAI,EACR,KAAOA,EAAIG,EAAKZ,OAAS,GAAG,CACxB,GAAIY,EAAKH,KAAOE,EAAM,CAClB,MAAME,EAAMC,EAAeF,EAAKH,EAAI,GAAIG,EAAKH,EAAI,IACjD,QAAYxC,IAAR4C,EAAmB,CACnBD,EAAKG,OAAON,EAAI,EAAG,EAAGI,GACtB,QACJ,CACAD,EAAKH,KAAO,GAChB,CACAA,GACJ,CACJ,CA1BIO,CAASJ,GACF,IAAIvB,EAAMuB,EACrB,CAEA,SAASxB,EAAWU,EAAMmB,GA8C1B,IAAqBC,EA7CbD,aAAe5B,EACfS,EAAKY,QAAQO,EAAIlB,QACZkB,aAAepF,EACpBiE,EAAKY,KAAKO,GAEVnB,EAAKY,KAyCU,iBADFQ,EAxCSD,IAyCiB,kBAALC,GAAwB,OAANA,EAClDA,EACAhC,EAAciC,MAAMC,QAAQF,GAAKA,EAAEG,KAAK,KAAOH,GA1CzD,CAgBA,SAASJ,EAAeQ,EAAGC,GACvB,GAAU,OAANA,EACA,OAAOD,EACX,GAAU,OAANA,EACA,OAAOC,EACX,GAAgB,iBAALD,EAAe,CACtB,GAAIC,aAAa1F,GAA4B,MAApByF,EAAEA,EAAEtB,OAAS,GAClC,OACJ,MAAgB,iBAALuB,EACA,GAAGD,EAAEE,MAAM,GAAI,KAAKD,KAClB,MAATA,EAAE,GACKD,EAAEE,MAAM,GAAI,GAAKD,EAAEC,MAAM,QACpC,CACJ,CACA,MAAgB,iBAALD,GAA0B,MAATA,EAAE,IAAgBD,aAAazF,OAA3D,EACW,IAAIyF,IAAIC,EAAEC,MAAM,IAE/B,CAeA,SAAStC,EAAcgC,GACnB,OAAOO,KAAK1F,UAAUmF,GACjBQ,QAAQ,UAAW,WACnBA,QAAQ,UAAW,UAC5B,CA5DAlG,EAAQQ,IAAMA,EASdR,EAAQ4D,WAAaA,EAoCrB5D,EAAQ2D,UAHR,SAAmBwC,EAAIC,GACnB,OAAOA,EAAGhC,WAAa+B,EAAKA,EAAG/B,WAAagC,EAAK5F,CAAI,GAAG2F,IAAKC,GACjE,EAWApG,EAAQO,UAHR,SAAmBmF,GACf,OAAO,IAAI7B,EAAMH,EAAcgC,GACnC,EAOA1F,EAAQ0D,cAAgBA,EAIxB1D,EAAQyD,YAHR,SAAqB4C,GACjB,MAAqB,iBAAPA,GAAmBrG,EAAQ8D,WAAWG,KAAKoC,GAAO,IAAIxC,EAAM,IAAIwC,KAAS5F,CAAE,IAAI4F,IACjG,EASArG,EAAQwD,iBANR,SAA0B6C,GACtB,GAAkB,iBAAPA,GAAmBrG,EAAQ8D,WAAWG,KAAKoC,GAClD,OAAO,IAAIxC,EAAM,GAAGwC,KAExB,MAAM,IAAInC,MAAM,iCAAiCmC,mCACrD,EAKArG,EAAQuD,WAHR,SAAoB+C,GAChB,OAAO,IAAIzC,EAAMyC,EAAGnC,WACxB,C,kBCvJArE,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQuG,GAAKvG,EAAQwG,IAAMxG,EAAQyG,IAAMzG,EAAQI,QAAUJ,EAAQ0G,UAAY1G,EAAQ2G,SAAW3G,EAAQ4G,eAAiB5G,EAAQ6G,WAAa7G,EAAQ8G,MAAQ9G,EAAQK,KAAOL,EAAQuD,WAAavD,EAAQO,UAAYP,EAAQyD,YAAczD,EAAQM,IAAMN,EAAQ2D,UAAY3D,EAAQQ,IAAMR,EAAQS,OAAI,EAC1S,MAAMsG,EAAS,EAAQ,OACjBC,EAAU,EAAQ,OACxB,IAAIC,EAAS,EAAQ,OACrBnH,OAAOC,eAAeC,EAAS,IAAK,CAAE4C,YAAY,EAAMC,IAAK,WAAc,OAAOoE,EAAOxG,CAAG,IAC5FX,OAAOC,eAAeC,EAAS,MAAO,CAAE4C,YAAY,EAAMC,IAAK,WAAc,OAAOoE,EAAOzG,GAAK,IAChGV,OAAOC,eAAeC,EAAS,YAAa,CAAE4C,YAAY,EAAMC,IAAK,WAAc,OAAOoE,EAAOtD,SAAW,IAC5G7D,OAAOC,eAAeC,EAAS,MAAO,CAAE4C,YAAY,EAAMC,IAAK,WAAc,OAAOoE,EAAO3G,GAAK,IAChGR,OAAOC,eAAeC,EAAS,cAAe,CAAE4C,YAAY,EAAMC,IAAK,WAAc,OAAOoE,EAAOxD,WAAa,IAChH3D,OAAOC,eAAeC,EAAS,YAAa,CAAE4C,YAAY,EAAMC,IAAK,WAAc,OAAOoE,EAAO1G,SAAW,IAC5GT,OAAOC,eAAeC,EAAS,aAAc,CAAE4C,YAAY,EAAMC,IAAK,WAAc,OAAOoE,EAAO1D,UAAY,IAC9GzD,OAAOC,eAAeC,EAAS,OAAQ,CAAE4C,YAAY,EAAMC,IAAK,WAAc,OAAOoE,EAAO5G,IAAM,IAClG,IAAI6G,EAAU,EAAQ,OACtBpH,OAAOC,eAAeC,EAAS,QAAS,CAAE4C,YAAY,EAAMC,IAAK,WAAc,OAAOqE,EAAQJ,KAAO,IACrGhH,OAAOC,eAAeC,EAAS,aAAc,CAAE4C,YAAY,EAAMC,IAAK,WAAc,OAAOqE,EAAQL,UAAY,IAC/G/G,OAAOC,eAAeC,EAAS,iBAAkB,CAAE4C,YAAY,EAAMC,IAAK,WAAc,OAAOqE,EAAQN,cAAgB,IACvH9G,OAAOC,eAAeC,EAAS,WAAY,CAAE4C,YAAY,EAAMC,IAAK,WAAc,OAAOqE,EAAQP,QAAU,IAC3G3G,EAAQ0G,UAAY,CAChBS,GAAI,IAAIJ,EAAOlD,MAAM,KACrBuD,IAAK,IAAIL,EAAOlD,MAAM,MACtBwD,GAAI,IAAIN,EAAOlD,MAAM,KACrByD,IAAK,IAAIP,EAAOlD,MAAM,MACtB0D,GAAI,IAAIR,EAAOlD,MAAM,OACrB2D,IAAK,IAAIT,EAAOlD,MAAM,OACtB4D,IAAK,IAAIV,EAAOlD,MAAM,KACtB6D,GAAI,IAAIX,EAAOlD,MAAM,MACrB8D,IAAK,IAAIZ,EAAOlD,MAAM,MACtB+D,IAAK,IAAIb,EAAOlD,MAAM,MAE1B,MAAMgE,EACF,aAAAC,GACI,OAAOlG,IACX,CACA,aAAAmG,CAAcjD,EAAQkD,GAClB,OAAOpG,IACX,EAEJ,MAAMqG,UAAYJ,EACd,WAAAxG,CAAY6G,EAASC,EAAMC,GACvB7G,QACAK,KAAKsG,QAAUA,EACftG,KAAKuG,KAAOA,EACZvG,KAAKwG,IAAMA,CACf,CACA,MAAAC,EAAO,IAAEC,EAAG,GAAEC,IACV,MAAML,EAAUI,EAAMtB,EAAQL,SAAS6B,IAAM5G,KAAKsG,QAC5CE,OAAmB3F,IAAbb,KAAKwG,IAAoB,GAAK,MAAMxG,KAAKwG,MACrD,MAAO,GAAGF,KAAWtG,KAAKuG,OAAOC,KAASG,CAC9C,CACA,aAAAR,CAAc1D,EAAOoE,GACjB,GAAKpE,EAAMzC,KAAKuG,KAAK3H,KAIrB,OAFIoB,KAAKwG,MACLxG,KAAKwG,IAAMM,EAAa9G,KAAKwG,IAAK/D,EAAOoE,IACtC7G,IACX,CACA,SAAIyC,GACA,OAAOzC,KAAKwG,eAAerB,EAAOhD,YAAcnC,KAAKwG,IAAI/D,MAAQ,CAAC,CACtE,EAEJ,MAAMsE,UAAed,EACjB,WAAAxG,CAAYuH,EAAKR,EAAKS,GAClBtH,QACAK,KAAKgH,IAAMA,EACXhH,KAAKwG,IAAMA,EACXxG,KAAKiH,YAAcA,CACvB,CACA,MAAAR,EAAO,GAAEE,IACL,MAAO,GAAG3G,KAAKgH,SAAShH,KAAKwG,OAASG,CAC1C,CACA,aAAAR,CAAc1D,EAAOoE,GACjB,KAAI7G,KAAKgH,eAAe7B,EAAO1G,OAASgE,EAAMzC,KAAKgH,IAAIpI,MAASoB,KAAKiH,YAGrE,OADAjH,KAAKwG,IAAMM,EAAa9G,KAAKwG,IAAK/D,EAAOoE,GAClC7G,IACX,CACA,SAAIyC,GAEA,OAAOyE,EADOlH,KAAKgH,eAAe7B,EAAO1G,KAAO,CAAC,EAAI,IAAKuB,KAAKgH,IAAIvE,OACxCzC,KAAKwG,IACpC,EAEJ,MAAMW,UAAiBJ,EACnB,WAAAtH,CAAYuH,EAAKI,EAAIZ,EAAKS,GACtBtH,MAAMqH,EAAKR,EAAKS,GAChBjH,KAAKoH,GAAKA,CACd,CACA,MAAAX,EAAO,GAAEE,IACL,MAAO,GAAG3G,KAAKgH,OAAOhH,KAAKoH,OAAOpH,KAAKwG,OAASG,CACpD,EAEJ,MAAMU,UAAcpB,EAChB,WAAAxG,CAAY6H,GACR3H,QACAK,KAAKsH,MAAQA,EACbtH,KAAKyC,MAAQ,CAAC,CAClB,CACA,MAAAgE,EAAO,GAAEE,IACL,MAAO,GAAG3G,KAAKsH,SAAWX,CAC9B,EAEJ,MAAMY,UAActB,EAChB,WAAAxG,CAAY6H,GACR3H,QACAK,KAAKsH,MAAQA,EACbtH,KAAKyC,MAAQ,CAAC,CAClB,CACA,MAAAgE,EAAO,GAAEE,IAEL,MAAO,QADO3G,KAAKsH,MAAQ,IAAItH,KAAKsH,QAAU,MACpBX,CAC9B,EAEJ,MAAMa,UAAcvB,EAChB,WAAAxG,CAAYgI,GACR9H,QACAK,KAAKyH,MAAQA,CACjB,CACA,MAAAhB,EAAO,GAAEE,IACL,MAAO,SAAS3G,KAAKyH,SAAWd,CACpC,CACA,SAAIlE,GACA,OAAOzC,KAAKyH,MAAMhF,KACtB,EAEJ,MAAMiF,UAAgBzB,EAClB,WAAAxG,CAAYiD,GACR/C,QACAK,KAAK0C,KAAOA,CAChB,CACA,MAAA+D,EAAO,GAAEE,IACL,MAAO,GAAG3G,KAAK0C,QAAUiE,CAC7B,CACA,aAAAT,GACI,MAAO,GAAGlG,KAAK0C,OAAS1C,UAAOa,CACnC,CACA,aAAAsF,CAAc1D,EAAOoE,GAEjB,OADA7G,KAAK0C,KAAOoE,EAAa9G,KAAK0C,KAAMD,EAAOoE,GACpC7G,IACX,CACA,SAAIyC,GACA,OAAOzC,KAAK0C,gBAAgByC,EAAOhD,YAAcnC,KAAK0C,KAAKD,MAAQ,CAAC,CACxE,EAEJ,MAAMkF,UAAmB1B,EACrB,WAAAxG,CAAYmI,EAAQ,IAChBjI,QACAK,KAAK4H,MAAQA,CACjB,CACA,MAAAnB,CAAO/G,GACH,OAAOM,KAAK4H,MAAM5E,QAAO,CAACN,EAAMmF,IAAMnF,EAAOmF,EAAEpB,OAAO/G,IAAO,GACjE,CACA,aAAAwG,GACI,MAAM,MAAE0B,GAAU5H,KAClB,IAAIqD,EAAIuE,EAAMhF,OACd,KAAOS,KAAK,CACR,MAAMwE,EAAID,EAAMvE,GAAG6C,gBACfnC,MAAMC,QAAQ6D,GACdD,EAAMjE,OAAON,EAAG,KAAMwE,GACjBA,EACLD,EAAMvE,GAAKwE,EAEXD,EAAMjE,OAAON,EAAG,EACxB,CACA,OAAOuE,EAAMhF,OAAS,EAAI5C,UAAOa,CACrC,CACA,aAAAsF,CAAc1D,EAAOoE,GACjB,MAAM,MAAEe,GAAU5H,KAClB,IAAIqD,EAAIuE,EAAMhF,OACd,KAAOS,KAAK,CAER,MAAMwE,EAAID,EAAMvE,GACZwE,EAAE1B,cAAc1D,EAAOoE,KAE3BiB,EAAcrF,EAAOoF,EAAEpF,OACvBmF,EAAMjE,OAAON,EAAG,GACpB,CACA,OAAOuE,EAAMhF,OAAS,EAAI5C,UAAOa,CACrC,CACA,SAAI4B,GACA,OAAOzC,KAAK4H,MAAM5E,QAAO,CAACP,EAAOoF,IAAME,EAAStF,EAAOoF,EAAEpF,QAAQ,CAAC,EACtE,EAEJ,MAAMuF,UAAkBL,EACpB,MAAAlB,CAAO/G,GACH,MAAO,IAAMA,EAAKiH,GAAKhH,MAAM8G,OAAO/G,GAAQ,IAAMA,EAAKiH,EAC3D,EAEJ,MAAMsB,UAAaN,GAEnB,MAAMO,UAAaF,GAEnBE,EAAKC,KAAO,OACZ,MAAMC,UAAWJ,EACb,WAAAvI,CAAY4I,EAAWT,GACnBjI,MAAMiI,GACN5H,KAAKqI,UAAYA,CACrB,CACA,MAAA5B,CAAO/G,GACH,IAAIgD,EAAO,MAAM1C,KAAKqI,aAAe1I,MAAM8G,OAAO/G,GAGlD,OAFIM,KAAKsI,OACL5F,GAAQ,QAAU1C,KAAKsI,KAAK7B,OAAO/G,IAChCgD,CACX,CACA,aAAAwD,GACIvG,MAAMuG,gBACN,MAAMqC,EAAOvI,KAAKqI,UAClB,IAAa,IAATE,EACA,OAAOvI,KAAK4H,MAChB,IAAIY,EAAIxI,KAAKsI,KACb,GAAIE,EAAG,CACH,MAAMC,EAAKD,EAAEtC,gBACbsC,EAAIxI,KAAKsI,KAAOvE,MAAMC,QAAQyE,GAAM,IAAIP,EAAKO,GAAMA,CACvD,CACA,OAAID,GACa,IAATD,EACOC,aAAaJ,EAAKI,EAAIA,EAAEZ,MAC/B5H,KAAK4H,MAAMhF,OACJ5C,KACJ,IAAIoI,EAAGvD,EAAI0D,GAAOC,aAAaJ,EAAK,CAACI,GAAKA,EAAEZ,QAE1C,IAATW,GAAmBvI,KAAK4H,MAAMhF,OAE3B5C,UAFP,CAGJ,CACA,aAAAmG,CAAc1D,EAAOoE,GACjB,IAAI/D,EAEJ,GADA9C,KAAKsI,KAA4B,QAApBxF,EAAK9C,KAAKsI,YAAyB,IAAPxF,OAAgB,EAASA,EAAGqD,cAAc1D,EAAOoE,GACpFlH,MAAMwG,cAAc1D,EAAOoE,IAAc7G,KAAKsI,KAGpD,OADAtI,KAAKqI,UAAYvB,EAAa9G,KAAKqI,UAAW5F,EAAOoE,GAC9C7G,IACX,CACA,SAAIyC,GACA,MAAMA,EAAQ9C,MAAM8C,MAIpB,OAHAyE,EAAazE,EAAOzC,KAAKqI,WACrBrI,KAAKsI,MACLP,EAAStF,EAAOzC,KAAKsI,KAAK7F,OACvBA,CACX,EAEJ2F,EAAGD,KAAO,KACV,MAAMO,UAAYV,GAElBU,EAAIP,KAAO,MACX,MAAMQ,UAAgBD,EAClB,WAAAjJ,CAAYmJ,GACRjJ,QACAK,KAAK4I,UAAYA,CACrB,CACA,MAAAnC,CAAO/G,GACH,MAAO,OAAOM,KAAK4I,aAAejJ,MAAM8G,OAAO/G,EACnD,CACA,aAAAyG,CAAc1D,EAAOoE,GACjB,GAAKlH,MAAMwG,cAAc1D,EAAOoE,GAGhC,OADA7G,KAAK4I,UAAY9B,EAAa9G,KAAK4I,UAAWnG,EAAOoE,GAC9C7G,IACX,CACA,SAAIyC,GACA,OAAOsF,EAASpI,MAAM8C,MAAOzC,KAAK4I,UAAUnG,MAChD,EAEJ,MAAMoG,UAAiBH,EACnB,WAAAjJ,CAAY6G,EAASC,EAAMuC,EAAMC,GAC7BpJ,QACAK,KAAKsG,QAAUA,EACftG,KAAKuG,KAAOA,EACZvG,KAAK8I,KAAOA,EACZ9I,KAAK+I,GAAKA,CACd,CACA,MAAAtC,CAAO/G,GACH,MAAM4G,EAAU5G,EAAKgH,IAAMtB,EAAQL,SAAS6B,IAAM5G,KAAKsG,SACjD,KAAEC,EAAI,KAAEuC,EAAI,GAAEC,GAAO/I,KAC3B,MAAO,OAAOsG,KAAWC,KAAQuC,MAASvC,KAAQwC,MAAOxC,OAAY5G,MAAM8G,OAAO/G,EACtF,CACA,SAAI+C,GACA,MAAMA,EAAQyE,EAAavH,MAAM8C,MAAOzC,KAAK8I,MAC7C,OAAO5B,EAAazE,EAAOzC,KAAK+I,GACpC,EAEJ,MAAMC,UAAgBN,EAClB,WAAAjJ,CAAYwJ,EAAM3C,EAASC,EAAM2C,GAC7BvJ,QACAK,KAAKiJ,KAAOA,EACZjJ,KAAKsG,QAAUA,EACftG,KAAKuG,KAAOA,EACZvG,KAAKkJ,SAAWA,CACpB,CACA,MAAAzC,CAAO/G,GACH,MAAO,OAAOM,KAAKsG,WAAWtG,KAAKuG,QAAQvG,KAAKiJ,QAAQjJ,KAAKkJ,YAAcvJ,MAAM8G,OAAO/G,EAC5F,CACA,aAAAyG,CAAc1D,EAAOoE,GACjB,GAAKlH,MAAMwG,cAAc1D,EAAOoE,GAGhC,OADA7G,KAAKkJ,SAAWpC,EAAa9G,KAAKkJ,SAAUzG,EAAOoE,GAC5C7G,IACX,CACA,SAAIyC,GACA,OAAOsF,EAASpI,MAAM8C,MAAOzC,KAAKkJ,SAASzG,MAC/C,EAEJ,MAAM0G,UAAanB,EACf,WAAAvI,CAAY8G,EAAMnD,EAAMgG,GACpBzJ,QACAK,KAAKuG,KAAOA,EACZvG,KAAKoD,KAAOA,EACZpD,KAAKoJ,MAAQA,CACjB,CACA,MAAA3C,CAAO/G,GAEH,MAAO,GADQM,KAAKoJ,MAAQ,SAAW,cACXpJ,KAAKuG,QAAQvG,KAAKoD,QAAUzD,MAAM8G,OAAO/G,EACzE,EAEJyJ,EAAKhB,KAAO,OACZ,MAAMkB,UAAe1B,EACjB,MAAAlB,CAAO/G,GACH,MAAO,UAAYC,MAAM8G,OAAO/G,EACpC,EAEJ2J,EAAOlB,KAAO,SACd,MAAMmB,UAAYtB,EACd,MAAAvB,CAAO/G,GACH,IAAIgD,EAAO,MAAQ/C,MAAM8G,OAAO/G,GAKhC,OAJIM,KAAKuJ,QACL7G,GAAQ1C,KAAKuJ,MAAM9C,OAAO/G,IAC1BM,KAAKwJ,UACL9G,GAAQ1C,KAAKwJ,QAAQ/C,OAAO/G,IACzBgD,CACX,CACA,aAAAwD,GACI,IAAIpD,EAAI2G,EAIR,OAHA9J,MAAMuG,gBACgB,QAArBpD,EAAK9C,KAAKuJ,aAA0B,IAAPzG,GAAyBA,EAAGoD,gBAClC,QAAvBuD,EAAKzJ,KAAKwJ,eAA4B,IAAPC,GAAyBA,EAAGvD,gBACrDlG,IACX,CACA,aAAAmG,CAAc1D,EAAOoE,GACjB,IAAI/D,EAAI2G,EAIR,OAHA9J,MAAMwG,cAAc1D,EAAOoE,GACL,QAArB/D,EAAK9C,KAAKuJ,aAA0B,IAAPzG,GAAyBA,EAAGqD,cAAc1D,EAAOoE,GACvD,QAAvB4C,EAAKzJ,KAAKwJ,eAA4B,IAAPC,GAAyBA,EAAGtD,cAAc1D,EAAOoE,GAC1E7G,IACX,CACA,SAAIyC,GACA,MAAMA,EAAQ9C,MAAM8C,MAKpB,OAJIzC,KAAKuJ,OACLxB,EAAStF,EAAOzC,KAAKuJ,MAAM9G,OAC3BzC,KAAKwJ,SACLzB,EAAStF,EAAOzC,KAAKwJ,QAAQ/G,OAC1BA,CACX,EAEJ,MAAMiH,UAAc1B,EAChB,WAAAvI,CAAYgI,GACR9H,QACAK,KAAKyH,MAAQA,CACjB,CACA,MAAAhB,CAAO/G,GACH,MAAO,SAASM,KAAKyH,SAAW9H,MAAM8G,OAAO/G,EACjD,EAEJgK,EAAMvB,KAAO,QACb,MAAMwB,UAAgB3B,EAClB,MAAAvB,CAAO/G,GACH,MAAO,UAAYC,MAAM8G,OAAO/G,EACpC,EA8QJ,SAASqI,EAAStF,EAAOqG,GACrB,IAAK,MAAMjB,KAAKiB,EACZrG,EAAMoF,IAAMpF,EAAMoF,IAAM,IAAMiB,EAAKjB,IAAM,GAC7C,OAAOpF,CACX,CACA,SAASyE,EAAazE,EAAOqG,GACzB,OAAOA,aAAgB3D,EAAOhD,YAAc4F,EAAStF,EAAOqG,EAAKrG,OAASA,CAC9E,CACA,SAASqE,EAAatD,EAAMf,EAAOoE,GAC/B,OAAIrD,aAAgB2B,EAAO1G,KAChBmL,EAAYpG,IAmBFgF,EAlBJhF,aAmBQ2B,EAAOlD,OACxBuG,EAAE7F,OAAOkH,MAAM5G,GAAMA,aAAakC,EAAO1G,MAAyB,IAAjBgE,EAAMQ,EAAErE,WAAmCiC,IAArBgG,EAAU5D,EAAErE,OAlBpF,IAAIuG,EAAOlD,MAAMuB,EAAKb,OAAOK,QAAO,CAAC8G,EAAO7G,KAC3CA,aAAakC,EAAO1G,OACpBwE,EAAI2G,EAAY3G,IAChBA,aAAakC,EAAOlD,MACpB6H,EAAMxG,QAAQL,EAAEN,QAEhBmH,EAAMxG,KAAKL,GACR6G,IACR,KATQtG,EAiBX,IAAqBgF,EAPrB,SAASoB,EAAY/B,GACjB,MAAM5E,EAAI4D,EAAUgB,EAAEjJ,KACtB,YAAUiC,IAANoC,GAAoC,IAAjBR,EAAMoF,EAAEjJ,KACpBiJ,UACJpF,EAAMoF,EAAEjJ,KACRqE,EACX,CAKJ,CACA,SAAS6E,EAAcrF,EAAOqG,GAC1B,IAAK,MAAMjB,KAAKiB,EACZrG,EAAMoF,IAAMpF,EAAMoF,IAAM,IAAMiB,EAAKjB,IAAM,EACjD,CACA,SAAShD,EAAIf,GACT,MAAmB,kBAALA,GAA8B,iBAALA,GAAuB,OAANA,GAAcA,EAAQqB,EAAOtG,CAAG,IAAIkL,EAAIjG,IACpG,CApTA6F,EAAQxB,KAAO,UA2Qf/J,EAAQI,QA1QR,MACI,WAAAiB,CAAYuK,EAAUtK,EAAO,CAAC,GAC1BM,KAAKiK,QAAU,CAAC,EAChBjK,KAAKkK,aAAe,GACpBlK,KAAKoG,WAAa,CAAC,EACnBpG,KAAKN,KAAO,IAAKA,EAAMiH,GAAIjH,EAAKyK,MAAQ,KAAO,IAC/CnK,KAAKoK,UAAYJ,EACjBhK,KAAKqK,OAAS,IAAIjF,EAAQF,MAAM,CAAEoF,OAAQN,IAC1ChK,KAAKuK,OAAS,CAAC,IAAItC,EACvB,CACA,QAAA1F,GACI,OAAOvC,KAAKwK,MAAM/D,OAAOzG,KAAKN,KAClC,CAEA,IAAA6G,CAAKkE,GACD,OAAOzK,KAAKqK,OAAO9D,KAAKkE,EAC5B,CAEA,SAAAC,CAAUD,GACN,OAAOzK,KAAKoK,UAAU7D,KAAKkE,EAC/B,CAEA,UAAAE,CAAWC,EAAcvM,GACrB,MAAMkI,EAAOvG,KAAKoK,UAAU/L,MAAMuM,EAAcvM,GAGhD,OAFW2B,KAAKiK,QAAQ1D,EAAKkE,UAAYzK,KAAKiK,QAAQ1D,EAAKkE,QAAU,IAAII,MACtEC,IAAIvE,GACAA,CACX,CACA,aAAAwE,CAAcN,EAAQO,GAClB,OAAOhL,KAAKoK,UAAUa,SAASR,EAAQO,EAC3C,CAGA,SAAAE,CAAUR,GACN,OAAO1K,KAAKoK,UAAUc,UAAUR,EAAW1K,KAAKiK,QACpD,CACA,SAAAkB,GACI,OAAOnL,KAAKoK,UAAUe,UAAUnL,KAAKiK,QACzC,CACA,IAAAmB,CAAK9E,EAAS+E,EAAc7E,EAAK8E,GAC7B,MAAM/E,EAAOvG,KAAKqK,OAAOkB,OAAOF,GAIhC,YAHYxK,IAAR2F,GAAqB8E,IACrBtL,KAAKoG,WAAWG,EAAK3H,KAAO4H,GAChCxG,KAAKwL,UAAU,IAAInF,EAAIC,EAASC,EAAMC,IAC/BD,CACX,CAEA,MAAM8E,EAAc7E,EAAKiF,GACrB,OAAOzL,KAAKoL,KAAKhG,EAAQL,SAAS2G,MAAOL,EAAc7E,EAAKiF,EAChE,CAEA,IAAIJ,EAAc7E,EAAKiF,GACnB,OAAOzL,KAAKoL,KAAKhG,EAAQL,SAAS4G,IAAKN,EAAc7E,EAAKiF,EAC9D,CAEA,IAAIJ,EAAc7E,EAAKiF,GACnB,OAAOzL,KAAKoL,KAAKhG,EAAQL,SAAS6B,IAAKyE,EAAc7E,EAAKiF,EAC9D,CAEA,MAAAG,CAAO5E,EAAKR,EAAKS,GACb,OAAOjH,KAAKwL,UAAU,IAAIzE,EAAOC,EAAKR,EAAKS,GAC/C,CAEA,GAAA6D,CAAI9D,EAAKR,GACL,OAAOxG,KAAKwL,UAAU,IAAIrE,EAASH,EAAK5I,EAAQ0G,UAAUkB,IAAKQ,GACnE,CAEA,IAAA9D,CAAKO,GAKD,MAJgB,mBAALA,EACPA,IACKA,IAAMkC,EAAOzG,KAClBsB,KAAKwL,UAAU,IAAI9D,EAAQzE,IACxBjD,IACX,CAEA,MAAA6L,IAAUC,GACN,MAAMpJ,EAAO,CAAC,KACd,IAAK,MAAO+B,EAAKpG,KAAUyN,EACnBpJ,EAAKE,OAAS,GACdF,EAAKY,KAAK,KACdZ,EAAKY,KAAKmB,IACNA,IAAQpG,GAAS2B,KAAKN,KAAKgH,OAC3BhE,EAAKY,KAAK,MACV,EAAI6B,EAAOnD,YAAYU,EAAMrE,IAIrC,OADAqE,EAAKY,KAAK,KACH,IAAI6B,EAAOlD,MAAMS,EAC5B,CAEA,GAAG2F,EAAW0D,EAAUC,GAEpB,GADAhM,KAAKiM,WAAW,IAAI7D,EAAGC,IACnB0D,GAAYC,EACZhM,KAAK0C,KAAKqJ,GAAUzD,OAAO5F,KAAKsJ,GAAUE,aAEzC,GAAIH,EACL/L,KAAK0C,KAAKqJ,GAAUG,aAEnB,GAAIF,EACL,MAAM,IAAI1J,MAAM,4CAEpB,OAAOtC,IACX,CAEA,MAAAmM,CAAO9D,GACH,OAAOrI,KAAKoM,UAAU,IAAIhE,EAAGC,GACjC,CAEA,OACI,OAAOrI,KAAKoM,UAAU,IAAIlE,EAC9B,CAEA,KAAAgE,GACI,OAAOlM,KAAKqM,cAAcjE,EAAIF,EAClC,CACA,IAAAoE,CAAKC,EAAMC,GAIP,OAHAxM,KAAKiM,WAAWM,GACZC,GACAxM,KAAK0C,KAAK8J,GAASC,SAChBzM,IACX,CAEA,IAAI4I,EAAW4D,GACX,OAAOxM,KAAKsM,KAAK,IAAI3D,EAAQC,GAAY4D,EAC7C,CAEA,QAAAE,CAASrB,EAAcvC,EAAMC,EAAIyD,EAASlG,GAAUtG,KAAKN,KAAKgH,IAAMtB,EAAQL,SAAS6B,IAAMxB,EAAQL,SAAS4G,MACxG,MAAMpF,EAAOvG,KAAKqK,OAAOkB,OAAOF,GAChC,OAAOrL,KAAKsM,KAAK,IAAIzD,EAASvC,EAASC,EAAMuC,EAAMC,IAAK,IAAMyD,EAAQjG,IAC1E,CAEA,KAAAoG,CAAMtB,EAAcnC,EAAUsD,EAASlG,EAAUlB,EAAQL,SAAS2G,OAC9D,MAAMnF,EAAOvG,KAAKqK,OAAOkB,OAAOF,GAChC,GAAIrL,KAAKN,KAAKgH,IAAK,CACf,MAAMkG,EAAM1D,aAAoB/D,EAAO1G,KAAOyK,EAAWlJ,KAAK4G,IAAI,OAAQsC,GAC1E,OAAOlJ,KAAK0M,SAAS,KAAM,EAAOvH,EAAOtG,CAAG,GAAG+N,YAAevJ,IAC1DrD,KAAK4G,IAAIL,EAAUpB,EAAOtG,CAAG,GAAG+N,KAAOvJ,MACvCmJ,EAAQjG,EAAK,GAErB,CACA,OAAOvG,KAAKsM,KAAK,IAAItD,EAAQ,KAAM1C,EAASC,EAAM2C,IAAW,IAAMsD,EAAQjG,IAC/E,CAGA,KAAAsG,CAAMxB,EAAcyB,EAAKN,EAASlG,GAAUtG,KAAKN,KAAKgH,IAAMtB,EAAQL,SAAS6B,IAAMxB,EAAQL,SAAS2G,QAChG,GAAI1L,KAAKN,KAAKqN,cACV,OAAO/M,KAAK2M,MAAMtB,EAAkBlG,EAAOtG,CAAG,eAAeiO,KAAQN,GAEzE,MAAMjG,EAAOvG,KAAKqK,OAAOkB,OAAOF,GAChC,OAAOrL,KAAKsM,KAAK,IAAItD,EAAQ,KAAM1C,EAASC,EAAMuG,IAAM,IAAMN,EAAQjG,IAC1E,CAEA,MAAAkG,GACI,OAAOzM,KAAKqM,cAAc3D,EAC9B,CAEA,KAAApB,CAAMA,GACF,OAAOtH,KAAKwL,UAAU,IAAInE,EAAMC,GACpC,CAEA,MAAMA,GACF,OAAOtH,KAAKwL,UAAU,IAAIjE,EAAMD,GACpC,CAEA,OAAOjJ,GACH,MAAMkO,EAAO,IAAIlD,EAGjB,GAFArJ,KAAKiM,WAAWM,GAChBvM,KAAK0C,KAAKrE,GACgB,IAAtBkO,EAAK3E,MAAMhF,OACX,MAAM,IAAIN,MAAM,0CACpB,OAAOtC,KAAKqM,cAAchD,EAC9B,CAEA,IAAI2D,EAASC,EAAWC,GACpB,IAAKD,IAAcC,EACf,MAAM,IAAI5K,MAAM,gDACpB,MAAMiK,EAAO,IAAIjD,EAGjB,GAFAtJ,KAAKiM,WAAWM,GAChBvM,KAAK0C,KAAKsK,GACNC,EAAW,CACX,MAAMxF,EAAQzH,KAAKuG,KAAK,KACxBvG,KAAKmN,UAAYZ,EAAKhD,MAAQ,IAAIG,EAAMjC,GACxCwF,EAAUxF,EACd,CAKA,OAJIyF,IACAlN,KAAKmN,UAAYZ,EAAK/C,QAAU,IAAIG,EACpC3J,KAAK0C,KAAKwK,IAEPlN,KAAKqM,cAAc3C,EAAOC,EACrC,CAEA,MAAMlC,GACF,OAAOzH,KAAKwL,UAAU,IAAIhE,EAAMC,GACpC,CAEA,KAAA2F,CAAMC,EAAMC,GAIR,OAHAtN,KAAKkK,aAAa5G,KAAKtD,KAAKuK,OAAO3H,QAC/ByK,GACArN,KAAK0C,KAAK2K,GAAME,SAASD,GACtBtN,IACX,CAEA,QAAAuN,CAASD,GACL,MAAME,EAAMxN,KAAKkK,aAAauD,MAC9B,QAAY5M,IAAR2M,EACA,MAAM,IAAIlL,MAAM,wCACpB,MAAMoL,EAAU1N,KAAKuK,OAAO3H,OAAS4K,EACrC,GAAIE,EAAU,QAAoB7M,IAAdyM,GAA2BI,IAAYJ,EACvD,MAAM,IAAIhL,MAAM,mCAAmCoL,QAAcJ,cAGrE,OADAtN,KAAKuK,OAAO3H,OAAS4K,EACdxN,IACX,CAEA,IAAA2N,CAAKpH,EAAMnD,EAAO+B,EAAOzG,IAAK0K,EAAOwE,GAIjC,OAHA5N,KAAKiM,WAAW,IAAI9C,EAAK5C,EAAMnD,EAAMgG,IACjCwE,GACA5N,KAAK0C,KAAKkL,GAAUC,UACjB7N,IACX,CAEA,OAAA6N,GACI,OAAO7N,KAAKqM,cAAclD,EAC9B,CACA,QAAAvF,CAASiE,EAAI,GACT,KAAOA,KAAM,GACT7H,KAAKwK,MAAMtE,gBACXlG,KAAKwK,MAAMrE,cAAcnG,KAAKwK,MAAM/H,MAAOzC,KAAKoG,WAExD,CACA,SAAAoF,CAAUe,GAEN,OADAvM,KAAKmN,UAAUvF,MAAMtE,KAAKiJ,GACnBvM,IACX,CACA,UAAAiM,CAAWM,GACPvM,KAAKmN,UAAUvF,MAAMtE,KAAKiJ,GAC1BvM,KAAKuK,OAAOjH,KAAKiJ,EACrB,CACA,aAAAF,CAAcyB,EAAIC,GACd,MAAMlG,EAAI7H,KAAKmN,UACf,GAAItF,aAAaiG,GAAOC,GAAMlG,aAAakG,EAEvC,OADA/N,KAAKuK,OAAOkD,MACLzN,KAEX,MAAM,IAAIsC,MAAM,0BAA0ByL,EAAK,GAAGD,EAAG3F,QAAQ4F,EAAG5F,OAAS2F,EAAG3F,QAChF,CACA,SAAAiE,CAAUG,GACN,MAAM1E,EAAI7H,KAAKmN,UACf,KAAMtF,aAAaO,GACf,MAAM,IAAI9F,MAAM,gCAGpB,OADAtC,KAAKmN,UAAYtF,EAAES,KAAOiE,EACnBvM,IACX,CACA,SAAIwK,GACA,OAAOxK,KAAKuK,OAAO,EACvB,CACA,aAAI4C,GACA,MAAM1E,EAAKzI,KAAKuK,OAChB,OAAO9B,EAAGA,EAAG7F,OAAS,EAC1B,CACA,aAAIuK,CAAUZ,GACV,MAAM9D,EAAKzI,KAAKuK,OAChB9B,EAAGA,EAAG7F,OAAS,GAAK2J,CACxB,GA4CJnO,EAAQyG,IAAMA,EACd,MAAMmJ,EAAUC,EAAQ7P,EAAQ0G,UAAUiB,KAK1C3H,EAAQwG,IAHR,YAAgBxB,GACZ,OAAOA,EAAKJ,OAAOgL,EACvB,EAEA,MAAME,EAASD,EAAQ7P,EAAQ0G,UAAUgB,IAMzC,SAASmI,EAAQ7G,GACb,MAAO,CAACtD,EAAGqK,IAAOrK,IAAMqB,EAAOzG,IAAMyP,EAAIA,IAAMhJ,EAAOzG,IAAMoF,EAAQqB,EAAOtG,CAAG,GAAGkL,EAAIjG,MAAMsD,KAAM2C,EAAIoE,IACzG,CACA,SAASpE,EAAIjG,GACT,OAAOA,aAAaqB,EAAO1G,KAAOqF,EAAQqB,EAAOtG,CAAG,IAAIiF,IAC5D,CANA1F,EAAQuG,GAHR,YAAevB,GACX,OAAOA,EAAKJ,OAAOkL,EACvB,C,kBC/qBAhQ,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQ6G,WAAa7G,EAAQ4G,eAAiB5G,EAAQ8G,MAAQ9G,EAAQ2G,SAAW3G,EAAQgQ,oBAAiB,EAC1G,MAAMjJ,EAAS,EAAQ,OACvB,MAAMkJ,UAAmB/L,MACrB,WAAA7C,CAAY8G,GACR5G,MAAM,uBAAuB4G,iBAC7BvG,KAAK3B,MAAQkI,EAAKlI,KACtB,EAEJ,IAAI+P,GACJ,SAAWA,GACPA,EAAeA,EAAwB,QAAI,GAAK,UAChDA,EAAeA,EAA0B,UAAI,GAAK,WACrD,CAHD,CAGGA,EAAiBhQ,EAAQgQ,iBAAmBhQ,EAAQgQ,eAAiB,CAAC,IACzEhQ,EAAQ2G,SAAW,CACf2G,MAAO,IAAIvG,EAAO1G,KAAK,SACvBkN,IAAK,IAAIxG,EAAO1G,KAAK,OACrBmI,IAAK,IAAIzB,EAAO1G,KAAK,QAEzB,MAAMyG,EACF,WAAAzF,EAAY,SAAE6O,EAAQ,OAAEhE,GAAW,CAAC,GAChCtK,KAAKkD,OAAS,CAAC,EACflD,KAAKuO,UAAYD,EACjBtO,KAAKwO,QAAUlE,CACnB,CACA,MAAAiB,CAAOF,GACH,OAAOA,aAAwBlG,EAAO1G,KAAO4M,EAAerL,KAAKuG,KAAK8E,EAC1E,CACA,IAAA9E,CAAKkE,GACD,OAAO,IAAItF,EAAO1G,KAAKuB,KAAKyO,SAAShE,GACzC,CACA,QAAAgE,CAAShE,GAEL,MAAO,GAAGA,KADCzK,KAAKkD,OAAOuH,IAAWzK,KAAK0O,WAAWjE,IAC5BkE,SAC1B,CACA,UAAAD,CAAWjE,GACP,IAAI3H,EAAI2G,EACR,IAAsF,QAAhFA,EAA6B,QAAvB3G,EAAK9C,KAAKwO,eAA4B,IAAP1L,OAAgB,EAASA,EAAGyL,iBAA8B,IAAP9E,OAAgB,EAASA,EAAGmF,IAAInE,KAAazK,KAAKuO,YAAcvO,KAAKuO,UAAUK,IAAInE,GAC7K,MAAM,IAAInI,MAAM,oBAAoBmI,mCAExC,OAAQzK,KAAKkD,OAAOuH,GAAU,CAAEA,SAAQkE,MAAO,EACnD,EAEJvQ,EAAQ8G,MAAQA,EAChB,MAAMF,UAAuBG,EAAO1G,KAChC,WAAAgB,CAAYgL,EAAQoE,GAChBlP,MAAMkP,GACN7O,KAAKyK,OAASA,CAClB,CACA,QAAAqE,CAASzQ,GAAO,SAAE0Q,EAAQ,UAAEC,IACxBhP,KAAK3B,MAAQA,EACb2B,KAAKiP,UAAgB9J,EAAOtG,CAAG,IAAI,IAAIsG,EAAO1G,KAAKsQ,MAAaC,IACpE,EAEJ5Q,EAAQ4G,eAAiBA,EACzB,MAAMkK,EAAW/J,EAAOtG,CAAG,KAqF3BT,EAAQ6G,WApFR,cAAyBC,EACrB,WAAAzF,CAAYC,GACRC,MAAMD,GACNM,KAAKiK,QAAU,CAAC,EAChBjK,KAAKqK,OAAS3K,EAAKyP,MACnBnP,KAAKN,KAAO,IAAKA,EAAMiH,GAAIjH,EAAKyK,MAAQ+E,EAAO/J,EAAOzG,IAC1D,CACA,GAAAuC,GACI,OAAOjB,KAAKqK,MAChB,CACA,IAAA9D,CAAKkE,GACD,OAAO,IAAIzF,EAAeyF,EAAQzK,KAAKyO,SAAShE,GACpD,CACA,KAAApM,CAAMgN,EAAchN,GAChB,IAAIyE,EACJ,QAAkBjC,IAAdxC,EAAM+Q,IACN,MAAM,IAAI9M,MAAM,wCACpB,MAAMiE,EAAOvG,KAAKuL,OAAOF,IACnB,OAAEZ,GAAWlE,EACb8I,EAAgC,QAApBvM,EAAKzE,EAAMoG,WAAwB,IAAP3B,EAAgBA,EAAKzE,EAAM+Q,IACzE,IAAIE,EAAKtP,KAAKiK,QAAQQ,GACtB,GAAI6E,EAAI,CACJ,MAAMC,EAAQD,EAAGrO,IAAIoO,GACrB,GAAIE,EACA,OAAOA,CACf,MAEID,EAAKtP,KAAKiK,QAAQQ,GAAU,IAAI+E,IAEpCF,EAAGG,IAAIJ,EAAU9I,GACjB,MAAMnE,EAAIpC,KAAKqK,OAAOI,KAAYzK,KAAKqK,OAAOI,GAAU,IAClDuE,EAAY5M,EAAEQ,OAGpB,OAFAR,EAAE4M,GAAa3Q,EAAM+Q,IACrB7I,EAAKuI,SAASzQ,EAAO,CAAE0Q,SAAUtE,EAAQuE,cAClCzI,CACX,CACA,QAAA0E,CAASR,EAAQO,GACb,MAAMsE,EAAKtP,KAAKiK,QAAQQ,GACxB,GAAK6E,EAEL,OAAOA,EAAGrO,IAAI+J,EAClB,CACA,SAAAE,CAAUR,EAAWgF,EAAS1P,KAAKiK,SAC/B,OAAOjK,KAAK2P,cAAcD,GAASnJ,IAC/B,QAAuB1F,IAAnB0F,EAAK0I,UACL,MAAM,IAAI3M,MAAM,kBAAkBiE,mBACtC,OAAWpB,EAAOtG,CAAG,GAAG6L,IAAYnE,EAAK0I,WAAW,GAE5D,CACA,SAAA9D,CAAUuE,EAAS1P,KAAKiK,QAAS2F,EAAYC,GACzC,OAAO7P,KAAK2P,cAAcD,GAASnJ,IAC/B,QAAmB1F,IAAf0F,EAAKlI,MACL,MAAM,IAAIiE,MAAM,kBAAkBiE,mBACtC,OAAOA,EAAKlI,MAAMqE,IAAI,GACvBkN,EAAYC,EACnB,CACA,aAAAF,CAAcD,EAAQI,EAAWF,EAAa,CAAC,EAAGC,GAC9C,IAAInN,EAAOyC,EAAOzG,IAClB,IAAK,MAAM+L,KAAUiF,EAAQ,CACzB,MAAMJ,EAAKI,EAAOjF,GAClB,IAAK6E,EACD,SACJ,MAAMS,EAAWH,EAAWnF,GAAUmF,EAAWnF,IAAW,IAAI+E,IAChEF,EAAGpP,SAASqG,IACR,GAAIwJ,EAAQnB,IAAIrI,GACZ,OACJwJ,EAAQN,IAAIlJ,EAAM6H,EAAe4B,SACjC,IAAI/M,EAAI6M,EAAUvJ,GAClB,GAAItD,EAAG,CACH,MAAMgN,EAAMjQ,KAAKN,KAAKgH,IAAMtI,EAAQ2G,SAAS6B,IAAMxI,EAAQ2G,SAAS2G,MACpEhJ,EAAWyC,EAAOtG,CAAG,GAAG6D,IAAOuN,KAAO1J,OAAUtD,KAAKjD,KAAKN,KAAKiH,IACnE,KACK,MAAK1D,EAAI4M,aAAyC,EAASA,EAAQtJ,IAIpE,MAAM,IAAI8H,EAAW9H,GAHrB7D,EAAWyC,EAAOtG,CAAG,GAAG6D,IAAOO,IAAIjD,KAAKN,KAAKiH,IAIjD,CACAoJ,EAAQN,IAAIlJ,EAAM6H,EAAe8B,UAAU,GAEnD,CACA,OAAOxN,CACX,E,kBC1IJxE,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQ+R,aAAe/R,EAAQgS,iBAAmBhS,EAAQiS,iBAAmBjS,EAAQkS,YAAclS,EAAQmS,kBAAoBnS,EAAQoS,kBAAe,EACtJ,MAAMtP,EAAY,EAAQ,OACpBuP,EAAS,EAAQ,OACjBC,EAAU,EAAQ,OAoDxB,SAASC,EAASC,EAAKC,GACnB,MAAMC,EAAMF,EAAIlF,MAAM,MAAOmF,GAC7BD,EAAIG,GAAO7P,EAAUrC,CAAG,GAAG6R,EAAQlR,QAAQwR,oBAAoB,IAAMJ,EAAIhF,OAAO8E,EAAQlR,QAAQwR,QAAa9P,EAAUrC,CAAG,IAAIiS,OAAa5P,EAAUrC,CAAG,GAAG6R,EAAQlR,QAAQwR,gBAAgBF,MAC3LF,EAAIlO,KAASxB,EAAUrC,CAAG,GAAG6R,EAAQlR,QAAQyR,WACjD,CACA,SAASC,EAAaC,EAAIC,GACtB,MAAM,IAAER,EAAG,aAAES,EAAY,UAAEC,GAAcH,EACrCG,EAAUC,OACVX,EAAIY,MAAUtQ,EAAUrC,CAAG,OAAOsS,EAAG5S,mBAAmB6S,OAGxDR,EAAIhF,OAAW1K,EAAUrC,CAAG,GAAGwS,WAAuBD,GACtDR,EAAIa,QAAO,GAEnB,CAjEArT,EAAQoS,aAAe,CACnBkB,QAAS,EAAGC,aAAkBzQ,EAAUtC,GAAK,cAAc+S,yBAE/DvT,EAAQmS,kBAAoB,CACxBmB,QAAS,EAAGC,UAASC,gBAAiBA,EAC5B1Q,EAAUtC,GAAK,IAAI+S,sBAA4BC,YAC/C1Q,EAAUtC,GAAK,IAAI+S,iCAajCvT,EAAQkS,YAXR,SAAqBuB,EAAKpK,EAAQrJ,EAAQoS,aAAcsB,EAAYC,GAChE,MAAM,GAAEZ,GAAOU,GACT,IAAEjB,EAAG,cAAEoB,EAAa,UAAEC,GAAcd,EACpCN,EAASqB,EAAgBL,EAAKpK,EAAOqK,IACvCC,QAA6DA,EAAqBC,GAAiBC,GACnGtB,EAASC,EAAKC,GAGdK,EAAaC,EAAQjQ,EAAUrC,CAAG,IAAIgS,KAE9C,EAWAzS,EAAQiS,iBATR,SAA0BwB,EAAKpK,EAAQrJ,EAAQoS,aAAcsB,GACzD,MAAM,GAAEX,GAAOU,GACT,IAAEjB,EAAG,cAAEoB,EAAa,UAAEC,GAAcd,EAE1CR,EAASC,EADMsB,EAAgBL,EAAKpK,EAAOqK,IAErCE,GAAiBC,GACnBf,EAAaC,EAAIT,EAAQlR,QAAQwR,QAEzC,EAMA5S,EAAQgS,iBAJR,SAA0BQ,EAAKuB,GAC3BvB,EAAIhF,OAAO8E,EAAQlR,QAAQyR,OAAQkB,GACnCvB,EAAIG,GAAO7P,EAAUrC,CAAG,GAAG6R,EAAQlR,QAAQwR,oBAAoB,IAAMJ,EAAIG,GAAGoB,GAAW,IAAMvB,EAAIhF,OAAW1K,EAAUrC,CAAG,GAAG6R,EAAQlR,QAAQwR,iBAAkBmB,KAAY,IAAMvB,EAAIhF,OAAO8E,EAAQlR,QAAQwR,QAAS,SACxN,EAiBA5S,EAAQ+R,aAfR,UAAsB,IAAES,EAAG,QAAEe,EAAO,YAAES,EAAW,KAAEC,EAAI,UAAEF,EAAS,GAAEhB,IAEhE,QAAkBtQ,IAAdsR,EACA,MAAM,IAAI7P,MAAM,4BACpB,MAAMwO,EAAMF,EAAIrK,KAAK,OACrBqK,EAAIlE,SAAS,IAAKyF,EAAWzB,EAAQlR,QAAQyR,QAAS5N,IAClDuN,EAAIlF,MAAMoF,EAAS5P,EAAUrC,CAAG,GAAG6R,EAAQlR,QAAQwR,WAAW3N,MAC9DuN,EAAIG,GAAO7P,EAAUrC,CAAG,GAAGiS,gCAAkC,IAAMF,EAAIhF,OAAW1K,EAAUrC,CAAG,GAAGiS,kBAAoB,EAAI5P,EAAUa,WAAW2O,EAAQlR,QAAQ8S,aAAcnB,EAAGoB,cAChL3B,EAAIhF,OAAW1K,EAAUrC,CAAG,GAAGiS,eAAsB5P,EAAUtC,GAAK,GAAGuS,EAAGqB,iBAAiBb,KACvFR,EAAGzR,KAAK+S,UACR7B,EAAIhF,OAAW1K,EAAUrC,CAAG,GAAGiS,WAAcsB,GAC7CxB,EAAIhF,OAAW1K,EAAUrC,CAAG,GAAGiS,SAAYuB,GAC/C,GAER,EAiBA,MAAMK,EAAI,CACNf,QAAS,IAAIzQ,EAAUzC,KAAK,WAC5BkU,WAAY,IAAIzR,EAAUzC,KAAK,cAC/BmU,OAAQ,IAAI1R,EAAUzC,KAAK,UAC3BoU,aAAc,IAAI3R,EAAUzC,KAAK,gBACjCiT,QAAS,IAAIxQ,EAAUzC,KAAK,WAC5BqU,OAAQ,IAAI5R,EAAUzC,KAAK,UAC3BsU,aAAc,IAAI7R,EAAUzC,KAAK,iBAErC,SAASyT,EAAgBL,EAAKpK,EAAOqK,GACjC,MAAM,aAAEkB,GAAiBnB,EAAIV,GAC7B,OAAqB,IAAjB6B,EACW9R,EAAUrC,CAAG,KAGhC,SAAqBgT,EAAKpK,EAAOqK,EAAa,CAAC,GAC3C,MAAM,IAAElB,EAAG,GAAEO,GAAOU,EACd/F,EAAY,CACdmH,EAAkB9B,EAAIW,GACtBoB,EAAgBrB,EAAKC,IAGzB,OAeJ,SAAyBD,GAAK,OAAEe,EAAM,QAAElB,GAAW5F,GAC/C,MAAM,QAAE6F,EAAO,KAAEU,EAAI,YAAED,EAAW,GAAEjB,GAAOU,GACrC,KAAEnS,EAAI,aAAEmT,EAAY,aAAEM,EAAY,WAAER,GAAexB,EACzDrF,EAAUxI,KAAK,CAACoP,EAAEf,QAASA,GAAU,CAACe,EAAEE,OAAyB,mBAAVA,EAAuBA,EAAOf,GAAOe,GAAc1R,EAAUrC,CAAG,OACnHa,EAAK0T,UACLtH,EAAUxI,KAAK,CAACoP,EAAEhB,QAA2B,mBAAXA,EAAwBA,EAAQG,GAAOH,IAEzEhS,EAAK+S,SACL3G,EAAUxI,KAAK,CAACoP,EAAEI,OAAQV,GAAc,CAACM,EAAEK,aAAkB7R,EAAUrC,CAAG,GAAGsU,IAAeR,KAAe,CAACjC,EAAQlR,QAAQ6S,KAAMA,IAElIQ,GACA/G,EAAUxI,KAAK,CAACoP,EAAEG,aAAcA,GACxC,CA5BIQ,CAAgBxB,EAAKpK,EAAOqE,GACrB8E,EAAI/E,UAAUC,EACzB,CAVWwH,CAAYzB,EAAKpK,EAAOqK,EACnC,CAUA,SAASmB,GAAkB,UAAEV,IAAa,aAAED,IACxC,MAAMiB,EAAWjB,EACPpR,EAAUtC,GAAK,GAAG2T,KAAY,EAAI9B,EAAO+C,cAAclB,EAAc7B,EAAOgD,KAAKC,OACrFnB,EACN,MAAO,CAAC7B,EAAQlR,QAAQ8S,cAAc,EAAIpR,EAAUa,WAAW2O,EAAQlR,QAAQ8S,aAAciB,GACjG,CACA,SAASL,GAAgB,QAAEvB,EAASR,IAAI,cAAEqB,KAAmB,WAAEG,EAAU,aAAEI,IACvE,IAAIY,EAAUZ,EAAeP,EAAoBtR,EAAUtC,GAAK,GAAG4T,KAAiBb,IAIpF,OAHIgB,IACAgB,EAAczS,EAAUtC,GAAK,GAAG+U,KAAU,EAAIlD,EAAO+C,cAAcb,EAAYlC,EAAOgD,KAAKC,QAExF,CAAChB,EAAEC,WAAYgB,EAC1B,C,kBC3GAzV,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQwV,cAAgBxV,EAAQyV,mBAAqBzV,EAAQ0V,WAAa1V,EAAQ2V,cAAgB3V,EAAQ4V,eAAY,EACtH,MAAM9S,EAAY,EAAQ,OACpBC,EAAqB,EAAQ,OAC7BuP,EAAU,EAAQ,OAClBuD,EAAY,EAAQ,OACpBxD,EAAS,EAAQ,OACjB1P,EAAa,EAAQ,OAC3B,MAAMiT,EACF,WAAAvU,CAAYyU,GACR,IAAIpR,EAGJ,IAAIgQ,EAFJ9S,KAAKU,KAAO,CAAC,EACbV,KAAKmU,eAAiB,CAAC,EAEE,iBAAdD,EAAIpB,SACXA,EAASoB,EAAIpB,QACjB9S,KAAK8S,OAASoB,EAAIpB,OAClB9S,KAAKoU,SAAWF,EAAIE,SACpBpU,KAAKqU,KAAOH,EAAIG,MAAQrU,KACxBA,KAAKsU,OAA+B,QAArBxR,EAAKoR,EAAII,cAA2B,IAAPxR,EAAgBA,GAAK,EAAImR,EAAUM,aAAazB,aAAuC,EAASA,EAAOoB,EAAIE,UAAY,QACnKpU,KAAK2S,WAAauB,EAAIvB,WACtB3S,KAAKwU,UAAYN,EAAIM,UACrBxU,KAAKQ,KAAO0T,EAAI1T,KAChBR,KAAKuR,OAASuB,aAAuC,EAASA,EAAOvB,OACrEvR,KAAKU,KAAO,CAAC,CACjB,EAMJ,SAASqT,EAAcU,GAEnB,MAAMC,EAAOb,EAAmBpT,KAAKT,KAAMyU,GAC3C,GAAIC,EACA,OAAOA,EACX,MAAMC,GAAS,EAAIV,EAAUW,aAAa5U,KAAKN,KAAKmV,YAAaJ,EAAIJ,KAAKC,SACpE,IAAE5N,EAAG,MAAEyD,GAAUnK,KAAKN,KAAKgD,MAC3B,cAAEqK,GAAkB/M,KAAKN,KACzBkR,EAAM,IAAI1P,EAAU1C,QAAQwB,KAAKmP,MAAO,CAAEzI,MAAKyD,QAAO4C,kBAC5D,IAAI+H,EACAL,EAAIlD,SACJuD,EAAmBlE,EAAIjG,WAAW,QAAS,CACvCyE,IAAKjO,EAAmB3B,QACxBkD,KAAUxB,EAAUrC,CAAG,0DAG/B,MAAMwS,EAAeT,EAAIlG,UAAU,YACnC+J,EAAIpD,aAAeA,EACnB,MAAM0D,EAAY,CACdnE,MACAqB,UAAWjS,KAAKN,KAAKuS,UACrBI,KAAM3B,EAAQlR,QAAQ6S,KACtB2C,WAAYtE,EAAQlR,QAAQwV,WAC5BC,mBAAoBvE,EAAQlR,QAAQyV,mBACpCC,UAAW,CAACxE,EAAQlR,QAAQ6S,MAC5B8C,YAAa,CAACjU,EAAUxC,KACxB0W,UAAW,EACXC,UAAW,GACXC,kBAAmB,IAAIzK,IACvBsI,aAAcvC,EAAIjG,WAAW,UAAoC,IAA1B3K,KAAKN,KAAKgD,KAAK6S,OAChD,CAAEnG,IAAKqF,EAAI3B,OAAQpQ,MAAM,EAAIxB,EAAUvC,WAAW8V,EAAI3B,SACtD,CAAE1D,IAAKqF,EAAI3B,SACjBzB,eACA9S,gBAAiBuW,EACjBhC,OAAQ2B,EAAI3B,OACZxB,UAAWmD,EACXE,SACAL,OAAQG,EAAIH,QAAUK,EACtBhC,WAAYzR,EAAUxC,IACtB8T,cAAeiC,EAAI9B,aAAe3S,KAAKN,KAAK8V,IAAM,GAAK,KACvDjD,UAAerR,EAAUrC,CAAG,KAC5Ba,KAAMM,KAAKN,KACX+V,KAAMzV,MAEV,IAAI0V,EACJ,IACI1V,KAAK2V,cAAc7K,IAAI2J,IACvB,EAAI1T,EAAW6U,sBAAsBb,GACrCnE,EAAIhN,SAAS5D,KAAKN,KAAKgD,KAAKkB,UAE5B,MAAMiS,EAAejF,EAAIrO,WACzBmT,EAAa,GAAG9E,EAAI1F,UAAUwF,EAAQlR,QAAQ2P,gBAAgB0G,IAE1D7V,KAAKN,KAAKgD,KAAKoT,UACfJ,EAAa1V,KAAKN,KAAKgD,KAAKoT,QAAQJ,EAAYjB,IAEpD,MACMsB,EADe,IAAIC,SAAS,GAAGtF,EAAQlR,QAAQiW,OAAQ,GAAG/E,EAAQlR,QAAQ2P,QAASuG,EACxEO,CAAajW,KAAMA,KAAKmP,MAAMlO,OAU/C,GATAjB,KAAKmP,MAAM9Q,MAAMgT,EAAc,CAAEjC,IAAK2G,IACtCA,EAAS9E,OAAS,KAClB8E,EAASjD,OAAS2B,EAAI3B,OACtBiD,EAASzE,UAAYmD,EACjBA,EAAIlD,SACJwE,EAASxE,QAAS,IACQ,IAA1BvR,KAAKN,KAAKgD,KAAK6S,SACfQ,EAASR,OAAS,CAAElE,eAAcwE,eAAcK,YAAatF,EAAI3G,UAEjEjK,KAAKN,KAAKI,YAAa,CACvB,MAAM,MAAEqW,EAAK,MAAErM,GAAUiL,EACzBgB,EAASK,UAAY,CACjBD,MAAOA,aAAiBjV,EAAUzC,UAAOoC,EAAYsV,EACrDrM,MAAOA,aAAiB5I,EAAUzC,UAAOoC,EAAYiJ,EACrDuM,aAAcF,aAAiBjV,EAAUzC,KACzC6X,aAAcxM,aAAiB5I,EAAUzC,MAEzCsX,EAASR,SACTQ,EAASR,OAAOa,WAAY,EAAIlV,EAAUvC,WAAWoX,EAASK,WACtE,CAEA,OADA3B,EAAIsB,SAAWA,EACRtB,CACX,CACA,MAAOjM,GAMH,aALOiM,EAAIsB,gBACJtB,EAAIpD,aACPqE,GACA1V,KAAKuW,OAAO9O,MAAM,yCAA0CiO,GAE1DlN,CACV,CACA,QACIxI,KAAK2V,cAAca,OAAO/B,EAC9B,CACJ,CAoBA,SAASgC,EAAgBhC,GACrB,OAAI,EAAIR,EAAUyC,WAAWjC,EAAI3B,OAAQ9S,KAAKN,KAAKiX,YACxClC,EAAI3B,OACR2B,EAAIsB,SAAWtB,EAAMV,EAActT,KAAKT,KAAMyU,EACzD,CAEA,SAASZ,EAAmB+C,GACxB,IAAK,MAAMnC,KAAOzU,KAAK2V,cACnB,GAKmBkB,EALID,GAKRE,EALGrC,GAMZ3B,SAAW+D,EAAG/D,QAAUgE,EAAGzC,OAASwC,EAAGxC,MAAQyC,EAAGxC,SAAWuC,EAAGvC,OALlE,OAAOG,EAInB,IAAuBqC,EAAID,CAF3B,CAOA,SAASE,EAAQ1C,EACjBjF,GAEI,IAAIqF,EACJ,KAAwC,iBAAzBA,EAAMzU,KAAKU,KAAK0O,KAC3BA,EAAMqF,EACV,OAAOA,GAAOzU,KAAKgX,QAAQ5H,IAAQwE,EAAcnT,KAAKT,KAAMqU,EAAMjF,EACtE,CAEA,SAASwE,EAAcS,EACvBjF,GAEI,MAAM6H,EAAIjX,KAAKN,KAAKmV,YAAYqC,MAAM9H,GAChC+H,GAAU,EAAIlD,EAAUmD,cAAcpX,KAAKN,KAAKmV,YAAaoC,GACnE,IAAI3C,GAAS,EAAIL,EAAUW,aAAa5U,KAAKN,KAAKmV,YAAaR,EAAKC,YAAQzT,GAE5E,GAAI3C,OAAOmZ,KAAKhD,EAAKvB,QAAQlQ,OAAS,GAAKuU,IAAY7C,EACnD,OAAOgD,EAAe7W,KAAKT,KAAMiX,EAAG5C,GAExC,MAAMkD,GAAK,EAAItD,EAAUM,aAAa4C,GAChCK,EAAWxX,KAAKU,KAAK6W,IAAOvX,KAAKgX,QAAQO,GAC/C,GAAuB,iBAAZC,EAAsB,CAC7B,MAAM/C,EAAMb,EAAcnT,KAAKT,KAAMqU,EAAMmD,GAC3C,GAAsE,iBAA1D/C,aAAiC,EAASA,EAAI3B,QACtD,OACJ,OAAOwE,EAAe7W,KAAKT,KAAMiX,EAAGxC,EACxC,CACA,GAAqF,iBAAzE+C,aAA2C,EAASA,EAAS1E,QAAzE,CAIA,GAFK0E,EAASzB,UACVhC,EAActT,KAAKT,KAAMwX,GACzBD,KAAO,EAAItD,EAAUM,aAAanF,GAAM,CACxC,MAAM,OAAE0D,GAAW0E,GACb,SAAEpD,GAAapU,KAAKN,KACpB+X,EAAQ3E,EAAOsB,GAGrB,OAFIqD,IACAnD,GAAS,EAAIL,EAAUyD,YAAY1X,KAAKN,KAAKmV,YAAaP,EAAQmD,IAC/D,IAAIzD,EAAU,CAAElB,SAAQsB,WAAUC,OAAMC,UACnD,CACA,OAAOgD,EAAe7W,KAAKT,KAAMiX,EAAGO,EAX1B,CAYd,CA9KApZ,EAAQ4V,UAAYA,EAiGpB5V,EAAQ2V,cAAgBA,EAkBxB3V,EAAQ0V,WAjBR,SAAoBO,EAAMC,EAAQlF,GAC9B,IAAItM,EACJsM,GAAM,EAAI6E,EAAUyD,YAAY1X,KAAKN,KAAKmV,YAAaP,EAAQlF,GAC/D,MAAMuI,EAAYtD,EAAK3T,KAAK0O,GAC5B,GAAIuI,EACA,OAAOA,EACX,IAAIjD,EAAOqC,EAAQtW,KAAKT,KAAMqU,EAAMjF,GACpC,QAAavO,IAAT6T,EAAoB,CACpB,MAAM5B,EAAmC,QAAzBhQ,EAAKuR,EAAKG,iBAA8B,IAAP1R,OAAgB,EAASA,EAAGsM,IACvE,SAAEgF,GAAapU,KAAKN,KACtBoT,IACA4B,EAAO,IAAIV,EAAU,CAAElB,SAAQsB,WAAUC,OAAMC,WACvD,CACA,YAAazT,IAAT6T,EAEIL,EAAK3T,KAAK0O,GAAOqH,EAAgBhW,KAAKT,KAAM0U,QAFpD,CAGJ,EAcAtW,EAAQyV,mBAAqBA,EA+C7BzV,EAAQwV,cAAgBA,EACxB,MAAMgE,EAAuB,IAAI/M,IAAI,CACjC,aACA,oBACA,OACA,eACA,gBAEJ,SAASyM,EAAeO,GAAW,OAAEvD,EAAM,OAAExB,EAAM,KAAEuB,IACjD,IAAIvR,EACJ,GAA+E,OAA5C,QAA7BA,EAAK+U,EAAUC,gBAA6B,IAAPhV,OAAgB,EAASA,EAAG,IACnE,OACJ,IAAK,MAAMiV,KAAQF,EAAUC,SAAS1T,MAAM,GAAG4T,MAAM,KAAM,CACvD,GAAsB,kBAAXlF,EACP,OACJ,MAAMmF,EAAanF,GAAO,EAAIrC,EAAOyH,kBAAkBH,IACvD,QAAmBlX,IAAfoX,EACA,OAGJ,MAAMR,EAA0B,iBAFhC3E,EAASmF,IAEmCnF,EAAO9S,KAAKN,KAAK0U,WACxDwD,EAAqBhJ,IAAImJ,IAASN,IACnCnD,GAAS,EAAIL,EAAUyD,YAAY1X,KAAKN,KAAKmV,YAAaP,EAAQmD,GAE1E,CACA,IAAIvD,EACJ,GAAqB,kBAAVpB,GAAuBA,EAAOqF,QAAS,EAAI1H,EAAO2H,sBAAsBtF,EAAQ9S,KAAKqY,OAAQ,CACpG,MAAMF,GAAO,EAAIlE,EAAUyD,YAAY1X,KAAKN,KAAKmV,YAAaP,EAAQxB,EAAOqF,MAC7EjE,EAAMN,EAAcnT,KAAKT,KAAMqU,EAAM8D,EACzC,CAGA,MAAM,SAAE/D,GAAapU,KAAKN,KAE1B,OADAwU,EAAMA,GAAO,IAAIF,EAAU,CAAElB,SAAQsB,WAAUC,OAAMC,WACjDJ,EAAIpB,SAAWoB,EAAIG,KAAKvB,OACjBoB,OADX,CAGJ,C,kBC/OAhW,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtD,MAAM6C,EAAY,EAAQ,OACpBuB,EAAQ,CAEV4P,KAAM,IAAInR,EAAUzC,KAAK,QAEzB6Z,OAAQ,IAAIpX,EAAUzC,KAAK,UAC3B6T,aAAc,IAAIpR,EAAUzC,KAAK,gBACjCuW,WAAY,IAAI9T,EAAUzC,KAAK,cAC/BwW,mBAAoB,IAAI/T,EAAUzC,KAAK,sBACvC8Z,SAAU,IAAIrX,EAAUzC,KAAK,YAC7B0V,eAAgB,IAAIjT,EAAUzC,KAAK,kBAEnCuS,QAAS,IAAI9P,EAAUzC,KAAK,WAC5BwS,OAAQ,IAAI/P,EAAUzC,KAAK,UAC3BuB,KAAM,IAAIkB,EAAUzC,KAAK,QAEzBgX,KAAM,IAAIvU,EAAUzC,KAAK,QACzB0Q,MAAO,IAAIjO,EAAUzC,KAAK,SAE1B+Z,KAAM,IAAItX,EAAUzC,KAAK,QACzBga,QAAS,IAAIvX,EAAUzC,KAAK,WAC5Bia,QAAS,IAAIxX,EAAUzC,KAAK,WAC5Bka,SAAU,IAAIzX,EAAUzC,KAAK,aAEjCL,EAAA,QAAkBqE,C,kBCzBlBvE,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtD,MAAM4V,EAAY,EAAQ,OAC1B,MAAM3V,UAAwBgE,MAC1B,WAAA7C,CAAYmZ,EAAUtE,EAAQlF,EAAKyJ,GAC/BlZ,MAAMkZ,GAAO,2BAA2BzJ,aAAekF,KACvDtU,KAAK8Y,YAAa,EAAI7E,EAAUyD,YAAYkB,EAAUtE,EAAQlF,GAC9DpP,KAAK+Y,eAAgB,EAAI9E,EAAUM,cAAa,EAAIN,EAAUW,aAAagE,EAAU5Y,KAAK8Y,YAC9F,EAEJ1a,EAAA,QAAkBE,C,kBCTlBJ,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQ4a,cAAgB5a,EAAQsZ,WAAatZ,EAAQmW,YAAcnW,EAAQgZ,aAAehZ,EAAQwW,YAAcxW,EAAQsY,eAAY,EACpI,MAAMjG,EAAS,EAAQ,OACjBwI,EAAQ,EAAQ,OAChBC,EAAW,EAAQ,MAEnBC,EAAiB,IAAItO,IAAI,CAC3B,OACA,SACA,UACA,YACA,YACA,gBACA,gBACA,WACA,WACA,UACA,UACA,cACA,aACA,WACA,OACA,UAWJzM,EAAQsY,UATR,SAAmB5D,EAAQsG,GAAQ,GAC/B,MAAqB,kBAAVtG,KAEG,IAAVsG,GACQC,EAAOvG,KACdsG,GAEEE,EAAUxG,IAAWsG,EAChC,EAEA,MAAMG,EAAe,IAAI1O,IAAI,CACzB,OACA,gBACA,mBACA,cACA,mBAEJ,SAASwO,EAAOvG,GACZ,IAAK,MAAMrO,KAAOqO,EAAQ,CACtB,GAAIyG,EAAa3K,IAAInK,GACjB,OAAO,EACX,MAAMgQ,EAAM3B,EAAOrO,GACnB,GAAIV,MAAMC,QAAQyQ,IAAQA,EAAI5K,KAAKwP,GAC/B,OAAO,EACX,GAAkB,iBAAP5E,GAAmB4E,EAAO5E,GACjC,OAAO,CACf,CACA,OAAO,CACX,CACA,SAAS6E,EAAUxG,GACf,IAAI0G,EAAQ,EACZ,IAAK,MAAM/U,KAAOqO,EAAQ,CACtB,GAAY,SAARrO,EACA,OAAOgV,IAEX,GADAD,KACIL,EAAevK,IAAInK,KAEG,iBAAfqO,EAAOrO,KACd,EAAIgM,EAAOiJ,UAAU5G,EAAOrO,IAAOgQ,GAAS+E,GAASF,EAAU7E,KAE/D+E,IAAUC,KACV,OAAOA,GACf,CACA,OAAOD,CACX,CACA,SAAS5E,EAAYgE,EAAUrB,EAAK,GAAIoC,IAClB,IAAdA,IACApC,EAAKhD,EAAYgD,IACrB,MAAMN,EAAI2B,EAAS1B,MAAMK,GACzB,OAAOH,EAAawB,EAAU3B,EAClC,CAEA,SAASG,EAAawB,EAAU3B,GAE5B,OADmB2B,EAASgB,UAAU3C,GACpBe,MAAM,KAAK,GAAK,GACtC,CAJA5Z,EAAQwW,YAAcA,EAKtBxW,EAAQgZ,aAAeA,EACvB,MAAMyC,EAAsB,QAC5B,SAAStF,EAAYgD,GACjB,OAAOA,EAAKA,EAAGjT,QAAQuV,EAAqB,IAAM,EACtD,CACAzb,EAAQmW,YAAcA,EAKtBnW,EAAQsZ,WAJR,SAAoBkB,EAAUtE,EAAQiD,GAElC,OADAA,EAAKhD,EAAYgD,GACVqB,EAAS7B,QAAQzC,EAAQiD,EACpC,EAEA,MAAMuC,EAAS,wBA6Df1b,EAAQ4a,cA5DR,SAAuBlG,EAAQwB,GAC3B,GAAqB,kBAAVxB,EACP,MAAO,CAAC,EACZ,MAAM,SAAEsB,EAAQ,YAAES,GAAgB7U,KAAKN,KACjC+X,EAAQlD,EAAYzB,EAAOsB,IAAaE,GACxCyF,EAAU,CAAE,GAAItC,GAChBuC,EAAapF,EAAYC,EAAa4C,GAAO,GAC7CjD,EAAY,CAAC,EACbyF,EAAa,IAAIpP,IA2CvB,OA1CAqO,EAASpG,EAAQ,CAAEoH,SAAS,IAAQ,CAACzF,EAAK0F,EAAStb,EAAGub,KAClD,QAAsBvZ,IAAlBuZ,EACA,OACJ,MAAMC,EAAWL,EAAaG,EAC9B,IAAI7F,EAASyF,EAAQK,GAMrB,SAASE,EAAOlL,GAEZ,MAAMmL,EAAWva,KAAKN,KAAKmV,YAAYkC,QAEvC,GADA3H,EAAMmF,EAAYD,EAASiG,EAASjG,EAAQlF,GAAOA,GAC/C6K,EAAWrL,IAAIQ,GACf,MAAMoL,EAASpL,GACnB6K,EAAWnP,IAAIsE,GACf,IAAIoI,EAAWxX,KAAKU,KAAK0O,GAezB,MAduB,iBAAZoI,IACPA,EAAWxX,KAAKU,KAAK8W,IACF,iBAAZA,EACPiD,EAAiBhG,EAAK+C,EAAS1E,OAAQ1D,GAElCA,IAAQmF,EAAY8F,KACV,MAAXjL,EAAI,IACJqL,EAAiBhG,EAAKD,EAAUpF,GAAMA,GACtCoF,EAAUpF,GAAOqF,GAGjBzU,KAAKU,KAAK0O,GAAOiL,GAGlBjL,CACX,CACA,SAASsL,EAAUC,GACf,GAAqB,iBAAVA,EAAoB,CAC3B,IAAKb,EAAOzX,KAAKsY,GACb,MAAM,IAAIrY,MAAM,mBAAmBqY,MACvCL,EAAO7Z,KAAKT,KAAM,IAAI2a,IAC1B,CACJ,CAnC4B,iBAAjBlG,EAAIL,KACXE,EAASgG,EAAO7Z,KAAKT,KAAMyU,EAAIL,KACnCsG,EAAUja,KAAKT,KAAMyU,EAAImG,SACzBF,EAAUja,KAAKT,KAAMyU,EAAIoG,gBACzBd,EAAQI,GAAW7F,CA+BnB,IAEGE,EACP,SAASiG,EAAiBK,EAAMC,EAAM3L,GAClC,QAAavO,IAATka,IAAuB9B,EAAM6B,EAAMC,GACnC,MAAMP,EAASpL,EACvB,CACA,SAASoL,EAASpL,GACd,OAAO,IAAI9M,MAAM,cAAc8M,sCACnC,CACJ,C,gBCvJAlR,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQ4c,SAAW5c,EAAQ6c,gBAAa,EACxC,MACMC,EAAY,IAAIrQ,IADH,CAAC,SAAU,SAAU,UAAW,UAAW,OAAQ,SAAU,UAKhFzM,EAAQ6c,WAHR,SAAoBnX,GAChB,MAAmB,iBAALA,GAAiBoX,EAAUtM,IAAI9K,EACjD,EAiBA1F,EAAQ4c,SAfR,WACI,MAAMG,EAAS,CACXC,OAAQ,CAAEC,KAAM,SAAUC,MAAO,IACjCC,OAAQ,CAAEF,KAAM,SAAUC,MAAO,IACjCE,MAAO,CAAEH,KAAM,QAASC,MAAO,IAC/BzP,OAAQ,CAAEwP,KAAM,SAAUC,MAAO,KAErC,MAAO,CACHG,MAAO,IAAKN,EAAQO,SAAS,EAAMC,SAAS,EAAMC,MAAM,GACxDN,MAAO,CAAC,CAAEA,MAAO,IAAMH,EAAOC,OAAQD,EAAOI,OAAQJ,EAAOK,MAAOL,EAAOtP,QAC1EgQ,KAAM,CAAEP,MAAO,IACfQ,IAAK,CAAC,EACNC,SAAU,CAAC,EAEnB,C,kBCtBA7d,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQ4d,gBAAkB5d,EAAQoV,aAAepV,EAAQqV,KAAOrV,EAAQ6d,QAAU7d,EAAQ8d,aAAe9d,EAAQ+d,qBAAuB/d,EAAQge,eAAiBhe,EAAQsb,SAAWtb,EAAQie,oBAAsBje,EAAQke,kBAAoBle,EAAQme,eAAiBne,EAAQ8Z,iBAAmB9Z,EAAQoe,eAAiBpe,EAAQga,qBAAuBha,EAAQqe,eAAiBre,EAAQse,kBAAoBte,EAAQue,kBAAoBve,EAAQwe,YAAS,EAC5b,MAAM1b,EAAY,EAAQ,OACpBiE,EAAS,EAAQ,OAkBvB,SAASuX,EAAkBvL,EAAI2B,EAAS3B,EAAG2B,QACvC,MAAM,KAAEpT,EAAI,KAAE+V,GAAStE,EACvB,IAAKzR,EAAKmd,aACN,OACJ,GAAsB,kBAAX/J,EACP,OACJ,MAAMwI,EAAQ7F,EAAK4C,MAAM0D,SACzB,IAAK,MAAMtX,KAAOqO,EACTwI,EAAM7W,IACPuX,EAAgB7K,EAAI,qBAAqB1M,KAErD,CAEA,SAASgY,EAAe3J,EAAQwI,GAC5B,GAAqB,kBAAVxI,EACP,OAAQA,EACZ,IAAK,MAAMrO,KAAOqO,EACd,GAAIwI,EAAM7W,GACN,OAAO,EACf,OAAO,CACX,CA6BA,SAAS6X,EAAkB1d,GACvB,MAAkB,iBAAPA,EACA,GAAGA,IACPA,EAAI0F,QAAQ,KAAM,MAAMA,QAAQ,MAAO,KAClD,CAEA,SAAS+X,EAAoBzd,GACzB,OAAOA,EAAI0F,QAAQ,MAAO,KAAKA,QAAQ,MAAO,IAClD,CAYA,SAASwY,GAAmB,WAAEC,EAAU,YAAEC,EAAW,YAAEC,EAAW,aAAEC,IAChE,MAAO,CAACtM,EAAK9H,EAAMC,EAAIwC,KACnB,MAAM9H,OAAa5C,IAAPkI,EACND,EACAC,aAAc7H,EAAUzC,MACnBqK,aAAgB5H,EAAUzC,KAAOse,EAAWnM,EAAK9H,EAAMC,GAAMiU,EAAYpM,EAAK9H,EAAMC,GAAKA,GAC1FD,aAAgB5H,EAAUzC,MACrBue,EAAYpM,EAAK7H,EAAID,GAAOA,GAC7BmU,EAAYnU,EAAMC,GAChC,OAAOwC,IAAWrK,EAAUzC,MAAUgF,aAAevC,EAAUzC,KAAiCgF,EAAzByZ,EAAatM,EAAKnN,EAAU,CAE3G,CAyBA,SAAS0Y,EAAqBvL,EAAKuM,GAC/B,IAAW,IAAPA,EACA,OAAOvM,EAAIhK,IAAI,SAAS,GAC5B,MAAMuP,EAAQvF,EAAIhK,IAAI,QAAa1F,EAAUrC,CAAG,MAGhD,YAFWgC,IAAPsc,GACAjB,EAAatL,EAAKuF,EAAOgH,GACtBhH,CACX,CAEA,SAAS+F,EAAatL,EAAKuF,EAAOgH,GAC9Bjf,OAAOmZ,KAAK8F,GAAIjd,SAAS+W,GAAMrG,EAAIhF,OAAW1K,EAAUrC,CAAG,GAAGsX,KAAQ,EAAIjV,EAAUW,aAAaoV,MAAM,IAC3G,CA9HA7Y,EAAQwe,OANR,SAAgBhQ,GACZ,MAAMwQ,EAAO,CAAC,EACd,IAAK,MAAMva,KAAQ+J,EACfwQ,EAAKva,IAAQ,EACjB,OAAOua,CACX,EAUAhf,EAAQue,kBARR,SAA2BxL,EAAI2B,GAC3B,MAAqB,kBAAVA,EACAA,EACwB,IAA/B5U,OAAOmZ,KAAKvE,GAAQlQ,SAExB8Z,EAAkBvL,EAAI2B,IACd2J,EAAe3J,EAAQ3B,EAAGsE,KAAK4C,MAAMyD,KACjD,EAcA1d,EAAQse,kBAAoBA,EAS5Bte,EAAQqe,eAAiBA,EASzBre,EAAQga,qBARR,SAA8BtF,EAAQuF,GAClC,GAAqB,kBAAVvF,EACP,OAAQA,EACZ,IAAK,MAAMrO,KAAOqO,EACd,GAAY,SAARrO,GAAkB4T,EAAMyD,IAAIrX,GAC5B,OAAO,EACf,OAAO,CACX,EAWArG,EAAQoe,eATR,UAAwB,aAAErJ,EAAY,WAAER,GAAcG,EAAQnB,EAASpR,GACnE,IAAKA,EAAO,CACR,GAAqB,iBAAVuS,GAAuC,kBAAVA,EACpC,OAAOA,EACX,GAAqB,iBAAVA,EACP,OAAW5R,EAAUrC,CAAG,GAAGiU,GACnC,CACA,OAAW5R,EAAUrC,CAAG,GAAGsU,IAAeR,KAAa,EAAIzR,EAAUW,aAAa8P,IACtF,EAKAvT,EAAQ8Z,iBAHR,SAA0BtZ,GACtB,OAAOyd,EAAoBgB,mBAAmBze,GAClD,EAKAR,EAAQme,eAHR,SAAwB3d,GACpB,OAAO0e,mBAAmBhB,EAAkB1d,GAChD,EAOAR,EAAQke,kBAAoBA,EAI5Ble,EAAQie,oBAAsBA,EAU9Bje,EAAQsb,SATR,SAAkB6D,EAAIC,GAClB,GAAIzZ,MAAMC,QAAQuZ,GACd,IAAK,MAAMzZ,KAAKyZ,EACZC,EAAE1Z,QAGN0Z,EAAED,EAEV,EAcAnf,EAAQge,eAAiB,CACrBjG,MAAO2G,EAAmB,CACtBC,WAAY,CAACnM,EAAK9H,EAAMC,IAAO6H,EAAIG,GAAO7P,EAAUrC,CAAG,GAAGkK,iBAAkBD,mBAAsB,KAC9F8H,EAAIG,GAAO7P,EAAUrC,CAAG,GAAGiK,cAAiB,IAAM8H,EAAIhF,OAAO7C,GAAI,KAAO,IAAM6H,EAAIhF,OAAO7C,EAAQ7H,EAAUrC,CAAG,GAAGkK,WAAYrG,KAASxB,EAAUrC,CAAG,iBAAiBkK,MAAOD,OAAS,IAExLkU,YAAa,CAACpM,EAAK9H,EAAMC,IAAO6H,EAAIG,GAAO7P,EAAUrC,CAAG,GAAGkK,cAAe,MACzD,IAATD,EACA8H,EAAIhF,OAAO7C,GAAI,IAGf6H,EAAIhF,OAAO7C,EAAQ7H,EAAUrC,CAAG,GAAGkK,WACnCmT,EAAatL,EAAK7H,EAAID,GAC1B,IAEJmU,YAAa,CAACnU,EAAMC,KAAiB,IAATD,GAAuB,IAAKA,KAASC,GACjEmU,aAAcf,IAElBrS,MAAOgT,EAAmB,CACtBC,WAAY,CAACnM,EAAK9H,EAAMC,IAAO6H,EAAIG,GAAO7P,EAAUrC,CAAG,GAAGkK,iBAAkBD,mBAAsB,IAAM8H,EAAIhF,OAAO7C,EAAQ7H,EAAUrC,CAAG,GAAGiK,uBAA0BC,OAAQD,OAAUC,OAAQD,OAC/LkU,YAAa,CAACpM,EAAK9H,EAAMC,IAAO6H,EAAIG,GAAO7P,EAAUrC,CAAG,GAAGkK,cAAe,IAAM6H,EAAIhF,OAAO7C,GAAa,IAATD,GAA2B5H,EAAUrC,CAAG,GAAGkK,OAAQD,OAAUC,OAAQD,OACpKmU,YAAa,CAACnU,EAAMC,KAAiB,IAATD,GAAuB2U,KAAKC,IAAI5U,EAAMC,GAClEmU,aAAc,CAACtM,EAAK9G,IAAU8G,EAAIhK,IAAI,QAASkD,MAWvD1L,EAAQ+d,qBAAuBA,EAI/B/d,EAAQ8d,aAAeA,EACvB,MAAMyB,EAAW,CAAC,EAQlB,IAAIlK,EAoBJ,SAASuI,EAAgB7K,EAAI0H,EAAK+E,EAAOzM,EAAGzR,KAAKmd,cAC7C,GAAKe,EAAL,CAGA,GADA/E,EAAM,gBAAgBA,KACT,IAAT+E,EACA,MAAM,IAAItb,MAAMuW,GACpB1H,EAAGsE,KAAKc,OAAOsH,KAAKhF,EAJV,CAKd,CA5BAza,EAAQ6d,QANR,SAAiBrL,EAAK4M,GAClB,OAAO5M,EAAIjG,WAAW,OAAQ,CAC1ByE,IAAKoO,EACL9a,KAAMib,EAASH,EAAE9a,QAAUib,EAASH,EAAE9a,MAAQ,IAAIyC,EAAOlD,MAAMub,EAAE9a,QAEzE,EAGA,SAAW+Q,GACPA,EAAKA,EAAU,IAAI,GAAK,MACxBA,EAAKA,EAAU,IAAI,GAAK,KAC3B,CAHD,CAGGA,EAAOrV,EAAQqV,OAASrV,EAAQqV,KAAO,CAAC,IAe3CrV,EAAQoV,aAdR,SAAsBsK,EAAUC,EAAcC,GAE1C,GAAIF,aAAoB5c,EAAUzC,KAAM,CACpC,MAAMwf,EAAWF,IAAiBtK,EAAKyK,IACvC,OAAOF,EACDC,EACQ/c,EAAUrC,CAAG,SAASif,UACtB5c,EAAUrC,CAAG,UAAUif,WAC/BG,EACQ/c,EAAUrC,CAAG,SAASif,IACtB5c,EAAUrC,CAAG,SAASif,6CACxC,CACA,OAAOE,GAAmB,EAAI9c,EAAUW,aAAaic,GAAUvb,WAAa,IAAM+Z,EAAkBwB,EACxG,EAUA1f,EAAQ4d,gBAAkBA,C,eCxK1B,SAASmC,EAAerL,EAAQsL,GAC5B,OAAOA,EAAM9C,MAAMzR,MAAMwU,GAASC,EAAcxL,EAAQuL,IAC5D,CAEA,SAASC,EAAcxL,EAAQuL,GAC3B,IAAIvb,EACJ,YAAiCjC,IAAzBiS,EAAOuL,EAAK1M,WACuB,QAArC7O,EAAKub,EAAKE,WAAWC,kBAA+B,IAAP1b,OAAgB,EAASA,EAAG+G,MAAM4U,QAAwB5d,IAAhBiS,EAAO2L,KACxG,CAfAvgB,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQkgB,cAAgBlgB,EAAQ+f,eAAiB/f,EAAQsgB,2BAAwB,EAKjFtgB,EAAQsgB,sBAJR,UAA+B,OAAE5L,EAAM,KAAE2C,GAAQ4F,GAC7C,MAAM+C,EAAQ3I,EAAK4C,MAAMoD,MAAMJ,GAC/B,OAAO+C,IAAmB,IAAVA,GAAkBD,EAAerL,EAAQsL,EAC7D,EAKAhgB,EAAQ+f,eAAiBA,EAMzB/f,EAAQkgB,cAAgBA,C,kBChBxBpgB,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQugB,kBAAoBvgB,EAAQwgB,0BAAuB,EAC3D,MAAMC,EAAW,EAAQ,OACnB3d,EAAY,EAAQ,OACpBwP,EAAU,EAAQ,OAClBoO,EAAY,CACdpN,QAAS,2BA2Bb,SAASqN,EAAiB5N,EAAIY,GAC1B,MAAM,IAAEnB,EAAG,KAAEyB,GAASlB,EAEhBU,EAAM,CACRjB,MACAe,QAAS,eACTU,OACAS,QAAQ,EACRkM,YAAY,EACZ5M,aAAa,EACbQ,OAAQ,CAAC,EACTzB,OAEJ,EAAI0N,EAASvO,aAAauB,EAAKiN,OAAWje,EAAWkR,EACzD,CA1BA3T,EAAQwgB,qBAbR,SAA8BzN,GAC1B,MAAM,IAAEP,EAAG,OAAEkC,EAAM,aAAEzB,GAAiBF,GACvB,IAAX2B,EACAiM,EAAiB5N,GAAI,GAEC,iBAAV2B,IAAwC,IAAlBA,EAAOvB,OACzCX,EAAIa,OAAOf,EAAQlR,QAAQ6S,OAG3BzB,EAAIhF,OAAW1K,EAAUrC,CAAG,GAAGwS,WAAuB,MACtDT,EAAIa,QAAO,GAEnB,EAYArT,EAAQugB,kBAVR,SAA2BxN,EAAI8N,GAC3B,MAAM,IAAErO,EAAG,OAAEkC,GAAW3B,GACT,IAAX2B,GACAlC,EAAIhK,IAAIqY,GAAO,GACfF,EAAiB5N,IAGjBP,EAAIhK,IAAIqY,GAAO,EAEvB,C,kBC/BA/gB,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQ8gB,gBAAkB9gB,EAAQ+gB,eAAiB/gB,EAAQghB,cAAgBhhB,EAAQihB,uBAAyBjhB,EAAQkhB,aAAelhB,EAAQmhB,eAAiBnhB,EAAQohB,cAAW,EAC/K,MAAMC,EAAU,EAAQ,OAClBC,EAAkB,EAAQ,MAC1Bb,EAAW,EAAQ,OACnB3d,EAAY,EAAQ,OACpBuP,EAAS,EAAQ,OACvB,IAAI+O,EAsBJ,SAASF,EAAaK,GAClB,MAAMlE,EAAQ1X,MAAMC,QAAQ2b,GAAMA,EAAKA,EAAK,CAACA,GAAM,GACnD,GAAIlE,EAAMmE,MAAMH,EAAQxE,YACpB,OAAOQ,EACX,MAAM,IAAInZ,MAAM,wCAA0CmZ,EAAMxX,KAAK,KACzE,EA1BA,SAAWub,GACPA,EAASA,EAAkB,QAAI,GAAK,UACpCA,EAASA,EAAgB,MAAI,GAAK,OACrC,CAHD,CAGGA,EAAWphB,EAAQohB,WAAaphB,EAAQohB,SAAW,CAAC,IAiBvDphB,EAAQmhB,eAhBR,SAAwBzM,GACpB,MAAM2I,EAAQ6D,EAAaxM,EAAOuI,MAElC,GADgBI,EAAMoE,SAAS,SAE3B,IAAwB,IAApB/M,EAAOgN,SACP,MAAM,IAAIxd,MAAM,8CAEnB,CACD,IAAKmZ,EAAM7Y,aAA8B/B,IAApBiS,EAAOgN,SACxB,MAAM,IAAIxd,MAAM,6CAEI,IAApBwQ,EAAOgN,UACPrE,EAAMnY,KAAK,OACnB,CACA,OAAOmY,CACX,EAQArd,EAAQkhB,aAAeA,EAiBvBlhB,EAAQihB,uBAhBR,SAAgClO,EAAIsK,GAChC,MAAM,IAAE7K,EAAG,KAAEyB,EAAI,KAAE3S,GAASyR,EACtB4O,EAgBV,SAAuBtE,EAAOuE,GAC1B,OAAOA,EACDvE,EAAMwE,QAAQC,GAAMC,EAAUvR,IAAIsR,IAAuB,UAAhBF,GAAiC,UAANE,IACpE,EACV,CApBqBE,CAAc3E,EAAO/b,EAAKsgB,aACrCK,EAAa5E,EAAM7Y,OAAS,KACR,IAApBmd,EAASnd,QAAiC,IAAjB6Y,EAAM7Y,SAAgB,EAAI8c,EAAgBhB,uBAAuBvN,EAAIsK,EAAM,KAC1G,GAAI4E,EAAY,CACZ,MAAMC,EAAYnB,EAAe1D,EAAOpJ,EAAM3S,EAAK6gB,cAAef,EAASgB,OAC3E5P,EAAIG,GAAGuP,GAAW,KACVP,EAASnd,OAezB,SAAoBuO,EAAIsK,EAAOsE,GAC3B,MAAM,IAAEnP,EAAG,KAAEyB,EAAI,KAAE3S,GAASyR,EACtBsP,EAAW7P,EAAIjF,IAAI,WAAgBzK,EAAUrC,CAAG,UAAUwT,KAC1DqO,EAAU9P,EAAIjF,IAAI,UAAezK,EAAUrC,CAAG,aAC3B,UAArBa,EAAKsgB,aACLpP,EAAIG,GAAO7P,EAAUrC,CAAG,GAAG4hB,kCAAyCpO,SAAYA,iBAAoB,IAAMzB,EACrGhF,OAAOyG,EAAUnR,EAAUrC,CAAG,GAAGwT,QACjCzG,OAAO6U,EAAcvf,EAAUrC,CAAG,UAAUwT,KAC5CtB,GAAGoO,EAAe1D,EAAOpJ,EAAM3S,EAAK6gB,gBAAgB,IAAM3P,EAAIhF,OAAO8U,EAASrO,OAEvFzB,EAAIG,GAAO7P,EAAUrC,CAAG,GAAG6hB,mBAC3B,IAAK,MAAMR,KAAKH,GACRI,EAAUvR,IAAIsR,IAAa,UAANA,GAAsC,UAArBxgB,EAAKsgB,cAC3CW,EAAmBT,GAU3B,SAASS,EAAmBT,GACxB,OAAQA,GACJ,IAAK,SAMD,YALAtP,EACKzE,OAAWjL,EAAUrC,CAAG,GAAG4hB,oBAA2BA,kBACtD7U,OAAO8U,EAAaxf,EAAUrC,CAAG,QAAQwT,KACzClG,OAAWjL,EAAUrC,CAAG,GAAGwT,cAC3BzG,OAAO8U,EAAaxf,EAAUrC,CAAG,MAE1C,IAAK,SAKD,YAJA+R,EACKzE,OAAWjL,EAAUrC,CAAG,GAAG4hB,qBAA4BpO;oBACxDoO,oBAA2BpO,QAAWA,SAAYA,MACjDzG,OAAO8U,EAAaxf,EAAUrC,CAAG,IAAIwT,KAE9C,IAAK,UAKD,YAJAzB,EACKzE,OAAWjL,EAAUrC,CAAG,GAAG4hB,sBAA6BpO;oBACzDoO,qBAA4BpO,QAAWA,SAAYA,UAAaA,WAC/DzG,OAAO8U,EAAaxf,EAAUrC,CAAG,IAAIwT,KAE9C,IAAK,UAMD,YALAzB,EACKzE,OAAWjL,EAAUrC,CAAG,GAAGwT,oBAAuBA,cAAiBA,cACnEzG,OAAO8U,GAAS,GAChBvU,OAAWjL,EAAUrC,CAAG,GAAGwT,mBAAsBA,WACjDzG,OAAO8U,GAAS,GAEzB,IAAK,OAGD,OAFA9P,EAAIzE,OAAWjL,EAAUrC,CAAG,GAAGwT,eAAkBA,cAAiBA,oBAClEzB,EAAIhF,OAAO8U,EAAS,MAExB,IAAK,QACD9P,EACKzE,OAAWjL,EAAUrC,CAAG,GAAG4hB,qBAA4BA;mBACzDA,sBAA6BpO,cAC3BzG,OAAO8U,EAAaxf,EAAUrC,CAAG,IAAIwT,MAEtD,CA7CAzB,EAAItI,OACJ4W,EAAgB/N,GAChBP,EAAI1E,QACJ0E,EAAIG,GAAO7P,EAAUrC,CAAG,GAAG6hB,mBAAyB,KAChD9P,EAAIhF,OAAOyG,EAAMqO,GA2CzB,UAA0B,IAAE9P,EAAG,WAAEoE,EAAU,mBAAEC,GAAsBzR,GAE/DoN,EAAIG,GAAO7P,EAAUrC,CAAG,GAAGmW,mBAA4B,IAAMpE,EAAIhF,OAAW1K,EAAUrC,CAAG,GAAGmW,KAAcC,KAAuBzR,IACrI,CA7CQod,CAAiBzP,EAAIuP,EAAQ,GAyCrC,CA5EgBG,CAAW1P,EAAIsK,EAAOsE,GAEtBb,EAAgB/N,EAAG,GAE/B,CACA,OAAOkP,CACX,EAEA,MAAMF,EAAY,IAAItV,IAAI,CAAC,SAAU,SAAU,UAAW,UAAW,SAyErE,SAASuU,EAAcqB,EAAUpO,EAAMyO,EAAYC,EAAUvB,EAASwB,SAClE,MAAMrb,EAAKob,IAAYvB,EAASwB,QAAU9f,EAAU4D,UAAUa,GAAKzE,EAAU4D,UAAUc,IACvF,IAAI2C,EACJ,OAAQkY,GACJ,IAAK,OACD,OAAWvf,EAAUrC,CAAG,GAAGwT,KAAQ1M,SACvC,IAAK,QACD4C,EAAWrH,EAAUrC,CAAG,iBAAiBwT,KACzC,MACJ,IAAK,SACD9J,EAAWrH,EAAUrC,CAAG,GAAGwT,eAAkBA,mCAAsCA,KACnF,MACJ,IAAK,UACD9J,EAAO0Y,EAAY/f,EAAUrC,CAAG,KAAKwT,oBAAuBA,MAC5D,MACJ,IAAK,SACD9J,EAAO0Y,IACP,MACJ,QACI,OAAW/f,EAAUrC,CAAG,UAAUwT,KAAQ1M,KAAM8a,IAExD,OAAOM,IAAYvB,EAASwB,QAAUzY,GAAO,EAAIrH,EAAU2D,KAAK0D,GAChE,SAAS0Y,EAAQC,EAAQhgB,EAAUxC,KAC/B,OAAO,EAAIwC,EAAU0D,KAAS1D,EAAUrC,CAAG,UAAUwT,gBAAoB6O,EAAOJ,EAAiB5f,EAAUrC,CAAG,YAAYwT,KAAUnR,EAAUxC,IAClJ,CACJ,CAEA,SAASygB,EAAe9J,EAAWhD,EAAMyO,EAAYC,GACjD,GAAyB,IAArB1L,EAAUzS,OACV,OAAOwc,EAAc/J,EAAU,GAAIhD,EAAMyO,EAAYC,GAEzD,IAAIxY,EACJ,MAAMkT,GAAQ,EAAIhL,EAAOmM,QAAQvH,GACjC,GAAIoG,EAAMD,OAASC,EAAM5P,OAAQ,CAC7B,MAAMsV,EAAajgB,EAAUrC,CAAG,UAAUwT,gBAC1C9J,EAAOkT,EAAMG,KAAOuF,EAAajgB,EAAUrC,CAAG,IAAIwT,QAAW8O,WACtD1F,EAAMG,YACNH,EAAMD,aACNC,EAAM5P,MACjB,MAEItD,EAAOrH,EAAUxC,IAEjB+c,EAAML,eACCK,EAAMC,QACjB,IAAK,MAAMwE,KAAKzE,EACZlT,GAAO,EAAIrH,EAAU0D,KAAK2D,EAAM6W,EAAcc,EAAG7N,EAAMyO,EAAYC,IACvE,OAAOxY,CACX,CAtBAnK,EAAQghB,cAAgBA,EAuBxBhhB,EAAQ+gB,eAAiBA,EACzB,MAAMiC,EAAY,CACd1P,QAAS,EAAGoB,YAAa,WAAWA,IACpCF,OAAQ,EAAGE,SAAQV,iBAAmC,iBAAVU,EAAyB5R,EAAUrC,CAAG,UAAUiU,KAAgB5R,EAAUrC,CAAG,UAAUuT,MAEvI,SAAS8M,EAAgB/N,GACrB,MAAMU,EAIV,SAA6BV,GACzB,MAAM,IAAEP,EAAG,KAAEyB,EAAI,OAAES,GAAW3B,EACxB6N,GAAa,EAAIvO,EAAO+L,gBAAgBrL,EAAI2B,EAAQ,QAC1D,MAAO,CACHlC,MACAe,QAAS,OACTU,OACAS,OAAQA,EAAOuI,KACf2D,aACA5M,YAAa4M,EACbjM,aAAcD,EACdF,OAAQ,CAAC,EACTzB,KAER,CAlBgBkQ,CAAoBlQ,IAChC,EAAI0N,EAASvO,aAAauB,EAAKuP,EACnC,CACAhjB,EAAQ8gB,gBAAkBA,C,iBCxL1BhhB,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQkjB,oBAAiB,EACzB,MAAMpgB,EAAY,EAAQ,OACpBuP,EAAS,EAAQ,OAavB,SAAS8Q,EAAcpQ,EAAIqQ,EAAMC,GAC7B,MAAM,IAAE7Q,EAAG,cAAEoB,EAAa,KAAEK,EAAI,KAAE3S,GAASyR,EAC3C,QAAqBtQ,IAAjB4gB,EACA,OACJ,MAAMC,EAAgBxgB,EAAUrC,CAAG,GAAGwT,KAAO,EAAInR,EAAUW,aAAa2f,KACxE,GAAIxP,EAEA,YADA,EAAIvB,EAAOuL,iBAAiB7K,EAAI,2BAA2BuQ,KAG/D,IAAIrZ,EAAgBnH,EAAUrC,CAAG,GAAG6iB,kBACX,UAArBhiB,EAAKiiB,cACLtZ,EAAgBnH,EAAUrC,CAAG,GAAGwJ,QAAgBqZ,iBAAyBA,YAI7E9Q,EAAIG,GAAG1I,EAAenH,EAAUrC,CAAG,GAAG6iB,QAAe,EAAIxgB,EAAUvC,WAAW8iB,KAClF,CAjBArjB,EAAQkjB,eAXR,SAAwBnQ,EAAIyQ,GACxB,MAAM,WAAEC,EAAU,MAAE/X,GAAUqH,EAAG2B,OACjC,GAAW,WAAP8O,GAAmBC,EACnB,IAAK,MAAMpd,KAAOod,EACdN,EAAcpQ,EAAI1M,EAAKod,EAAWpd,GAAKjF,aAG/B,UAAPoiB,GAAkB7d,MAAMC,QAAQ8F,IACrCA,EAAM5J,SAAQ,CAACuU,EAAKpR,IAAMke,EAAcpQ,EAAI9N,EAAGoR,EAAIjV,UAE3D,C,kBCdAtB,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQ0jB,QAAU1jB,EAAQU,WAAaV,EAAQwX,0BAAuB,EACtE,MAAMmM,EAAe,EAAQ,OACvBC,EAAa,EAAQ,OACrBtC,EAAkB,EAAQ,MAC1BuC,EAAa,EAAQ,OACrBC,EAAa,EAAQ,MACrBC,EAAY,EAAQ,OACpBC,EAAc,EAAQ,OACtBlhB,EAAY,EAAQ,OACpBwP,EAAU,EAAQ,OAClBuD,EAAY,EAAQ,OACpBxD,EAAS,EAAQ,OACjBoO,EAAW,EAAQ,OAazB,SAASwD,GAAiB,IAAEzR,EAAG,aAAES,EAAY,OAAEyB,EAAM,UAAExB,EAAS,KAAE5R,GAAQ2N,GAClE3N,EAAKgD,KAAKgE,IACVkK,EAAIjD,KAAK0D,EAAkBnQ,EAAUrC,CAAG,GAAG6R,EAAQlR,QAAQ6S,SAAS3B,EAAQlR,QAAQ8Y,SAAUhH,EAAUC,QAAQ,KAC5GX,EAAIlO,KAASxB,EAAUrC,CAAG,iBAAiByjB,EAAcxP,EAAQpT,MAY7E,SAA8BkR,EAAKlR,GAC/BkR,EAAIG,GAAGL,EAAQlR,QAAQ8Y,QAAQ,KAC3B1H,EAAIhK,IAAI8J,EAAQlR,QAAQ8S,aAAkBpR,EAAUrC,CAAG,GAAG6R,EAAQlR,QAAQ8Y,UAAU5H,EAAQlR,QAAQ8S,gBACpG1B,EAAIhK,IAAI8J,EAAQlR,QAAQwV,WAAgB9T,EAAUrC,CAAG,GAAG6R,EAAQlR,QAAQ8Y,UAAU5H,EAAQlR,QAAQwV,cAClGpE,EAAIhK,IAAI8J,EAAQlR,QAAQyV,mBAAwB/T,EAAUrC,CAAG,GAAG6R,EAAQlR,QAAQ8Y,UAAU5H,EAAQlR,QAAQyV,sBAC1GrE,EAAIhK,IAAI8J,EAAQlR,QAAQ+Y,SAAcrX,EAAUrC,CAAG,GAAG6R,EAAQlR,QAAQ8Y,UAAU5H,EAAQlR,QAAQ+Y,YAC5F7Y,EAAKE,YACLgR,EAAIhK,IAAI8J,EAAQlR,QAAQ2U,eAAoBjT,EAAUrC,CAAG,GAAG6R,EAAQlR,QAAQ8Y,UAAU5H,EAAQlR,QAAQ2U,iBAAiB,IAC5H,KACCvD,EAAIhK,IAAI8J,EAAQlR,QAAQ8S,aAAkBpR,EAAUrC,CAAG,MACvD+R,EAAIhK,IAAI8J,EAAQlR,QAAQwV,WAAgB9T,EAAUrC,CAAG,aACrD+R,EAAIhK,IAAI8J,EAAQlR,QAAQyV,mBAAwB/T,EAAUrC,CAAG,aAC7D+R,EAAIhK,IAAI8J,EAAQlR,QAAQ+Y,SAAU7H,EAAQlR,QAAQ6S,MAC9C3S,EAAKE,YACLgR,EAAIhK,IAAI8J,EAAQlR,QAAQ2U,eAAoBjT,EAAUrC,CAAG,KAAK,GAE1E,CA3BY0jB,CAAqB3R,EAAKlR,GAC1BkR,EAAIlO,KAAK2K,EAAK,IAIlBuD,EAAIjD,KAAK0D,EAAkBnQ,EAAUrC,CAAG,GAAG6R,EAAQlR,QAAQ6S,SAGnE,SAA2B3S,GACvB,OAAWwB,EAAUrC,CAAG,IAAI6R,EAAQlR,QAAQ8S,oBAAoB5B,EAAQlR,QAAQwV,eAAetE,EAAQlR,QAAQyV,uBAAuBvE,EAAQlR,QAAQ+Y,YAAY7H,EAAQlR,QAAQ6S,OAAO3S,EAAKE,WAAiBsB,EAAUrC,CAAG,KAAK6R,EAAQlR,QAAQ2U,oBAAsBjT,EAAUxC,SACrR,CAL4E8jB,CAAkB9iB,KAAS4R,EAAUC,QAAQ,IAAMX,EAAIlO,KAAK4f,EAAcxP,EAAQpT,IAAOgD,KAAK2K,IAE1K,CA2CA,SAASiV,EAAcxP,EAAQpT,GAC3B,MAAM+X,EAAyB,iBAAV3E,GAAsBA,EAAOpT,EAAK0U,UACvD,OAAOqD,IAAU/X,EAAKgD,KAAK6S,QAAU7V,EAAKgD,KAAKoT,SAAe5U,EAAUrC,CAAG,iBAAiB4Y,OAAavW,EAAUxC,GACvH,CAYA,SAAS+jB,GAAkB,OAAE3P,EAAM,KAAE2C,IACjC,GAAqB,kBAAV3C,EACP,OAAQA,EACZ,IAAK,MAAMrO,KAAOqO,EACd,GAAI2C,EAAK4C,MAAMyD,IAAIrX,GACf,OAAO,EACf,OAAO,CACX,CACA,SAASie,EAAYvR,GACjB,MAA2B,kBAAbA,EAAG2B,MACrB,CAYA,SAAS6P,EAAcxR,IACnB,EAAIV,EAAOiM,mBAAmBvL,GAUlC,SAA8BA,GAC1B,MAAM,OAAE2B,EAAM,cAAEN,EAAa,KAAE9S,EAAI,KAAE+V,GAAStE,EAC1C2B,EAAOqF,MAAQzY,EAAKkjB,wBAAyB,EAAInS,EAAO2H,sBAAsBtF,EAAQ2C,EAAK4C,QAC3F5C,EAAKc,OAAOsH,KAAK,6CAA6CrL,KAEtE,CAdIqQ,CAAqB1R,EACzB,CACA,SAAS2R,EAAgB3R,EAAIgB,GACzB,GAAIhB,EAAGzR,KAAK8V,IACR,OAAOuN,EAAe5R,EAAI,IAAI,EAAOgB,GACzC,MAAMsJ,GAAQ,EAAIuG,EAAWzC,gBAAgBpO,EAAG2B,QAEhDiQ,EAAe5R,EAAIsK,IADE,EAAIuG,EAAW3C,wBAAwBlO,EAAIsK,GACvBtJ,EAC7C,CAsBA,SAAS6Q,GAAe,IAAEpS,EAAG,UAAEU,EAAS,OAAEwB,EAAM,cAAEN,EAAa,KAAE9S,IAC7D,MAAMmZ,EAAM/F,EAAOmQ,SACnB,IAAsB,IAAlBvjB,EAAKujB,SACLrS,EAAIlO,KAASxB,EAAUrC,CAAG,GAAG6R,EAAQlR,QAAQiW,mBAAmBoD,WAE/D,GAA4B,mBAAjBnZ,EAAKujB,SAAwB,CACzC,MAAMtQ,EAAiBzR,EAAUtC,GAAK,GAAG4T,aACnC0Q,EAAWtS,EAAIjG,WAAW,OAAQ,CAAEyE,IAAKkC,EAAU+C,OACzDzD,EAAIlO,KAASxB,EAAUrC,CAAG,GAAG6R,EAAQlR,QAAQiW,sBAAsBoD,MAAQlG,MAAeuQ,YAC9F,CACJ,CAoBA,SAASH,EAAe5R,EAAIsK,EAAO0H,EAAYhR,GAC3C,MAAM,IAAEvB,EAAG,OAAEkC,EAAM,KAAET,EAAI,UAAEJ,EAAS,KAAEvS,EAAI,KAAE+V,GAAStE,GAC/C,MAAEkH,GAAU5C,EAYlB,SAAS2N,EAAchF,IACd,EAAIsB,EAAgBvB,gBAAgBrL,EAAQsL,KAE7CA,EAAM/C,MACNzK,EAAIG,IAAG,EAAIkR,EAAW7C,eAAehB,EAAM/C,KAAMhJ,EAAM3S,EAAK6gB,gBAC5D8C,EAAgBlS,EAAIiN,GACC,IAAjB3C,EAAM7Y,QAAgB6Y,EAAM,KAAO2C,EAAM/C,MAAQ8H,IACjDvS,EAAItI,QACJ,EAAI2Z,EAAW/C,iBAAiB/N,IAEpCP,EAAI1E,SAGJmX,EAAgBlS,EAAIiN,GAGnBnM,GACDrB,EAAIG,GAAO7P,EAAUrC,CAAG,GAAG6R,EAAQlR,QAAQyR,cAAckB,GAAa,KAC9E,EA7BIW,EAAOqF,OAASzY,EAAKkjB,wBAA0B,EAAInS,EAAO2H,sBAAsBtF,EAAQuF,IAIvF3Y,EAAK8V,KAuCd,SAA0BrE,EAAIsK,IACtBtK,EAAGG,UAAU9Q,MAAS2Q,EAAGzR,KAAK4jB,cAOtC,SAA2BnS,EAAIsK,GACtBA,EAAM7Y,SAENuO,EAAGkE,UAAUzS,QAIlB6Y,EAAMvb,SAASggB,IACNqD,EAAapS,EAAGkE,UAAW6K,IAC5BsD,EAAiBrS,EAAI,SAAS+O,8BAA8B/O,EAAGkE,UAAUpR,KAAK,QAClF,IA2BR,SAA2BkN,EAAIsS,GAC3B,MAAM9D,EAAK,GACX,IAAK,MAAMO,KAAK/O,EAAGkE,UACXkO,EAAaE,EAAWvD,GACxBP,EAAGrc,KAAK4c,GACHuD,EAAU5D,SAAS,YAAoB,WAANK,GACtCP,EAAGrc,KAAK,WAEhB6N,EAAGkE,UAAYsK,CACnB,CAlCI+D,CAAkBvS,EAAIsK,IARlBtK,EAAGkE,UAAYoG,EASvB,CAlBIkI,CAAkBxS,EAAIsK,GACjBtK,EAAGzR,KAAKkkB,iBAkBjB,SAA4BzS,EAAIwO,GACxBA,EAAG/c,OAAS,IAAqB,IAAd+c,EAAG/c,SAAgB+c,EAAGE,SAAS,UAClD2D,EAAiBrS,EAAI,kDAE7B,CArBQ0S,CAAmB1S,EAAIsK,GAsB/B,SAA2BtK,EAAIwO,GAC3B,MAAMrE,EAAQnK,EAAGsE,KAAK4C,MAAMyD,IAC5B,IAAK,MAAMnK,KAAW2J,EAAO,CACzB,MAAM+C,EAAO/C,EAAM3J,GACnB,GAAmB,iBAAR0M,IAAoB,EAAIqB,EAAgBpB,eAAenN,EAAG2B,OAAQuL,GAAO,CAChF,MAAM,KAAEhD,GAASgD,EAAKE,WAClBlD,EAAKzY,SAAWyY,EAAKxR,MAAMqW,IAAM4D,OAMfC,EANqC7D,GAM5C8D,EANwCrE,GAOlDE,SAASkE,IAAmB,WAATA,GAAqBC,EAAMnE,SAAS,WADxE,IAA2BmE,EAAOD,CANuC,KACzDP,EAAiBrS,EAAI,iBAAiBkK,EAAKpX,KAAK,sBAAsB0N,KAE9E,CACJ,CACJ,CAhCIsS,CAAkB9S,EAAIA,EAAGkE,WAC7B,CA7CQ6O,CAAiB/S,EAAIsK,GACzB7K,EAAIxD,OAAM,KACN,IAAK,MAAMgR,KAAS/F,EAAMiD,MACtB8H,EAAchF,GAClBgF,EAAc/K,EAAMwD,KAAK,KARzBjL,EAAIxD,OAAM,IAAM+W,EAAYhT,EAAI,OAAQkH,EAAMyD,IAAI3D,KAAKoG,aA6B/D,CACA,SAAS8E,EAAgBlS,EAAIiN,GACzB,MAAM,IAAExN,EAAG,OAAEkC,EAAQpT,MAAM,YAAEiiB,IAAmBxQ,EAC5CwQ,IACA,EAAIO,EAAWZ,gBAAgBnQ,EAAIiN,EAAM/C,MAC7CzK,EAAIxD,OAAM,KACN,IAAK,MAAMiR,KAAQD,EAAM9C,OACjB,EAAIoE,EAAgBpB,eAAexL,EAAQuL,IAC3C8F,EAAYhT,EAAIkN,EAAK1M,QAAS0M,EAAKE,WAAYH,EAAM/C,KAE7D,GAER,CA2CA,SAASkI,EAAa5D,EAAIO,GACtB,OAAOP,EAAGE,SAASK,IAAa,YAANA,GAAmBP,EAAGE,SAAS,SAC7D,CAWA,SAAS2D,EAAiBrS,EAAI0H,GAE1BA,GAAO,QADY1H,EAAGG,UAAUgD,OAASnD,EAAGqB,gCAE5C,EAAI/B,EAAOuL,iBAAiB7K,EAAI0H,EAAK1H,EAAGzR,KAAK4jB,YACjD,CAnQAllB,EAAQwX,qBAVR,SAA8BzE,GACtBuR,EAAYvR,KACZwR,EAAcxR,GACVsR,EAAkBtR,IAwC9B,SAA0BA,GACtB,MAAM,OAAE2B,EAAM,KAAEpT,EAAI,IAAEkR,GAAQO,EAC9BkR,EAAiBlR,GAAI,KACbzR,EAAKujB,UAAYnQ,EAAOmQ,UACxBD,EAAe7R,GAwE3B,SAAwBA,GACpB,MAAM,OAAE2B,EAAM,KAAEpT,GAASyR,OACFtQ,IAAnBiS,EAAOtT,SAAyBE,EAAKiiB,aAAejiB,EAAKmd,eACzD,EAAIpM,EAAOuL,iBAAiB7K,EAAI,wCAExC,CA5EQiT,CAAejT,GACfP,EAAIjF,IAAI+E,EAAQlR,QAAQwR,QAAS,MACjCJ,EAAIjF,IAAI+E,EAAQlR,QAAQyR,OAAQ,GAC5BvR,EAAKI,aAOjB,SAAwBqR,GAEpB,MAAM,IAAEP,EAAG,aAAES,GAAiBF,EAC9BA,EAAGiF,UAAYxF,EAAIlF,MAAM,YAAiBxK,EAAUrC,CAAG,GAAGwS,eAC1DT,EAAIG,GAAO7P,EAAUrC,CAAG,GAAGsS,EAAGiF,0BAA0B,IAAMxF,EAAIhF,OAAW1K,EAAUrC,CAAG,GAAGsS,EAAGiF,kBAAuBlV,EAAUrC,CAAG,eACpI+R,EAAIG,GAAO7P,EAAUrC,CAAG,GAAGsS,EAAGiF,0BAA0B,IAAMxF,EAAIhF,OAAW1K,EAAUrC,CAAG,GAAGsS,EAAGiF,kBAAuBlV,EAAUrC,CAAG,cACxI,CAZYwlB,CAAelT,GACnB2R,EAAgB3R,GA4FxB,SAAuBA,GACnB,MAAM,IAAEP,EAAG,UAAEU,EAAS,aAAED,EAAY,gBAAE9S,EAAe,KAAEmB,GAASyR,EAC5DG,EAAUC,OAEVX,EAAIG,GAAO7P,EAAUrC,CAAG,GAAG6R,EAAQlR,QAAQyR,gBAAgB,IAAML,EAAIa,OAAOf,EAAQlR,QAAQ6S,QAAO,IAAMzB,EAAIY,MAAUtQ,EAAUrC,CAAG,OAAON,KAAmBmS,EAAQlR,QAAQwR,eAG9KJ,EAAIhF,OAAW1K,EAAUrC,CAAG,GAAGwS,WAAuBX,EAAQlR,QAAQwR,SAClEtR,EAAKI,aAKjB,UAAyB,IAAE8Q,EAAG,UAAEwF,EAAS,MAAED,EAAK,MAAErM,IAC1CqM,aAAiBjV,EAAUzC,MAC3BmS,EAAIhF,OAAW1K,EAAUrC,CAAG,GAAGuX,UAAmBD,GAClDrM,aAAiB5I,EAAUzC,MAC3BmS,EAAIhF,OAAW1K,EAAUrC,CAAG,GAAGuX,UAAmBtM,EAC1D,CATYwa,CAAgBnT,GACpBP,EAAIa,OAAWvQ,EAAUrC,CAAG,GAAG6R,EAAQlR,QAAQyR,gBAEvD,CAvGQsT,CAAcpT,EAAG,GAGzB,CArDYqT,CAAiBrT,GAIzBkR,EAAiBlR,GAAI,KAAM,EAAI4Q,EAAanD,sBAAsBzN,IACtE,EAqQA,MAAMrS,EACF,WAAAW,CAAY0R,EAAIlB,EAAK0B,GAcjB,IAbA,EAAIwQ,EAAUsC,sBAAsBtT,EAAIlB,EAAK0B,GAC7C3R,KAAK4Q,IAAMO,EAAGP,IACd5Q,KAAKiS,UAAYd,EAAGc,UACpBjS,KAAK2R,QAAUA,EACf3R,KAAKqS,KAAOlB,EAAGkB,KACfrS,KAAK8S,OAAS3B,EAAG2B,OAAOnB,GACxB3R,KAAKO,MAAQ0P,EAAI1P,OAAS4Q,EAAGzR,KAAKa,OAASP,KAAK8S,QAAU9S,KAAK8S,OAAOvS,MACtEP,KAAKoS,aAAc,EAAI3B,EAAO+L,gBAAgBrL,EAAInR,KAAK8S,OAAQnB,EAAS3R,KAAKO,OAC7EP,KAAK4R,WAAa3B,EAAI2B,WACtB5R,KAAK+S,aAAe5B,EAAG2B,OACvB9S,KAAK4S,OAAS,CAAC,EACf5S,KAAKmR,GAAKA,EACVnR,KAAKiQ,IAAMA,EACPjQ,KAAKO,MACLP,KAAKgf,WAAa7N,EAAGP,IAAIlF,MAAM,UAAWoW,EAAQ9hB,KAAKO,MAAO4Q,SAI9D,GADAnR,KAAKgf,WAAahf,KAAKoS,cAClB,EAAI+P,EAAUuC,iBAAiB1kB,KAAK8S,OAAQ7C,EAAI2B,WAAY3B,EAAI0U,gBACjE,MAAM,IAAIriB,MAAM,GAAGqP,mBAAyBtN,KAAK1F,UAAUsR,EAAI2B,gBAGnE,SAAU3B,EAAMA,EAAI2U,aAA6B,IAAf3U,EAAIgB,UACtCjR,KAAKmS,UAAYhB,EAAGP,IAAIlF,MAAM,QAASgF,EAAQlR,QAAQyR,QAE/D,CACA,MAAA4T,CAAOxc,EAAWyc,EAAeC,GAC7B/kB,KAAKglB,YAAW,EAAI9jB,EAAU2D,KAAKwD,GAAYyc,EAAeC,EAClE,CACA,UAAAC,CAAW3c,EAAWyc,EAAeC,GACjC/kB,KAAK4Q,IAAIG,GAAG1I,GACR0c,EACAA,IAEA/kB,KAAKyH,QACLqd,GACA9kB,KAAK4Q,IAAItI,OACTwc,IACI9kB,KAAKiS,WACLjS,KAAK4Q,IAAI1E,SAGTlM,KAAKiS,UACLjS,KAAK4Q,IAAI1E,QAETlM,KAAK4Q,IAAItI,MAErB,CACA,IAAA2c,CAAK5c,EAAW0c,GACZ/kB,KAAKglB,YAAW,EAAI9jB,EAAU2D,KAAKwD,QAAYxH,EAAWkkB,EAC9D,CACA,IAAAG,CAAK7c,GACD,QAAkBxH,IAAdwH,EAIA,OAHArI,KAAKyH,aACAzH,KAAKiS,WACNjS,KAAK4Q,IAAIG,IAAG,IAGpB/Q,KAAK4Q,IAAIG,GAAG1I,GACZrI,KAAKyH,QACDzH,KAAKiS,UACLjS,KAAK4Q,IAAI1E,QAETlM,KAAK4Q,IAAItI,MACjB,CACA,SAAA6c,CAAU9c,GACN,IAAKrI,KAAKO,MACN,OAAOP,KAAKklB,KAAK7c,GACrB,MAAM,WAAE2W,GAAehf,KACvBA,KAAKklB,KAAShkB,EAAUrC,CAAG,GAAGmgB,wBAAgC,EAAI9d,EAAUyD,IAAI3E,KAAKolB,eAAgB/c,MACzG,CACA,KAAAZ,CAAM4d,EAAQC,EAAaxT,GACvB,GAAIwT,EAIA,OAHAtlB,KAAKulB,UAAUD,GACftlB,KAAKwlB,OAAOH,EAAQvT,QACpB9R,KAAKulB,UAAU,CAAC,GAGpBvlB,KAAKwlB,OAAOH,EAAQvT,EACxB,CACA,MAAA0T,CAAOH,EAAQvT,IAEVuT,EAASxG,EAASxO,iBAAmBwO,EAASvO,aAAatQ,KAAMA,KAAKiQ,IAAIxI,MAAOqK,EACtF,CACA,UAAA2T,IACI,EAAI5G,EAASvO,aAAatQ,KAAMA,KAAKiQ,IAAIwV,YAAc5G,EAAStO,kBACpE,CACA,KAAAmV,GACI,QAAuB7kB,IAAnBb,KAAKmS,UACL,MAAM,IAAI7P,MAAM,4CACpB,EAAIuc,EAASzO,kBAAkBpQ,KAAK4Q,IAAK5Q,KAAKmS,UAClD,CACA,EAAAwT,CAAGpd,GACMvI,KAAKiS,WACNjS,KAAK4Q,IAAIG,GAAGxI,EACpB,CACA,SAAAgd,CAAUzY,EAAKlB,GACPA,EACA1N,OAAO0N,OAAO5L,KAAK4S,OAAQ9F,GAE3B9M,KAAK4S,OAAS9F,CACtB,CACA,UAAA8Y,CAAW3G,EAAO4G,EAAWC,EAAa5kB,EAAUxC,KAChDsB,KAAK4Q,IAAIxD,OAAM,KACXpN,KAAK+lB,WAAW9G,EAAO6G,GACvBD,GAAW,GAEnB,CACA,UAAAE,CAAW9G,EAAQ/d,EAAUxC,IAAKonB,EAAa5kB,EAAUxC,KACrD,IAAKsB,KAAKO,MACN,OACJ,MAAM,IAAEqQ,EAAG,WAAEoO,EAAU,WAAEpN,EAAU,IAAE3B,GAAQjQ,KAC7C4Q,EAAIG,IAAG,EAAI7P,EAAUyD,IAAQzD,EAAUrC,CAAG,GAAGmgB,kBAA4B8G,IACrE7G,IAAU/d,EAAUxC,KACpBkS,EAAIhF,OAAOqT,GAAO,IAClBrN,EAAWhP,QAAUqN,EAAI+V,kBACzBpV,EAAIzE,OAAOnM,KAAKolB,gBAChBplB,KAAKylB,aACDxG,IAAU/d,EAAUxC,KACpBkS,EAAIhF,OAAOqT,GAAO,IAE1BrO,EAAItI,MACR,CACA,YAAA8c,GACI,MAAM,IAAExU,EAAG,WAAEoO,EAAU,WAAEpN,EAAU,IAAE3B,EAAG,GAAEkB,GAAOnR,KACjD,OAAO,EAAIkB,EAAUyD,IACrB,WACI,GAAIiN,EAAWhP,OAAQ,CAEnB,KAAMoc,aAAsB9d,EAAUzC,MAClC,MAAM,IAAI6D,MAAM,4BACpB,MAAM2jB,EAAKliB,MAAMC,QAAQ4N,GAAcA,EAAa,CAACA,GACrD,OAAW1Q,EAAUrC,CAAG,IAAG,EAAIojB,EAAW9C,gBAAgB8G,EAAIjH,EAAY7N,EAAGzR,KAAK6gB,cAAe0B,EAAWzC,SAASgB,QACzH,CACA,OAAOtf,EAAUxC,GACrB,CAVyBwnB,GAWzB,WACI,GAAIjW,EAAI+V,eAAgB,CACpB,MAAMG,EAAoBvV,EAAIjG,WAAW,gBAAiB,CAAEyE,IAAKa,EAAI+V,iBACrE,OAAW9kB,EAAUrC,CAAG,IAAIsnB,KAAqBnH,IACrD,CACA,OAAO9d,EAAUxC,GACrB,CAjB2C0nB,GAkB/C,CACA,SAAAC,CAAUC,EAAMrH,GACZ,MAAMoH,GAAY,EAAIjE,EAAYmE,cAAcvmB,KAAKmR,GAAImV,IACzD,EAAIlE,EAAYoE,qBAAqBH,EAAWrmB,KAAKmR,GAAImV,IACzD,EAAIlE,EAAYqE,qBAAqBJ,EAAWC,GAChD,MAAMI,EAAc,IAAK1mB,KAAKmR,MAAOkV,EAAWvc,WAAOjJ,EAAWsV,WAAOtV,GAEzE,OAhWR,SAAuBsQ,EAAI8N,GACnByD,EAAYvR,KACZwR,EAAcxR,GACVsR,EAAkBtR,IAkB9B,SAA0BA,EAAI8N,GAC1B,MAAM,OAAEnM,EAAM,IAAElC,EAAG,KAAElR,GAASyR,EAC1BzR,EAAKujB,UAAYnQ,EAAOmQ,UACxBD,EAAe7R,GA+BvB,SAAuBA,GACnB,MAAMsG,EAAQtG,EAAG2B,OAAO3B,EAAGzR,KAAK0U,UAC5BqD,IACAtG,EAAGmD,QAAS,EAAIL,EAAUyD,YAAYvG,EAAGzR,KAAKmV,YAAa1D,EAAGmD,OAAQmD,GAC9E,CAlCIkP,CAAcxV,GAmClB,SAA0BA,GACtB,GAAIA,EAAG2B,OAAOvB,SAAWJ,EAAGG,UAAUC,OAClC,MAAM,IAAIjP,MAAM,8BACxB,CArCIskB,CAAiBzV,GACjB,MAAMgB,EAAYvB,EAAIlF,MAAM,QAASgF,EAAQlR,QAAQyR,QACrD6R,EAAgB3R,EAAIgB,GAEpBvB,EAAIhK,IAAIqY,EAAW/d,EAAUrC,CAAG,GAAGsT,SAAiBzB,EAAQlR,QAAQyR,SACxE,CA3BY4V,CAAiB1V,EAAI8N,IAI7B,EAAI8C,EAAapD,mBAAmBxN,EAAI8N,EAC5C,CAsVQ6H,CAAcJ,EAAazH,GACpByH,CACX,CACA,cAAAtK,CAAerH,EAAWxJ,GACtB,MAAM,GAAE4F,EAAE,IAAEP,GAAQ5Q,KACfmR,EAAGzR,KAAKI,eAEI,IAAbqR,EAAGgF,YAAsCtV,IAApBkU,EAAUoB,QAC/BhF,EAAGgF,MAAQ1F,EAAO2L,eAAejG,MAAMvF,EAAKmE,EAAUoB,MAAOhF,EAAGgF,MAAO5K,KAE1D,IAAb4F,EAAGrH,YAAsCjJ,IAApBkU,EAAUjL,QAC/BqH,EAAGrH,MAAQ2G,EAAO2L,eAAetS,MAAM8G,EAAKmE,EAAUjL,MAAOqH,EAAGrH,MAAOyB,IAE/E,CACA,mBAAAwb,CAAoBhS,EAAWkK,GAC3B,MAAM,GAAE9N,EAAE,IAAEP,GAAQ5Q,KACpB,GAAImR,EAAGzR,KAAKI,eAA6B,IAAbqR,EAAGgF,QAA+B,IAAbhF,EAAGrH,OAEhD,OADA8G,EAAIG,GAAGkO,GAAO,IAAMjf,KAAKoc,eAAerH,EAAW7T,EAAUzC,SACtD,CAEf,EAGJ,SAAS0lB,EAAYhT,EAAIQ,EAAS1B,EAAK+W,GACnC,MAAMnV,EAAM,IAAI/S,EAAWqS,EAAIlB,EAAK0B,GAChC,SAAU1B,EACVA,EAAIvN,KAAKmP,EAAKmV,GAETnV,EAAItR,OAAS0P,EAAI8F,UACtB,EAAIoM,EAAU8E,iBAAiBpV,EAAK5B,GAE/B,UAAWA,GAChB,EAAIkS,EAAU+E,kBAAkBrV,EAAK5B,IAEhCA,EAAIkX,SAAWlX,EAAI8F,YACxB,EAAIoM,EAAU8E,iBAAiBpV,EAAK5B,EAE5C,CAfA7R,EAAQU,WAAaA,EAgBrB,MAAMsoB,EAAe,sBACfC,EAAwB,mCAC9B,SAASvF,EAAQvhB,GAAO,UAAE6U,EAAS,UAAEF,EAAS,YAAEC,IAC5C,IAAImS,EACAjV,EACJ,GAAc,KAAV9R,EACA,OAAOmQ,EAAQlR,QAAQ+Y,SAC3B,GAAiB,MAAbhY,EAAM,GAAY,CAClB,IAAK6mB,EAAa/kB,KAAK9B,GACnB,MAAM,IAAI+B,MAAM,yBAAyB/B,KAC7C+mB,EAAc/mB,EACd8R,EAAO3B,EAAQlR,QAAQ+Y,QAC3B,KACK,CACD,MAAMgP,EAAUF,EAAsBG,KAAKjnB,GAC3C,IAAKgnB,EACD,MAAM,IAAIjlB,MAAM,yBAAyB/B,KAC7C,MAAMknB,GAAMF,EAAQ,GAEpB,GADAD,EAAcC,EAAQ,GACF,MAAhBD,EAAqB,CACrB,GAAIG,GAAMrS,EACN,MAAM,IAAI9S,MAAMolB,EAAS,iBAAkBD,IAC/C,OAAOtS,EAAYC,EAAYqS,EACnC,CACA,GAAIA,EAAKrS,EACL,MAAM,IAAI9S,MAAMolB,EAAS,OAAQD,IAErC,GADApV,EAAO6C,EAAUE,EAAYqS,IACxBH,EACD,OAAOjV,CACf,CACA,IAAI7O,EAAO6O,EACX,MAAMsV,EAAWL,EAAYtP,MAAM,KACnC,IAAK,MAAM4P,KAAWD,EACdC,IACAvV,EAAWnR,EAAUrC,CAAG,GAAGwT,KAAO,EAAInR,EAAUW,cAAa,EAAI4O,EAAO4L,qBAAqBuL,MAC7FpkB,EAAWtC,EAAUrC,CAAG,GAAG2E,QAAW6O,KAG9C,OAAO7O,EACP,SAASkkB,EAASG,EAAaJ,GAC3B,MAAO,iBAAiBI,KAAeJ,iCAAkCrS,GAC7E,CACJ,CACAhX,EAAQ0jB,QAAUA,C,kBCrgBlB5jB,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQqmB,qBAAuBrmB,EAAQsmB,gBAAkBtmB,EAAQ6oB,gBAAkB7oB,EAAQ8oB,sBAAmB,EAC9G,MAAMhmB,EAAY,EAAQ,OACpBwP,EAAU,EAAQ,OAClBvL,EAAS,EAAQ,OACjB0Z,EAAW,EAAQ,OA+DzB,SAASiJ,EAAWjW,GAChB,MAAM,IAAEjB,EAAG,KAAEyB,EAAI,GAAElB,GAAOU,EAC1BjB,EAAIG,GAAGI,EAAG6D,YAAY,IAAMpE,EAAIhF,OAAOyG,EAAUnR,EAAUrC,CAAG,GAAGsS,EAAG6D,cAAc7D,EAAG8D,wBACzF,CAcA,SAAS8S,EAAWnX,EAAKe,EAASkT,GAC9B,QAAehkB,IAAXgkB,EACA,MAAM,IAAIviB,MAAM,YAAYqP,wBAChC,OAAOf,EAAIjG,WAAW,UAA4B,mBAAVka,EAAuB,CAAEzV,IAAKyV,GAAW,CAAEzV,IAAKyV,EAAQniB,MAAM,EAAIxB,EAAUvC,WAAWkmB,IACnI,CAnEAzmB,EAAQ8oB,iBAhBR,SAA0BrV,EAAK5B,GAC3B,MAAM,IAAEW,EAAG,QAAEe,EAAO,OAAEmB,EAAM,aAAEC,EAAY,GAAE5B,GAAOU,EAC7CmW,EAAc/X,EAAIgY,MAAMxnB,KAAK0Q,EAAGsE,KAAM3C,EAAQC,EAAc5B,GAC5D+W,EAAYH,EAAWnX,EAAKe,EAASqW,IACZ,IAA3B7W,EAAGzR,KAAKsmB,gBACR7U,EAAGsE,KAAKuQ,eAAegC,GAAa,GACxC,MAAM/I,EAAQrO,EAAIrK,KAAK,SACvBsL,EAAIwU,UAAU,CACVvT,OAAQkV,EACRrV,WAAYzR,EAAUxC,IACtB8T,cAAe,GAAGrB,EAAGqB,iBAAiBb,IACtCwB,aAAc+U,EACdlW,eAAe,GAChBiN,GACHpN,EAAIoT,KAAKhG,GAAO,IAAMpN,EAAIpK,OAAM,IACpC,EA8CArJ,EAAQ6oB,gBA5CR,SAAyBpV,EAAK5B,GAC1B,IAAInN,EACJ,MAAM,IAAE8N,EAAG,QAAEe,EAAO,OAAEmB,EAAM,aAAEC,EAAY,MAAExS,EAAK,GAAE4Q,GAAOU,GAwD9D,UAA2B,UAAEP,GAAarB,GACtC,GAAIA,EAAI7G,QAAUkI,EAAUC,OACxB,MAAM,IAAIjP,MAAM,+BACxB,CA1DI6lB,CAAkBhX,EAAIlB,GACtB,MAAM8F,GAAYxV,GAAS0P,EAAIkX,QAAUlX,EAAIkX,QAAQ1mB,KAAK0Q,EAAGsE,KAAM3C,EAAQC,EAAc5B,GAAMlB,EAAI8F,SAC7FqS,EAAcL,EAAWnX,EAAKe,EAASoE,GACvCkJ,EAAQrO,EAAIjF,IAAI,SA4BtB,SAAS0c,EAAYC,GAASrY,EAAI7G,MAAYlI,EAAUrC,CAAG,SAAWqC,EAAUxC,MAC5E,MAAM6pB,EAAUpX,EAAGzR,KAAK8oB,YAAc9X,EAAQlR,QAAQQ,KAAO0Q,EAAQlR,QAAQiW,KACvEgT,IAAgB,YAAaxY,IAAQ1P,IAAyB,IAAf0P,EAAI6C,QACzDlC,EAAIhF,OAAOqT,EAAW/d,EAAUrC,CAAG,GAAGypB,KAAS,EAAInjB,EAAOujB,kBAAkB7W,EAAKuW,EAAaG,EAASE,KAAexY,EAAI0Y,UAC9H,CACA,SAASC,EAAW3X,GAChB,IAAInO,EACJ8N,EAAIG,IAAG,EAAI7P,EAAU2D,KAA0B,QAApB/B,EAAKmN,EAAIgP,aAA0B,IAAPnc,EAAgBA,EAAKmc,GAAQhO,EACxF,CAnCAY,EAAI+T,WAAW3G,GAEf,WACI,IAAmB,IAAfhP,EAAIgB,OACJoX,IACIpY,EAAI0Y,WACJb,EAAWjW,GACf+W,GAAW,IAAM/W,EAAIpK,cAEpB,CACD,MAAMohB,EAAW5Y,EAAI7G,MAM7B,WACI,MAAMyf,EAAWjY,EAAIjF,IAAI,WAAY,MAErC,OADAiF,EAAIkY,KAAI,IAAMT,EAAgBnnB,EAAUrC,CAAG,YAAY2J,GAAMoI,EAAIhF,OAAOqT,GAAO,GAAOlO,GAAO7P,EAAUrC,CAAG,GAAG2J,gBAAgB2I,EAAG5S,mBAAmB,IAAMqS,EAAIhF,OAAOid,EAAc3nB,EAAUrC,CAAG,GAAG2J,cAAa,IAAMoI,EAAIY,MAAMhJ,OACxNqgB,CACX,CAVqCE,GAWrC,WACI,MAAMC,EAAmB9nB,EAAUrC,CAAG,GAAGupB,WAGzC,OAFAxX,EAAIhF,OAAOod,EAAc,MACzBX,EAAYnnB,EAAUxC,KACfsqB,CACX,CAhBuDC,GAC3ChZ,EAAI0Y,WACJb,EAAWjW,GACf+W,GAAW,IA6BvB,SAAiB/W,EAAKT,GAClB,MAAM,IAAER,GAAQiB,EAChBjB,EAAIG,GAAO7P,EAAUrC,CAAG,iBAAiBuS,MAAS,KAC9CR,EACKhF,OAAO8E,EAAQlR,QAAQwR,QAAa9P,EAAUrC,CAAG,GAAG6R,EAAQlR,QAAQwR,sBAAsBI,OAAUV,EAAQlR,QAAQwR,kBAAkBI,MACtIxF,OAAO8E,EAAQlR,QAAQyR,OAAY/P,EAAUrC,CAAG,GAAG6R,EAAQlR,QAAQwR,mBACxE,EAAI6N,EAAS1O,cAAc0B,EAAI,IAChC,IAAMA,EAAIpK,SACjB,CArC6ByhB,CAAQrX,EAAKgX,IAClC,CACJ,IAdAhX,EAAI8T,GAAwB,QAApB7iB,EAAKmN,EAAIgP,aAA0B,IAAPnc,EAAgBA,EAAKmc,EAmC7D,EAiCA7gB,EAAQsmB,gBATR,SAAyB5R,EAAQlB,EAAY+S,GAAiB,GAE1D,OAAS/S,EAAWhP,QAChBgP,EAAW/H,MAAMoc,GAAc,UAAPA,EAClBliB,MAAMC,QAAQ8O,GACP,WAAPmT,EACInT,GAA2B,iBAAVA,IAAuB/O,MAAMC,QAAQ8O,UAC/CA,GAAUmT,GAAOtB,QAAmC,IAAV7R,GACnE,EAuBA1U,EAAQqmB,qBArBR,UAA8B,OAAE3R,EAAM,KAAEpT,EAAI,KAAE+V,EAAI,cAAEjD,GAAiBvC,EAAK0B,GAEtE,GAAI5N,MAAMC,QAAQiM,EAAI0B,UAAY1B,EAAI0B,QAAQkO,SAASlO,GAAW1B,EAAI0B,UAAYA,EAC9E,MAAM,IAAIrP,MAAM,4BAEpB,MAAM6mB,EAAOlZ,EAAImZ,aACjB,GAAID,aAAmC,EAASA,EAAKtf,MAAM4U,IAASvgB,OAAOmrB,UAAUC,eAAe7oB,KAAKqS,EAAQ2L,KAC7G,MAAM,IAAInc,MAAM,2CAA2CqP,MAAYwX,EAAKllB,KAAK,QAErF,GAAIgM,EAAI+V,iBACU/V,EAAI+V,eAAelT,EAAOnB,IAC5B,CACR,MAAMkH,EAAM,YAAYlH,gCAAsCa,OAC1DiD,EAAK8T,WAAWtZ,EAAI+V,eAAe/U,QACvC,GAA4B,QAAxBvR,EAAKsmB,eAGL,MAAM,IAAI1jB,MAAMuW,GAFhBpD,EAAKc,OAAO9O,MAAMoR,EAG1B,CAER,C,kBCxHA3a,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQqoB,oBAAsBroB,EAAQooB,oBAAsBpoB,EAAQmoB,kBAAe,EACnF,MAAMrlB,EAAY,EAAQ,OACpBuP,EAAS,EAAQ,OAgCvBrS,EAAQmoB,aA/BR,SAAsBpV,GAAI,QAAEQ,EAAO,WAAE6X,EAAU,OAAE1W,EAAM,WAAEH,EAAU,cAAEH,EAAa,aAAEW,IAChF,QAAgBtS,IAAZ8Q,QAAoC9Q,IAAXiS,EACzB,MAAM,IAAIxQ,MAAM,wDAEpB,QAAgBzB,IAAZ8Q,EAAuB,CACvB,MAAM8C,EAAMtD,EAAG2B,OAAOnB,GACtB,YAAsB9Q,IAAf2oB,EACD,CACE1W,OAAQ2B,EACR9B,WAAgBzR,EAAUrC,CAAG,GAAGsS,EAAGwB,cAAa,EAAIzR,EAAUW,aAAa8P,KAC3Ea,cAAe,GAAGrB,EAAGqB,iBAAiBb,KAExC,CACEmB,OAAQ2B,EAAI+U,GACZ7W,WAAgBzR,EAAUrC,CAAG,GAAGsS,EAAGwB,cAAa,EAAIzR,EAAUW,aAAa8P,MAAW,EAAIzQ,EAAUW,aAAa2nB,KACjHhX,cAAe,GAAGrB,EAAGqB,iBAAiBb,MAAW,EAAIlB,EAAO8L,gBAAgBiN,KAExF,CACA,QAAe3oB,IAAXiS,EAAsB,CACtB,QAAmBjS,IAAf8R,QAA8C9R,IAAlB2R,QAAgD3R,IAAjBsS,EAC3D,MAAM,IAAI7Q,MAAM,+EAEpB,MAAO,CACHwQ,SACAH,aACAQ,eACAX,gBAER,CACA,MAAM,IAAIlQ,MAAM,8CACpB,EAiCAlE,EAAQooB,oBA/BR,SAA6BH,EAAWlV,GAAI,SAAE2M,EAAUC,aAAc0L,EAAM,KAAEpX,EAAI,UAAEgD,EAAS,aAAExC,IAC3F,QAAahS,IAATwR,QAAmCxR,IAAbid,EACtB,MAAM,IAAIxb,MAAM,uDAEpB,MAAM,IAAEsO,GAAQO,EAChB,QAAiBtQ,IAAbid,EAAwB,CACxB,MAAM,UAAEvL,EAAS,YAAE4C,EAAW,KAAEzV,GAASyR,EAEzCuY,EADiB9Y,EAAIjF,IAAI,OAAYzK,EAAUrC,CAAG,GAAGsS,EAAGkB,QAAO,EAAInR,EAAUW,aAAaic,MAAa,IAEvGuI,EAAU9T,UAAgBrR,EAAUtC,GAAK,GAAG2T,KAAY,EAAI9B,EAAO+C,cAAcsK,EAAU2L,EAAQ/pB,EAAKse,oBACxGqI,EAAUpR,mBAAyB/T,EAAUrC,CAAG,GAAGif,IACnDuI,EAAUlR,YAAc,IAAIA,EAAakR,EAAUpR,mBACvD,CAUA,SAASyU,EAAiBC,GACtBtD,EAAUhU,KAAOsX,EACjBtD,EAAUjR,UAAYjE,EAAGiE,UAAY,EACrCiR,EAAUhR,UAAY,GACtBlE,EAAGmE,kBAAoB,IAAIzK,IAC3Bwb,EAAUrR,WAAa7D,EAAGkB,KAC1BgU,EAAUnR,UAAY,IAAI/D,EAAG+D,UAAWyU,EAC5C,MAhBa9oB,IAATwR,IAEAqX,EADiBrX,aAAgBnR,EAAUzC,KAAO4T,EAAOzB,EAAIjF,IAAI,OAAQ0G,GAAM,SAE1DxR,IAAjBgS,IACAwT,EAAUxT,aAAeA,IAG7BwC,IACAgR,EAAUhR,UAAYA,EAS9B,EAYAjX,EAAQqoB,oBAVR,SAA6BJ,GAAW,iBAAEuD,EAAgB,YAAEC,EAAW,cAAE7X,EAAa,aAAEgB,EAAY,UAAEf,SAC5EpR,IAAlBmR,IACAqU,EAAUrU,cAAgBA,QACTnR,IAAjBmS,IACAqT,EAAUrT,aAAeA,QACXnS,IAAdoR,IACAoU,EAAUpU,UAAYA,GAC1BoU,EAAUuD,iBAAmBA,EAC7BvD,EAAUwD,YAAcA,CAC5B,C,iBC7EA3rB,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQI,QAAUJ,EAAQK,KAAOL,EAAQM,IAAMN,EAAQO,UAAYP,EAAQQ,IAAMR,EAAQS,EAAIT,EAAQU,gBAAa,EAClH,IAAIiC,EAAa,EAAQ,OACzB7C,OAAOC,eAAeC,EAAS,aAAc,CAAE4C,YAAY,EAAMC,IAAK,WAAc,OAAOF,EAAWjC,UAAY,IAClH,IAAIoC,EAAY,EAAQ,OACxBhD,OAAOC,eAAeC,EAAS,IAAK,CAAE4C,YAAY,EAAMC,IAAK,WAAc,OAAOC,EAAUrC,CAAG,IAC/FX,OAAOC,eAAeC,EAAS,MAAO,CAAE4C,YAAY,EAAMC,IAAK,WAAc,OAAOC,EAAUtC,GAAK,IACnGV,OAAOC,eAAeC,EAAS,YAAa,CAAE4C,YAAY,EAAMC,IAAK,WAAc,OAAOC,EAAUvC,SAAW,IAC/GT,OAAOC,eAAeC,EAAS,MAAO,CAAE4C,YAAY,EAAMC,IAAK,WAAc,OAAOC,EAAUxC,GAAK,IACnGR,OAAOC,eAAeC,EAAS,OAAQ,CAAE4C,YAAY,EAAMC,IAAK,WAAc,OAAOC,EAAUzC,IAAM,IACrGP,OAAOC,eAAeC,EAAS,UAAW,CAAE4C,YAAY,EAAMC,IAAK,WAAc,OAAOC,EAAU1C,OAAS,IAC3G,MAAM2C,EAAqB,EAAQ,OAC7BC,EAAc,EAAQ,OACtBqe,EAAU,EAAQ,OAClBqK,EAAY,EAAQ,OACpBC,EAAY,EAAQ,OACpB9V,EAAY,EAAQ,OACpB+N,EAAa,EAAQ,OACrBvR,EAAS,EAAQ,OACjBuZ,EAAiB,EAAQ,OACzBC,EAAQ,EAAQ,OAChBC,EAAgB,CAACtrB,EAAKurB,IAAU,IAAIC,OAAOxrB,EAAKurB,GACtDD,EAAcxnB,KAAO,aACrB,MAAM2nB,EAAsB,CAAC,mBAAoB,cAAe,eAC1DC,EAAkB,IAAIzf,IAAI,CAC5B,WACA,YACA,QACA,UACA,OACA,SACA,UACA,UACA,UACA,gBACA,OACA,MACA,UAEE0f,EAAiB,CACnBC,cAAe,GACfC,OAAQ,gDACR3K,SAAU,8CACV4K,aAAc,mDACdC,WAAY,wDACZC,YAAa,sEACbC,YAAa,oEACbnV,WAAY,oCACZoV,eAAgB,0CAChBC,eAAgB,0CAChBC,YAAa,6CACbC,eAAgB,+EAChBC,MAAO,8CACPtR,UAAW,8CACXuR,UAAW,sBAETC,EAAoB,CACtBxI,sBAAuB,GACvB5E,iBAAkB,GAClBqN,QAAS,sEAIb,SAASC,EAAgBC,GACrB,IAAIzoB,EAAI2G,EAAI+hB,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EACpG,MAAM1qB,EAAImpB,EAAEwB,OACNC,EAA0B,QAAjBlqB,EAAKyoB,EAAE7oB,YAAyB,IAAPI,OAAgB,EAASA,EAAGc,SAC9DA,GAAqB,IAAVopB,QAA4BnsB,IAAVmsB,EAAsB,EAAIA,GAAS,EAChEC,EAAiF,QAAvEzB,EAAuB,QAAjB/hB,EAAK8hB,EAAE7oB,YAAyB,IAAP+G,OAAgB,EAASA,EAAGwjB,cAA2B,IAAPzB,EAAgBA,EAAKtB,EAC9GrV,EAAuC,QAAxB4W,EAAKF,EAAE1W,mBAAgC,IAAP4W,EAAgBA,EAAKxB,EAAMzqB,QAChF,MAAO,CACHqd,aAAkF,QAAnE8O,EAA+B,QAAzBD,EAAKH,EAAE1O,oBAAiC,IAAP6O,EAAgBA,EAAKtpB,SAAsB,IAAPupB,GAAgBA,EAC1GpL,cAAoF,QAApEsL,EAAgC,QAA1BD,EAAKL,EAAEhL,qBAAkC,IAAPqL,EAAgBA,EAAKxpB,SAAsB,IAAPypB,GAAgBA,EAC5GvI,YAAgF,QAAlEyI,EAA8B,QAAxBD,EAAKP,EAAEjI,mBAAgC,IAAPwI,EAAgBA,EAAK1pB,SAAsB,IAAP2pB,EAAgBA,EAAK,MAC7GmB,aAAkF,QAAnEjB,EAA+B,QAAzBD,EAAKT,EAAE2B,oBAAiC,IAAPlB,EAAgBA,EAAK5pB,SAAsB,IAAP6pB,EAAgBA,EAAK,MAC/GkB,eAAsF,QAArEhB,EAAiC,QAA3BD,EAAKX,EAAE4B,sBAAmC,IAAPjB,EAAgBA,EAAK9pB,SAAsB,IAAP+pB,GAAgBA,EAC9GzpB,KAAM6oB,EAAE7oB,KAAO,IAAK6oB,EAAE7oB,KAAMkB,WAAUqpB,UAAW,CAAErpB,WAAUqpB,UAC7DG,aAAwC,QAAzBhB,EAAKb,EAAE6B,oBAAiC,IAAPhB,EAAgBA,EAhBjD,IAiBfiB,SAAgC,QAArBhB,EAAKd,EAAE8B,gBAA6B,IAAPhB,EAAgBA,EAjBzC,IAkBf7rB,KAAwB,QAAjB8rB,EAAKf,EAAE/qB,YAAyB,IAAP8rB,GAAgBA,EAChDlZ,SAAgC,QAArBmZ,EAAKhB,EAAEnY,gBAA6B,IAAPmZ,GAAgBA,EACxD5V,WAAoC,QAAvB6V,EAAKjB,EAAE5U,kBAA+B,IAAP6V,GAAgBA,EAC5DpY,SAAgC,QAArBqY,EAAKlB,EAAEnX,gBAA6B,IAAPqY,EAAgBA,EAAK,MAC7Da,cAA0C,QAA1BZ,EAAKnB,EAAE+B,qBAAkC,IAAPZ,GAAgBA,EAClE1G,eAA4C,QAA3B2G,EAAKpB,EAAEvF,sBAAmC,IAAP2G,GAAgBA,EACpEY,gBAA8C,QAA5BX,EAAKrB,EAAEgC,uBAAoC,IAAPX,GAAgBA,EACtEY,cAA0C,QAA1BX,EAAKtB,EAAEiC,qBAAkC,IAAPX,GAAgBA,EAClEY,WAAoC,QAAvBX,EAAKvB,EAAEkC,kBAA+B,IAAPX,GAAgBA,EAC5DjY,YAAaA,EAErB,CACA,MAAMtT,EACF,WAAA9B,CAAYC,EAAO,CAAC,GAChBM,KAAKgX,QAAU,CAAC,EAChBhX,KAAKU,KAAO,CAAC,EACbV,KAAK0tB,QAAU,CAAC,EAChB1tB,KAAK2V,cAAgB,IAAI9K,IACzB7K,KAAK2tB,SAAW,CAAC,EACjB3tB,KAAK4tB,OAAS,IAAIpe,IAClB9P,EAAOM,KAAKN,KAAO,IAAKA,KAAS4rB,EAAgB5rB,IACjD,MAAM,IAAEgH,EAAG,MAAEyD,GAAUnK,KAAKN,KAAKgD,KACjC1C,KAAKmP,MAAQ,IAAI4a,EAAU9kB,WAAW,CAAEkK,MAAO,CAAC,EAAGb,SAAUgc,EAAiB5jB,MAAKyD,UACnFnK,KAAKuW,OAobb,SAAmBA,GACf,IAAe,IAAXA,EACA,OAAOsX,EACX,QAAehtB,IAAX0V,EACA,OAAOuX,QACX,GAAIvX,EAAOwX,KAAOxX,EAAOsH,MAAQtH,EAAO9O,MACpC,OAAO8O,EACX,MAAM,IAAIjU,MAAM,oDACpB,CA5bsB0rB,CAAUtuB,EAAK6W,QAC7B,MAAM0X,EAAYvuB,EAAK6tB,gBACvB7tB,EAAK6tB,iBAAkB,EACvBvtB,KAAKqY,OAAQ,EAAIoH,EAAQzE,YACzBkT,EAAaztB,KAAKT,KAAMuqB,EAAgB7qB,EAAM,iBAC9CwuB,EAAaztB,KAAKT,KAAMorB,EAAmB1rB,EAAM,aAAc,QAC/DM,KAAKmuB,UAAYC,EAAqB3tB,KAAKT,MACvCN,EAAKguB,SACLW,EAAkB5tB,KAAKT,MAC3BA,KAAKD,mBACLC,KAAKM,wBACDZ,EAAKqc,UACLuS,EAAmB7tB,KAAKT,KAAMN,EAAKqc,UACf,iBAAbrc,EAAKc,MACZR,KAAK0B,cAAchC,EAAKc,MAC5B+tB,EAAkB9tB,KAAKT,MACvBN,EAAK6tB,gBAAkBU,CAC3B,CACA,gBAAAluB,GACIC,KAAKK,WAAW,SACpB,CACA,qBAAAC,GACI,MAAM,MAAEC,EAAK,KAAEC,EAAI,SAAE4T,GAAapU,KAAKN,KACvC,IAAI8uB,EAAiBxE,EACJ,OAAb5V,IACAoa,EAAiB,IAAKxE,GACtBwE,EAAejX,GAAKiX,EAAeC,WAC5BD,EAAeC,KAEtBjuB,GAAQD,GACRP,KAAK0B,cAAc8sB,EAAgBA,EAAepa,IAAW,EACrE,CACA,WAAAzT,GACI,MAAM,KAAEH,EAAI,SAAE4T,GAAapU,KAAKN,KAChC,OAAQM,KAAKN,KAAKiB,YAA6B,iBAARH,EAAmBA,EAAK4T,IAAa5T,OAAOK,CACvF,CACA,QAAAkV,CAAS2Y,EACTrc,GAEI,IAAIlS,EACJ,GAA2B,iBAAhBuuB,GAEP,GADAvuB,EAAIH,KAAKY,UAAU8tB,IACdvuB,EACD,MAAM,IAAImC,MAAM,8BAA8BosB,WAGlDvuB,EAAIH,KAAKmnB,QAAQuH,GAErB,MAAMzP,EAAQ9e,EAAEkS,GAGhB,MAFM,WAAYlS,IACdH,KAAKiR,OAAS9Q,EAAE8Q,QACbgO,CACX,CACA,OAAAkI,CAAQrU,EAAQ6b,GACZ,MAAMla,EAAMzU,KAAK4uB,WAAW9b,EAAQ6b,GACpC,OAAQla,EAAIsB,UAAY/V,KAAK6uB,kBAAkBpa,EACnD,CACA,YAAAqa,CAAahc,EAAQtS,GACjB,GAAmC,mBAAxBR,KAAKN,KAAKqvB,WACjB,MAAM,IAAIzsB,MAAM,2CAEpB,MAAM,WAAEysB,GAAe/uB,KAAKN,KAC5B,OAAOsvB,EAAgBvuB,KAAKT,KAAM8S,EAAQtS,GAC1C4I,eAAe4lB,EAAgBC,EAASN,SAC9BO,EAAezuB,KAAKT,KAAMivB,EAAQE,SACxC,MAAM1a,EAAMzU,KAAK4uB,WAAWK,EAASN,GACrC,OAAOla,EAAIsB,UAAYqZ,EAAc3uB,KAAKT,KAAMyU,EACpD,CACArL,eAAe8lB,EAAe/W,GACtBA,IAASnY,KAAKY,UAAUuX,UAClB6W,EAAgBvuB,KAAKT,KAAM,CAAEmY,SAAQ,EAEnD,CACA/O,eAAegmB,EAAc3a,GACzB,IACI,OAAOzU,KAAK6uB,kBAAkBpa,EAClC,CACA,MAAOjM,GACH,KAAMA,aAAapH,EAAY5B,SAC3B,MAAMgJ,EAGV,OAFA6mB,EAAY5uB,KAAKT,KAAMwI,SACjB8mB,EAAkB7uB,KAAKT,KAAMwI,EAAEuQ,eAC9BqW,EAAc3uB,KAAKT,KAAMyU,EACpC,CACJ,CACA,SAAS4a,GAActW,cAAe3J,EAAG,WAAE0J,IACvC,GAAI9Y,KAAKU,KAAK0O,GACV,MAAM,IAAI9M,MAAM,aAAa8M,mBAAqB0J,uBAE1D,CACA1P,eAAekmB,EAAkBlgB,GAC7B,MAAM6f,QAAgBM,EAAY9uB,KAAKT,KAAMoP,GACxCpP,KAAKU,KAAK0O,UACL8f,EAAezuB,KAAKT,KAAMivB,EAAQE,SACvCnvB,KAAKU,KAAK0O,IACXpP,KAAKwvB,UAAUP,EAAS7f,EAAK5O,EACrC,CACA4I,eAAemmB,EAAYngB,GACvB,MAAM6H,EAAIjX,KAAK2tB,SAASve,GACxB,GAAI6H,EACA,OAAOA,EACX,IACI,aAAcjX,KAAK2tB,SAASve,GAAO2f,EAAW3f,GAClD,CACA,eACWpP,KAAK2tB,SAASve,EACzB,CACJ,CACJ,CAEA,SAAAogB,CAAU1c,EACVrO,EACAkqB,EACAc,EAAkBzvB,KAAKN,KAAKsmB,gBAExB,GAAIjiB,MAAMC,QAAQ8O,GAAS,CACvB,IAAK,MAAM2B,KAAO3B,EACd9S,KAAKwvB,UAAU/a,OAAK5T,EAAW8tB,EAAOc,GAC1C,OAAOzvB,IACX,CACA,IAAIuX,EACJ,GAAsB,iBAAXzE,EAAqB,CAC5B,MAAM,SAAEsB,GAAapU,KAAKN,KAE1B,GADA6X,EAAKzE,EAAOsB,QACDvT,IAAP0W,GAAiC,iBAANA,EAC3B,MAAM,IAAIjV,MAAM,UAAU8R,mBAElC,CAIA,OAHA3P,GAAM,EAAIwP,EAAUM,aAAa9P,GAAO8S,GACxCvX,KAAK0vB,aAAajrB,GAClBzE,KAAKgX,QAAQvS,GAAOzE,KAAK4uB,WAAW9b,EAAQ6b,EAAOlqB,EAAKgrB,GAAiB,GAClEzvB,IACX,CAGA,aAAA0B,CAAcoR,EAAQrO,EACtBgrB,EAAkBzvB,KAAKN,KAAKsmB,gBAGxB,OADAhmB,KAAKwvB,UAAU1c,EAAQrO,GAAK,EAAMgrB,GAC3BzvB,IACX,CAEA,cAAAgmB,CAAelT,EAAQ6c,GACnB,GAAqB,kBAAV7c,EACP,OAAO,EACX,IAAIqc,EAEJ,GADAA,EAAUrc,EAAOqc,aACDtuB,IAAZsuB,GAA2C,iBAAXA,EAChC,MAAM,IAAI7sB,MAAM,4BAGpB,GADA6sB,EAAUA,GAAWnvB,KAAKN,KAAKiB,aAAeX,KAAKW,eAC9CwuB,EAGD,OAFAnvB,KAAKuW,OAAOsH,KAAK,6BACjB7d,KAAKiR,OAAS,MACP,EAEX,MAAMgO,EAAQjf,KAAK+V,SAASoZ,EAASrc,GACrC,IAAKmM,GAAS0Q,EAAiB,CAC3B,MAAMje,EAAU,sBAAwB1R,KAAKupB,aAC7C,GAAiC,QAA7BvpB,KAAKN,KAAKsmB,eAGV,MAAM,IAAI1jB,MAAMoP,GAFhB1R,KAAKuW,OAAO9O,MAAMiK,EAG1B,CACA,OAAOuN,CACX,CAGA,SAAAre,CAAUgvB,GACN,IAAInb,EACJ,KAAsD,iBAAvCA,EAAMob,EAAUpvB,KAAKT,KAAM4vB,KACtCA,EAASnb,EACb,QAAY5T,IAAR4T,EAAmB,CACnB,MAAM,SAAEL,GAAapU,KAAKN,KACpB2U,EAAO,IAAIyV,EAAU9V,UAAU,CAAElB,OAAQ,CAAC,EAAGsB,aAEnD,GADAK,EAAMqV,EAAUlW,cAAcnT,KAAKT,KAAMqU,EAAMub,IAC1Cnb,EACD,OACJzU,KAAKU,KAAKkvB,GAAUnb,CACxB,CACA,OAAQA,EAAIsB,UAAY/V,KAAK6uB,kBAAkBpa,EACnD,CAKA,YAAAqb,CAAapB,GACT,GAAIA,aAAwBtE,OAGxB,OAFApqB,KAAK+vB,kBAAkB/vB,KAAKgX,QAAS0X,GACrC1uB,KAAK+vB,kBAAkB/vB,KAAKU,KAAMguB,GAC3B1uB,KAEX,cAAe0uB,GACX,IAAK,YAID,OAHA1uB,KAAK+vB,kBAAkB/vB,KAAKgX,SAC5BhX,KAAK+vB,kBAAkB/vB,KAAKU,MAC5BV,KAAK4tB,OAAOoC,QACLhwB,KACX,IAAK,SAAU,CACX,MAAMyU,EAAMob,EAAUpvB,KAAKT,KAAM0uB,GAKjC,MAJkB,iBAAPja,GACPzU,KAAK4tB,OAAOpX,OAAO/B,EAAI3B,eACpB9S,KAAKgX,QAAQ0X,UACb1uB,KAAKU,KAAKguB,GACV1uB,IACX,CACA,IAAK,SAAU,CACX,MAAMiwB,EAAWvB,EACjB1uB,KAAK4tB,OAAOpX,OAAOyZ,GACnB,IAAI1Y,EAAKmX,EAAa1uB,KAAKN,KAAK0U,UAMhC,OALImD,IACAA,GAAK,EAAItD,EAAUM,aAAagD,UACzBvX,KAAKgX,QAAQO,UACbvX,KAAKU,KAAK6W,IAEdvX,IACX,CACA,QACI,MAAM,IAAIsC,MAAM,uCAE5B,CAEA,aAAArC,CAAciwB,GACV,IAAK,MAAMjgB,KAAOigB,EACdlwB,KAAKK,WAAW4P,GACpB,OAAOjQ,IACX,CACA,UAAAK,CAAW8vB,EAAUlgB,GAEjB,IAAI0B,EACJ,GAAuB,iBAAZwe,EACPxe,EAAUwe,EACQ,iBAAPlgB,IACPjQ,KAAKuW,OAAOsH,KAAK,4DACjB5N,EAAI0B,QAAUA,OAGjB,IAAuB,iBAAZwe,QAAgCtvB,IAARoP,EAQpC,MAAM,IAAI3N,MAAM,kCALhB,GADAqP,GADA1B,EAAMkgB,GACQxe,QACV5N,MAAMC,QAAQ2N,KAAaA,EAAQ/O,OACnC,MAAM,IAAIN,MAAM,yDAKxB,CAEA,GADA8tB,EAAa3vB,KAAKT,KAAM2R,EAAS1B,IAC5BA,EAED,OADA,EAAIQ,EAAOiJ,UAAU/H,GAAU8M,GAAQ4R,EAAQ5vB,KAAKT,KAAMye,KACnDze,KAEXswB,EAAkB7vB,KAAKT,KAAMiQ,GAC7B,MAAMsO,EAAa,IACZtO,EACHoL,MAAM,EAAI2G,EAAW1C,cAAcrP,EAAIoL,MACvCzJ,YAAY,EAAIoQ,EAAW1C,cAAcrP,EAAI2B,aAKjD,OAHA,EAAInB,EAAOiJ,UAAU/H,EAAoC,IAA3B4M,EAAWlD,KAAKzY,OACvC2tB,GAAMF,EAAQ5vB,KAAKT,KAAMuwB,EAAGhS,GAC5BgS,GAAMhS,EAAWlD,KAAKnb,SAASggB,GAAMmQ,EAAQ5vB,KAAKT,KAAMuwB,EAAGhS,EAAY2B,MACvElgB,IACX,CACA,UAAAwwB,CAAW7e,GACP,MAAM0M,EAAOre,KAAKqY,MAAMyD,IAAInK,GAC5B,MAAsB,iBAAR0M,EAAmBA,EAAKE,aAAeF,CACzD,CAEA,aAAAoS,CAAc9e,GAEV,MAAM,MAAE0G,GAAUrY,YACXqY,EAAM0D,SAASpK,UACf0G,EAAMyD,IAAInK,GACjB,IAAK,MAAMyM,KAAS/F,EAAMiD,MAAO,CAC7B,MAAMjY,EAAI+a,EAAM9C,MAAMoV,WAAWrS,GAASA,EAAK1M,UAAYA,IACvDtO,GAAK,GACL+a,EAAM9C,MAAM3X,OAAON,EAAG,EAC9B,CACA,OAAOrD,IACX,CAEA,SAAA2wB,CAAUpqB,EAAMkkB,GAIZ,MAHqB,iBAAVA,IACPA,EAAS,IAAIL,OAAOK,IACxBzqB,KAAK0tB,QAAQnnB,GAAQkkB,EACdzqB,IACX,CACA,UAAAupB,CAAWtY,EAASjR,KAAKiR,QACzB,UAAE2f,EAAY,KAAI,QAAEC,EAAU,QAAW,CAAC,GAEtC,OAAK5f,GAA4B,IAAlBA,EAAOrO,OAEfqO,EACF6f,KAAKtoB,GAAM,GAAGqoB,IAAUroB,EAAE8J,gBAAgB9J,EAAEkJ,YAC5C1O,QAAO,CAAC+tB,EAAMlY,IAAQkY,EAAOH,EAAY/X,IAHnC,WAIf,CACA,eAAApX,CAAgBD,EAAYwvB,GACxB,MAAM1V,EAAQtb,KAAKqY,MAAMyD,IACzBta,EAAa6C,KAAK6S,MAAM7S,KAAK1F,UAAU6C,IACvC,IAAK,MAAM8lB,KAAe0J,EAAsB,CAC5C,MAAMrJ,EAAWL,EAAYtP,MAAM,KAAK5T,MAAM,GAC9C,IAAI2X,EAAWva,EACf,IAAK,MAAMyvB,KAAOtJ,EACd5L,EAAWA,EAASkV,GACxB,IAAK,MAAMxsB,KAAO6W,EAAO,CACrB,MAAM+C,EAAO/C,EAAM7W,GACnB,GAAmB,iBAAR4Z,EACP,SACJ,MAAM,MAAE9d,GAAU8d,EAAKE,WACjBzL,EAASiJ,EAAStX,GACpBlE,GAASuS,IACTiJ,EAAStX,GAAOysB,EAAape,GACrC,CACJ,CACA,OAAOtR,CACX,CACA,iBAAAuuB,CAAkB/Y,EAASma,GACvB,IAAK,MAAMvB,KAAU5Y,EAAS,CAC1B,MAAMvC,EAAMuC,EAAQ4Y,GACfuB,IAASA,EAAM9uB,KAAKutB,KACH,iBAAPnb,SACAuC,EAAQ4Y,GAEVnb,IAAQA,EAAIjU,OACjBR,KAAK4tB,OAAOpX,OAAO/B,EAAI3B,eAChBkE,EAAQ4Y,IAG3B,CACJ,CACA,UAAAhB,CAAW9b,EAAQtS,EAAM8T,EAAQ0R,EAAiBhmB,KAAKN,KAAKsmB,eAAgBwJ,EAAYxvB,KAAKN,KAAK4tB,eAC9F,IAAI/V,EACJ,MAAM,SAAEnD,GAAapU,KAAKN,KAC1B,GAAqB,iBAAVoT,EACPyE,EAAKzE,EAAOsB,OAEX,CACD,GAAIpU,KAAKN,KAAK8V,IACV,MAAM,IAAIlT,MAAM,yBACf,GAAqB,kBAAVwQ,EACZ,MAAM,IAAIxQ,MAAM,mCACxB,CACA,IAAImS,EAAMzU,KAAK4tB,OAAO3sB,IAAI6R,GAC1B,QAAYjS,IAAR4T,EACA,OAAOA,EACXH,GAAS,EAAIL,EAAUM,aAAagD,GAAMjD,GAC1C,MAAME,EAAYP,EAAU+E,cAAcvY,KAAKT,KAAM8S,EAAQwB,GAW7D,OAVAG,EAAM,IAAIqV,EAAU9V,UAAU,CAAElB,SAAQsB,WAAU5T,OAAM8T,SAAQE,cAChExU,KAAK4tB,OAAOne,IAAIgF,EAAI3B,OAAQ2B,GACxB+a,IAAclb,EAAO8c,WAAW,OAE5B9c,GACAtU,KAAK0vB,aAAapb,GACtBtU,KAAKU,KAAK4T,GAAUG,GAEpBuR,GACAhmB,KAAKgmB,eAAelT,GAAQ,GACzB2B,CACX,CACA,YAAAib,CAAanY,GACT,GAAIvX,KAAKgX,QAAQO,IAAOvX,KAAKU,KAAK6W,GAC9B,MAAM,IAAIjV,MAAM,0BAA0BiV,oBAElD,CACA,iBAAAsX,CAAkBpa,GAMd,GALIA,EAAIjU,KACJR,KAAKqxB,mBAAmB5c,GAExBqV,EAAU/V,cAActT,KAAKT,KAAMyU,IAElCA,EAAIsB,SACL,MAAM,IAAIzT,MAAM,4BACpB,OAAOmS,EAAIsB,QACf,CACA,kBAAAsb,CAAmB5c,GACf,MAAM6c,EAActxB,KAAKN,KACzBM,KAAKN,KAAOM,KAAKmuB,UACjB,IACIrE,EAAU/V,cAActT,KAAKT,KAAMyU,EACvC,CACA,QACIzU,KAAKN,KAAO4xB,CAChB,CACJ,EAKJ,SAASpD,EAAaqD,EAAWC,EAAS3Y,EAAKkV,EAAM,SACjD,IAAK,MAAMtpB,KAAO8sB,EAAW,CACzB,MAAME,EAAMhtB,EACRgtB,KAAOD,GACPxxB,KAAKuW,OAAOwX,GAAK,GAAGlV,aAAepU,MAAQ8sB,EAAUE,KAC7D,CACJ,CACA,SAAS5B,EAAUD,GAEf,OADAA,GAAS,EAAI3b,EAAUM,aAAaqb,GAC7B5vB,KAAKgX,QAAQ4Y,IAAW5vB,KAAKU,KAAKkvB,EAC7C,CACA,SAASrB,IACL,MAAMmD,EAAc1xB,KAAKN,KAAKsX,QAC9B,GAAK0a,EAEL,GAAI3tB,MAAMC,QAAQ0tB,GACd1xB,KAAKwvB,UAAUkC,QAEf,IAAK,MAAMjtB,KAAOitB,EACd1xB,KAAKwvB,UAAUkC,EAAYjtB,GAAMA,EAC7C,CACA,SAAS4pB,IACL,IAAK,MAAM9nB,KAAQvG,KAAKN,KAAKguB,QAAS,CAClC,MAAMjD,EAASzqB,KAAKN,KAAKguB,QAAQnnB,GAC7BkkB,GACAzqB,KAAK2wB,UAAUpqB,EAAMkkB,EAC7B,CACJ,CACA,SAAS6D,EAAmBqD,GACxB,GAAI5tB,MAAMC,QAAQ2tB,GACd3xB,KAAKC,cAAc0xB,OADvB,CAIA3xB,KAAKuW,OAAOsH,KAAK,oDACjB,IAAK,MAAMlM,KAAWggB,EAAM,CACxB,MAAM1hB,EAAM0hB,EAAKhgB,GACZ1B,EAAI0B,UACL1B,EAAI0B,QAAUA,GAClB3R,KAAKK,WAAW4P,EACpB,CAPA,CAQJ,CACA,SAASme,IACL,MAAMwD,EAAW,IAAK5xB,KAAKN,MAC3B,IAAK,MAAM+xB,KAAOpH,SACPuH,EAASH,GACpB,OAAOG,CACX,CAjDAxzB,EAAA,QAAkBmD,EAClBA,EAAIhD,gBAAkB4C,EAAmB3B,QACzC+B,EAAIjD,gBAAkB8C,EAAY5B,QAgDlC,MAAMquB,EAAS,CAAE,GAAAE,GAAQ,EAAG,IAAAlQ,GAAS,EAAG,KAAApW,GAAU,GAU5CoqB,EAAe,0BACrB,SAASzB,EAAaze,EAAS1B,GAC3B,MAAM,MAAEoI,GAAUrY,KAOlB,IANA,EAAIyQ,EAAOiJ,UAAU/H,GAAU8M,IAC3B,GAAIpG,EAAM0D,SAAS0C,GACf,MAAM,IAAInc,MAAM,WAAWmc,wBAC/B,IAAKoT,EAAaxvB,KAAKoc,GACnB,MAAM,IAAInc,MAAM,WAAWmc,qBAAuB,IAErDxO,GAEDA,EAAI1P,SAAW,SAAU0P,MAAO,aAAcA,GAC9C,MAAM,IAAI3N,MAAM,wDAExB,CACA,SAAS+tB,EAAQ1e,EAAS4M,EAAYkC,GAClC,IAAI3d,EACJ,MAAM+Y,EAAO0C,aAA+C,EAASA,EAAW1C,KAChF,GAAI4E,GAAY5E,EACZ,MAAM,IAAIvZ,MAAM,+CACpB,MAAM,MAAE+V,GAAUrY,KAClB,IAAI8xB,EAAYjW,EAAOxD,EAAMwD,KAAOxD,EAAMiD,MAAMyW,MAAK,EAAG1W,KAAM6E,KAAQA,IAAMO,IAM5E,GALKqR,IACDA,EAAY,CAAEzW,KAAMoF,EAAUnF,MAAO,IACrCjD,EAAMiD,MAAMhY,KAAKwuB,IAErBzZ,EAAM0D,SAASpK,IAAW,GACrB4M,EACD,OACJ,MAAMF,EAAO,CACT1M,UACA4M,WAAY,IACLA,EACHlD,MAAM,EAAI2G,EAAW1C,cAAcf,EAAWlD,MAC9CzJ,YAAY,EAAIoQ,EAAW1C,cAAcf,EAAW3M,cAGxD2M,EAAWyT,OACXC,EAAcxxB,KAAKT,KAAM8xB,EAAWzT,EAAME,EAAWyT,QAErDF,EAAUxW,MAAMhY,KAAK+a,GACzBhG,EAAMyD,IAAInK,GAAW0M,EACY,QAAhCvb,EAAKyb,EAAWC,kBAA+B,IAAP1b,GAAyBA,EAAG5C,SAASue,GAAQze,KAAKK,WAAWoe,IAC1G,CACA,SAASwT,EAAcH,EAAWzT,EAAM2T,GACpC,MAAM3uB,EAAIyuB,EAAUxW,MAAMoV,WAAWwB,GAAUA,EAAMvgB,UAAYqgB,IAC7D3uB,GAAK,EACLyuB,EAAUxW,MAAM3X,OAAON,EAAG,EAAGgb,IAG7ByT,EAAUxW,MAAMhY,KAAK+a,GACrBre,KAAKuW,OAAOsH,KAAK,QAAQmU,oBAEjC,CACA,SAAS1B,EAAkBrgB,GACvB,IAAI,WAAEzO,GAAeyO,OACFpP,IAAfW,IAEAyO,EAAI1P,OAASP,KAAKN,KAAKa,QACvBiB,EAAa0vB,EAAa1vB,IAC9ByO,EAAI+V,eAAiBhmB,KAAKmnB,QAAQ3lB,GAAY,GAClD,CACA,MAAM2wB,EAAW,CACbha,KAAM,kFAEV,SAAS+Y,EAAape,GAClB,MAAO,CAAEsf,MAAO,CAACtf,EAAQqf,GAC7B,C,kBCtmBAj0B,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtD,MAAMmD,EAAa,EAAQ,OACrB6wB,EAAa,EAAQ,MACrBC,EAAU,EAAQ,OAClBC,EAAO,EAAQ,OACf9H,EAAS,EAAQ,OACjB+H,EAAW,EAAQ,OACnBC,EAAa,EAAQ,OACrBnxB,EAAoB,CAAC,eAiB3BlD,EAAA,QAhBA,SAA2BmC,GAWvB,MATA,CACIiB,EACA6wB,EACAC,EACAC,EACAG,EAAU1yB,KAAMyqB,GAChB+H,EACAE,EAAU1yB,KAAMyyB,IAClBvyB,SAASuU,GAAQzU,KAAK0B,cAAc+S,OAAK5T,GAAW,KAC/Cb,KACP,SAAS0yB,EAAUC,EAAKle,GACpB,OAAOlU,EAAQoyB,EAAIlxB,gBAAgBgT,EAAKnT,GAAqBmT,CACjE,CACJ,C,kBCxBAvW,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IAEtD,MAAM4a,EAAQ,EAAQ,OACtBA,EAAMvW,KAAO,4CACbtE,EAAA,QAAkB6a,C,gBCDlB,SAAS2Z,EAAWh0B,GAChB,MAAM4O,EAAM5O,EAAIgE,OAChB,IAEIvE,EAFAuE,EAAS,EACTiwB,EAAM,EAEV,KAAOA,EAAMrlB,GACT5K,IACAvE,EAAQO,EAAIk0B,WAAWD,KACnBx0B,GAAS,OAAUA,GAAS,OAAUw0B,EAAMrlB,IAE5CnP,EAAQO,EAAIk0B,WAAWD,GACE,QAAZ,MAARx0B,IACDw0B,KAGZ,OAAOjwB,CACX,CAnBA1E,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IAoBtDD,EAAA,QAAkBw0B,EAClBA,EAAWlwB,KAAO,gD,kBCrBlBxE,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtD,MAAM00B,EAAM,EAAQ,OACpBA,EAAIrwB,KAAO,0CACXtE,EAAA,QAAkB20B,C,gBCHlB70B,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtD,MAAME,UAAwB+D,MAC1B,WAAA7C,CAAYwR,GACRtR,MAAM,qBACNK,KAAKiR,OAASA,EACdjR,KAAK2yB,IAAM3yB,KAAKyyB,YAAa,CACjC,EAEJr0B,EAAA,QAAkBG,C,kBCRlBL,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQ40B,6BAA0B,EAClC,MAAM9xB,EAAY,EAAQ,OACpBuP,EAAS,EAAQ,OAKjBR,EAAM,CACR0B,QAAS,kBACT0J,KAAM,QACNzJ,WAAY,CAAC,UAAW,UACxBogB,OAAQ,cACRvqB,MATU,CACViK,QAAS,EAAGkB,QAAUpF,UAAgBtM,EAAUtC,GAAK,2BAA2B4O,UAChFoF,OAAQ,EAAGA,QAAUpF,UAAgBtM,EAAUrC,CAAG,WAAW2O,MAQ7D,IAAA9K,CAAKmP,GACD,MAAM,aAAEkB,EAAY,GAAE5B,GAAOU,GACvB,MAAE/H,GAAUiJ,EACbhP,MAAMC,QAAQ8F,GAInBkpB,EAAwBnhB,EAAK/H,IAHzB,EAAI2G,EAAOuL,iBAAiB7K,EAAI,uEAIxC,GAEJ,SAAS6hB,EAAwBnhB,EAAK/H,GAClC,MAAM,IAAE8G,EAAG,OAAEkC,EAAM,KAAET,EAAI,QAAEV,EAAO,GAAER,GAAOU,EAC3CV,EAAGrH,OAAQ,EACX,MAAM0D,EAAMoD,EAAIlF,MAAM,MAAWxK,EAAUrC,CAAG,GAAGwT,YACjD,IAAe,IAAXS,EACAjB,EAAI0T,UAAU,CAAE/X,IAAK1D,EAAMlH,SAC3BiP,EAAIoT,KAAS/jB,EAAUrC,CAAG,GAAG2O,QAAU1D,EAAMlH,eAE5C,GAAqB,iBAAVkQ,KAAuB,EAAIrC,EAAOkM,mBAAmBxL,EAAI2B,GAAS,CAC9E,MAAMmM,EAAQrO,EAAIhK,IAAI,QAAa1F,EAAUrC,CAAG,GAAG2O,QAAU1D,EAAMlH,UACnEgO,EAAIG,IAAG,EAAI7P,EAAU2D,KAAKoa,IAAQ,IAGtC,SAAuBA,GACnBrO,EAAIlE,SAAS,IAAK5C,EAAMlH,OAAQ4K,GAAMnK,IAClCwO,EAAIwU,UAAU,CAAE1U,UAASmM,SAAUza,EAAG0a,aAActN,EAAOgD,KAAKyK,KAAOe,GAClE9N,EAAGc,WACJrB,EAAIG,IAAG,EAAI7P,EAAU2D,KAAKoa,IAAQ,IAAMrO,EAAIqiB,SAAQ,GAEhE,CAT4CC,CAAcjU,KACtDpN,EAAI8T,GAAG1G,EACX,CAQJ,CACA7gB,EAAQ40B,wBAA0BA,EAClC50B,EAAA,QAAkB6R,C,kBC9ClB/R,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtD,MAAM8G,EAAS,EAAQ,OACjBjE,EAAY,EAAQ,OACpBwP,EAAU,EAAQ,OAClBD,EAAS,EAAQ,OAKjBR,EAAM,CACR0B,QAAS,uBACT0J,KAAM,CAAC,UACPzJ,WAAY,CAAC,UAAW,UACxB+S,gBAAgB,EAChBC,aAAa,EACbnd,MAVU,CACViK,QAAS,sCACTkB,OAAQ,EAAGA,YAAiB1R,EAAUrC,CAAG,wBAAwB+T,EAAOugB,uBASxE,IAAAzwB,CAAKmP,GACD,MAAM,IAAEjB,EAAG,OAAEkC,EAAM,aAAEC,EAAY,KAAEV,EAAI,UAAEF,EAAS,GAAEhB,GAAOU,EAE3D,IAAKM,EACD,MAAM,IAAI7P,MAAM,4BACpB,MAAM,UAAE2P,EAAS,KAAEvS,GAASyR,EAE5B,GADAA,EAAGgF,OAAQ,EACmB,QAA1BzW,EAAK0zB,mBAA8B,EAAI3iB,EAAOkM,mBAAmBxL,EAAI2B,GACrE,OACJ,MAAMqD,GAAQ,EAAIhR,EAAOkuB,qBAAqBtgB,EAAa8O,YACrDyR,GAAW,EAAInuB,EAAOkuB,qBAAqBtgB,EAAawgB,mBA6B9D,SAASC,EAAiB/uB,GACtBmM,EAAIlO,KAASxB,EAAUrC,CAAG,UAAUwT,KAAQ5N,KAChD,CACA,SAASgvB,EAAuBhvB,GAC5B,GAA8B,QAA1B/E,EAAK0zB,kBAA+B1zB,EAAK0zB,mBAA+B,IAAXtgB,EAC7D0gB,EAAiB/uB,OADrB,CAIA,IAAe,IAAXqO,EAKA,OAJAjB,EAAI0T,UAAU,CAAE4N,mBAAoB1uB,IACpCoN,EAAIpK,aACCwK,GACDrB,EAAIqiB,SAGZ,GAAqB,iBAAVngB,KAAuB,EAAIrC,EAAOkM,mBAAmBxL,EAAI2B,GAAS,CACzE,MAAMmM,EAAQrO,EAAIrK,KAAK,SACO,YAA1B7G,EAAK0zB,kBACLM,EAAsBjvB,EAAKwa,GAAO,GAClCrO,EAAIG,IAAG,EAAI7P,EAAU2D,KAAKoa,IAAQ,KAC9BpN,EAAI6T,QACJ8N,EAAiB/uB,EAAI,MAIzBivB,EAAsBjvB,EAAKwa,GACtBhN,GACDrB,EAAIG,IAAG,EAAI7P,EAAU2D,KAAKoa,IAAQ,IAAMrO,EAAIqiB,UAExD,CAtBA,CAuBJ,CACA,SAASS,EAAsBjvB,EAAKwa,EAAOhO,GACvC,MAAMoV,EAAY,CACd1U,QAAS,uBACTmM,SAAUrZ,EACVsZ,aAActN,EAAOgD,KAAKC,MAEf,IAAXzC,GACA/S,OAAO0N,OAAOya,EAAW,CACrBrU,eAAe,EACfgB,cAAc,EACdf,WAAW,IAGnBJ,EAAIwU,UAAUA,EAAWpH,EAC7B,CAtEIrO,EAAI/D,MAAM,MAAOwF,GAAO5N,IACf0R,EAAMvT,QAAW0wB,EAAS1wB,OAG3BgO,EAAIG,GAGhB,SAAsBtM,GAClB,IAAIkvB,EACJ,GAAIxd,EAAMvT,OAAS,EAAG,CAElB,MAAMgxB,GAAc,EAAInjB,EAAO+L,gBAAgBrL,EAAI4B,EAAa8O,WAAY,cAC5E8R,GAAc,EAAIxuB,EAAO0uB,eAAejjB,EAAKgjB,EAAanvB,EAC9D,MAEIkvB,EADKxd,EAAMvT,QACG,EAAI1B,EAAUyD,OAAOwR,EAAM2a,KAAK7Z,GAAU/V,EAAUrC,CAAG,GAAG4F,SAAWwS,OAGrE/V,EAAUxC,IAK5B,OAHI40B,EAAS1wB,SACT+wB,GAAc,EAAIzyB,EAAUyD,IAAIgvB,KAAgBL,EAASxC,KAAK7Z,GAAU/V,EAAUrC,CAAG,IAAG,EAAIsG,EAAO2uB,YAAYjiB,EAAKoF,WAAWxS,UAE5H,EAAIvD,EAAU2D,KAAK8uB,EAC9B,CApBmBI,CAAatvB,IAAM,IAAMgvB,EAAuBhvB,KAFvDgvB,EAAuBhvB,EAEqC,IANxEoN,EAAI8T,GAAOzkB,EAAUrC,CAAG,GAAGsT,SAAiBzB,EAAQlR,QAAQyR,SAyEhE,GAEJ7S,EAAA,QAAkB6R,C,kBCvGlB/R,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtD,MAAMoS,EAAS,EAAQ,OACjBR,EAAM,CACR0B,QAAS,QACTC,WAAY,QACZ,IAAAlP,CAAKmP,GACD,MAAM,IAAEjB,EAAG,OAAEkC,EAAM,GAAE3B,GAAOU,EAE5B,IAAK9N,MAAMC,QAAQ8O,GACf,MAAM,IAAIxQ,MAAM,4BACpB,MAAM2c,EAAQrO,EAAIrK,KAAK,SACvBuM,EAAO5S,SAAQ,CAACuU,EAAKpR,KACjB,IAAI,EAAIoN,EAAOkM,mBAAmBxL,EAAIsD,GAClC,OACJ,MAAMuf,EAASniB,EAAIwU,UAAU,CAAE1U,QAAS,QAAS6X,WAAYnmB,GAAK4b,GAClEpN,EAAI8T,GAAG1G,GACPpN,EAAIuK,eAAe4X,EAAO,GAElC,GAEJ51B,EAAA,QAAkB6R,C,kBCpBlB/R,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtD,MACM4R,EAAM,CACR0B,QAAS,QACTC,WAAY,QACZgT,aAAa,EACbliB,KALW,EAAQ,OAKNuxB,cACbxsB,MAAO,CAAEiK,QAAS,iCAEtBtT,EAAA,QAAkB6R,C,kBCTlB/R,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtD,MAAM6C,EAAY,EAAQ,OACpBuP,EAAS,EAAQ,OAOjBR,EAAM,CACR0B,QAAS,WACT0J,KAAM,QACNzJ,WAAY,CAAC,SAAU,WACvBogB,OAAQ,cACRpN,aAAa,EACbnd,MAZU,CACViK,QAAS,EAAGkB,QAAUshB,MAAKxW,eAAoB7c,IAAR6c,EAC7Bxc,EAAUtC,GAAK,yBAAyBs1B,kBACxChzB,EAAUtC,GAAK,yBAAyBs1B,sBAAwBxW,kBAC1E9K,OAAQ,EAAGA,QAAUshB,MAAKxW,eAAoB7c,IAAR6c,EAAwBxc,EAAUrC,CAAG,iBAAiBq1B,KAAahzB,EAAUrC,CAAG,iBAAiBq1B,mBAAqBxW,MAS5J,IAAAhb,CAAKmP,GACD,MAAM,IAAEjB,EAAG,OAAEkC,EAAM,aAAEC,EAAY,KAAEV,EAAI,GAAElB,GAAOU,EAChD,IAAIqiB,EACAxW,EACJ,MAAM,YAAEyW,EAAW,YAAEC,GAAgBrhB,EACjC5B,EAAGzR,KAAKG,MACRq0B,OAAsBrzB,IAAhBszB,EAA4B,EAAIA,EACtCzW,EAAM0W,GAGNF,EAAM,EAEV,MAAM1mB,EAAMoD,EAAIlF,MAAM,MAAWxK,EAAUrC,CAAG,GAAGwT,YAEjD,GADAR,EAAI0T,UAAU,CAAE2O,MAAKxW,aACT7c,IAAR6c,GAA6B,IAARwW,EAErB,YADA,EAAIzjB,EAAOuL,iBAAiB7K,EAAI,wEAGpC,QAAYtQ,IAAR6c,GAAqBwW,EAAMxW,EAG3B,OAFA,EAAIjN,EAAOuL,iBAAiB7K,EAAI,wDAChCU,EAAIqT,OAGR,IAAI,EAAIzU,EAAOkM,mBAAmBxL,EAAI2B,GAAS,CAC3C,IAAIvK,EAAWrH,EAAUrC,CAAG,GAAG2O,QAAU0mB,IAIzC,YAHYrzB,IAAR6c,IACAnV,EAAWrH,EAAUrC,CAAG,GAAG0J,QAAWiF,QAAUkQ,UACpD7L,EAAIoT,KAAK1c,EAEb,CACA4I,EAAGrH,OAAQ,EACX,MAAMmV,EAAQrO,EAAIrK,KAAK,SAcvB,SAAS8tB,IACL,MAAMC,EAAW1jB,EAAIrK,KAAK,UACpBiT,EAAQ5I,EAAIjF,IAAI,QAAS,GAC/BunB,EAAcoB,GAAU,IAAM1jB,EAAIG,GAAGujB,GAAU,IAanD,SAAqB9a,GACjB5I,EAAIlO,KAASxB,EAAUrC,CAAG,GAAG2a,YACjB3Y,IAAR6c,EACA9M,EAAIG,GAAO7P,EAAUrC,CAAG,GAAG2a,QAAY0a,KAAO,IAAMtjB,EAAIhF,OAAOqT,GAAO,GAAMgU,WAG5EriB,EAAIG,GAAO7P,EAAUrC,CAAG,GAAG2a,OAAWkE,KAAO,IAAM9M,EAAIhF,OAAOqT,GAAO,GAAOgU,UAChE,IAARiB,EACAtjB,EAAIhF,OAAOqT,GAAO,GAElBrO,EAAIG,GAAO7P,EAAUrC,CAAG,GAAG2a,QAAY0a,KAAO,IAAMtjB,EAAIhF,OAAOqT,GAAO,KAElF,CAzByDsV,CAAY/a,MACrE,CACA,SAAS0Z,EAAcsB,EAAQpnB,GAC3BwD,EAAIlE,SAAS,IAAK,EAAGc,GAAMnK,IACvBwO,EAAIwU,UAAU,CACV1U,QAAS,WACTmM,SAAUza,EACV0a,aAActN,EAAOgD,KAAKyK,IAC1BlM,eAAe,GAChBwiB,GACHpnB,GAAO,GAEf,MA5BYvM,IAAR6c,GAA6B,IAARwW,EACrBhB,EAAcjU,GAAO,IAAMrO,EAAIG,GAAGkO,GAAO,IAAMrO,EAAIqiB,YAEtC,IAARiB,GACLtjB,EAAIjF,IAAIsT,GAAO,QACHpe,IAAR6c,GACA9M,EAAIG,GAAO7P,EAAUrC,CAAG,GAAGwT,eAAmBgiB,KAGlDzjB,EAAIjF,IAAIsT,GAAO,GACfoV,KAEJxiB,EAAIgT,OAAO5F,GAAO,IAAMpN,EAAI6T,SA8BhC,GAEJtnB,EAAA,QAAkB6R,C,kBC5FlB/R,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQq2B,mBAAqBr2B,EAAQs2B,qBAAuBt2B,EAAQqJ,WAAQ,EAC5E,MAAMvG,EAAY,EAAQ,OACpBuP,EAAS,EAAQ,OACjBtL,EAAS,EAAQ,OACvB/G,EAAQqJ,MAAQ,CACZiK,QAAS,EAAGkB,QAAU7D,WAAU4lB,YAAWxL,YACvC,MAAMyL,EAA6B,IAAdD,EAAkB,WAAa,aACpD,OAAWzzB,EAAUtC,GAAK,aAAag2B,KAAgBzL,mBAAsBpa,cAAqB,EAEtG6D,OAAQ,EAAGA,QAAU7D,WAAU4lB,YAAWxL,OAAM0L,sBAA4B3zB,EAAUrC,CAAG,cAAckQ;uBACpF8lB;iBACNF;YACLxL,MAEZ,MAAMlZ,EAAM,CACR0B,QAAS,eACT0J,KAAM,SACNzJ,WAAY,SACZnK,MAAOrJ,EAAQqJ,MACf,IAAA/E,CAAKmP,GACD,MAAOijB,EAAUC,GAKzB,UAA2B,OAAEjiB,IACzB,MAAMkiB,EAAe,CAAC,EAChBC,EAAa,CAAC,EACpB,IAAK,MAAMxwB,KAAOqO,EACF,cAARrO,KAESV,MAAMC,QAAQ8O,EAAOrO,IAAQuwB,EAAeC,GACpDxwB,GAAOqO,EAAOrO,IAEvB,MAAO,CAACuwB,EAAcC,EAC1B,CAfoCC,CAAkBrjB,GAC9C6iB,EAAqB7iB,EAAKijB,GAC1BL,EAAmB5iB,EAAKkjB,EAC5B,GAaJ,SAASL,EAAqB7iB,EAAKmjB,EAAenjB,EAAIiB,QAClD,MAAM,IAAElC,EAAG,KAAEyB,EAAI,GAAElB,GAAOU,EAC1B,GAAyC,IAArC3T,OAAOmZ,KAAK2d,GAAcpyB,OAC1B,OACJ,MAAMuyB,EAAUvkB,EAAIjF,IAAI,WACxB,IAAK,MAAM6V,KAAQwT,EAAc,CAC7B,MAAM7L,EAAO6L,EAAaxT,GAC1B,GAAoB,IAAhB2H,EAAKvmB,OACL,SACJ,MAAMwyB,GAAc,EAAIjwB,EAAOkwB,gBAAgBzkB,EAAKyB,EAAMmP,EAAMrQ,EAAGzR,KAAKqN,eACxE8E,EAAI0T,UAAU,CACVxW,SAAUyS,EACVmT,UAAWxL,EAAKvmB,OAChBumB,KAAMA,EAAKllB,KAAK,QAEhBkN,EAAGc,UACHrB,EAAIG,GAAGqkB,GAAa,KAChB,IAAK,MAAME,KAAWnM,GAClB,EAAIhkB,EAAOowB,wBAAwB1jB,EAAKyjB,EAC5C,KAIJ1kB,EAAIG,GAAO7P,EAAUrC,CAAG,GAAGu2B,UAAmB,EAAIjwB,EAAOqwB,kBAAkB3jB,EAAKsX,EAAMgM,QACtF,EAAIhwB,EAAOswB,mBAAmB5jB,EAAKsjB,GACnCvkB,EAAItI,OAEZ,CACJ,CAEA,SAASmsB,EAAmB5iB,EAAKojB,EAAapjB,EAAIiB,QAC9C,MAAM,IAAElC,EAAG,KAAEyB,EAAI,QAAEV,EAAO,GAAER,GAAOU,EAC7BoN,EAAQrO,EAAIrK,KAAK,SACvB,IAAK,MAAMib,KAAQyT,GACX,EAAIxkB,EAAOkM,mBAAmBxL,EAAI8jB,EAAWzT,MAEjD5Q,EAAIG,IAAG,EAAI5L,EAAOkwB,gBAAgBzkB,EAAKyB,EAAMmP,EAAMrQ,EAAGzR,KAAKqN,gBAAgB,KACvE,MAAMinB,EAASniB,EAAIwU,UAAU,CAAE1U,UAAS6X,WAAYhI,GAAQvC,GAC5DpN,EAAIkV,oBAAoBiN,EAAQ/U,EAAM,IACvC,IAAMrO,EAAIhK,IAAIqY,GAAO,KAExBpN,EAAI8T,GAAG1G,GAEf,CAdA7gB,EAAQs2B,qBAAuBA,EAe/Bt2B,EAAQq2B,mBAAqBA,EAC7Br2B,EAAA,QAAkB6R,C,kBClFlB/R,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtD,MAAMq3B,EAAiB,EAAQ,OACzBzlB,EAAM,CACR0B,QAAS,mBACT0J,KAAM,SACNzJ,WAAY,SACZlP,KAAOmP,IAAQ,EAAI6jB,EAAejB,oBAAoB5iB,IAE1DzT,EAAA,QAAkB6R,C,iBCRlB/R,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtD,MAAM6C,EAAY,EAAQ,OACpBuP,EAAS,EAAQ,OAKjBR,EAAM,CACR0B,QAAS,KACTC,WAAY,CAAC,SAAU,WACvBgT,aAAa,EACbnd,MARU,CACViK,QAAS,EAAGkB,YAAiB1R,EAAUtC,GAAK,eAAegU,EAAO+iB,mBAClE/iB,OAAQ,EAAGA,YAAiB1R,EAAUrC,CAAG,oBAAoB+T,EAAO+iB,aAOpE,IAAAjzB,CAAKmP,GACD,MAAM,IAAEjB,EAAG,aAAEmC,EAAY,GAAE5B,GAAOU,OACRhR,IAAtBkS,EAAa6iB,WAA4C/0B,IAAtBkS,EAAazK,OAChD,EAAImI,EAAOuL,iBAAiB7K,EAAI,6CAEpC,MAAM0kB,EAAUC,EAAU3kB,EAAI,QACxB4kB,EAAUD,EAAU3kB,EAAI,QAC9B,IAAK0kB,IAAYE,EACb,OACJ,MAAM9W,EAAQrO,EAAIjF,IAAI,SAAS,GACzB2oB,EAAW1jB,EAAIrK,KAAK,UAG1B,GAYA,WACI,MAAMytB,EAASniB,EAAIwU,UAAU,CACzB1U,QAAS,KACTK,eAAe,EACfgB,cAAc,EACdf,WAAW,GACZqiB,GACHziB,EAAIuK,eAAe4X,EACvB,CAtBAgC,GACAnkB,EAAI6T,QACAmQ,GAAWE,EAAS,CACpB,MAAMJ,EAAW/kB,EAAIjF,IAAI,YACzBkG,EAAI0T,UAAU,CAAEoQ,aAChB/kB,EAAIG,GAAGujB,EAAU2B,EAAe,OAAQN,GAAWM,EAAe,OAAQN,GAC9E,MACSE,EACLjlB,EAAIG,GAAGujB,EAAU2B,EAAe,SAGhCrlB,EAAIG,IAAG,EAAI7P,EAAU2D,KAAKyvB,GAAW2B,EAAe,SAYxD,SAASA,EAAetkB,EAASgkB,GAC7B,MAAO,KACH,MAAM3B,EAASniB,EAAIwU,UAAU,CAAE1U,WAAW2iB,GAC1C1jB,EAAIhF,OAAOqT,EAAOqV,GAClBziB,EAAIkV,oBAAoBiN,EAAQ/U,GAC5B0W,EACA/kB,EAAIhF,OAAO+pB,EAAcz0B,EAAUrC,CAAG,GAAG8S,KAEzCE,EAAI0T,UAAU,CAAEoQ,SAAUhkB,GAAU,CAEhD,CApBAE,EAAIoT,KAAKhG,GAAO,IAAMpN,EAAIpK,OAAM,IAqBpC,GAEJ,SAASquB,EAAU3kB,EAAIQ,GACnB,MAAMmB,EAAS3B,EAAG2B,OAAOnB,GACzB,YAAkB9Q,IAAXiS,KAAyB,EAAIrC,EAAOkM,mBAAmBxL,EAAI2B,EACtE,CACA1U,EAAA,QAAkB6R,C,kBC/DlB/R,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtD,MAAM63B,EAAoB,EAAQ,OAC5BC,EAAgB,EAAQ,OACxBC,EAAU,EAAQ,OAClBC,EAAc,EAAQ,OACtBC,EAAa,EAAQ,OACrBZ,EAAiB,EAAQ,OACzBa,EAAkB,EAAQ,OAC1BC,EAAyB,EAAQ,OACjCC,EAAe,EAAQ,OACvBC,EAAsB,EAAQ,OAC9BC,EAAQ,EAAQ,OAChBC,EAAU,EAAQ,OAClBC,EAAU,EAAQ,OAClBC,EAAU,EAAQ,OAClBC,EAAO,EAAQ,MACfC,EAAa,EAAQ,OAyB3B54B,EAAA,QAxBA,SAAuB64B,GAAY,GAC/B,MAAM5E,EAAa,CAEfsE,EAAMn3B,QACNo3B,EAAQp3B,QACRq3B,EAAQr3B,QACRs3B,EAAQt3B,QACRu3B,EAAKv3B,QACLw3B,EAAWx3B,QAEX+2B,EAAgB/2B,QAChBg3B,EAAuBh3B,QACvBk2B,EAAel2B,QACfi3B,EAAaj3B,QACbk3B,EAAoBl3B,SAQxB,OALIy3B,EACA5E,EAAW/uB,KAAK6yB,EAAc32B,QAAS62B,EAAY72B,SAEnD6yB,EAAW/uB,KAAK4yB,EAAkB12B,QAAS42B,EAAQ52B,SACvD6yB,EAAW/uB,KAAKgzB,EAAW92B,SACpB6yB,CACX,C,kBCxCAn0B,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQ84B,mBAAgB,EACxB,MAAMh2B,EAAY,EAAQ,OACpBuP,EAAS,EAAQ,OACjBtL,EAAS,EAAQ,OACjB8K,EAAM,CACR0B,QAAS,QACT0J,KAAM,QACNzJ,WAAY,CAAC,SAAU,QAAS,WAChCogB,OAAQ,cACR,IAAAtvB,CAAKmP,GACD,MAAM,OAAEiB,EAAM,GAAE3B,GAAOU,EACvB,GAAI9N,MAAMC,QAAQ8O,GACd,OAAOokB,EAAcrlB,EAAK,kBAAmBiB,GACjD3B,EAAGrH,OAAQ,GACP,EAAI2G,EAAOkM,mBAAmBxL,EAAI2B,IAEtCjB,EAAI8T,IAAG,EAAIxgB,EAAOgyB,eAAetlB,GACrC,GAEJ,SAASqlB,EAAcrlB,EAAKulB,EAAYC,EAASxlB,EAAIiB,QACjD,MAAM,IAAElC,EAAG,aAAEmC,EAAY,KAAEV,EAAI,QAAEV,EAAO,GAAER,GAAOU,GAiBjD,SAA0B4C,GACtB,MAAM,KAAE/U,EAAI,cAAE8S,GAAkBrB,EAC1BmmB,EAAID,EAAOz0B,OACX20B,EAAYD,IAAM7iB,EAAI+iB,WAAaF,IAAM7iB,EAAIgjB,WAAgC,IAApBhjB,EAAI2iB,IACnE,GAAI13B,EAAKwtB,eAAiBqK,EAAW,CACjC,MAAM1e,EAAM,IAAIlH,SAAe2lB,qCAAqCF,6CAAsD5kB,MAC1H,EAAI/B,EAAOuL,iBAAiB7K,EAAI0H,EAAKnZ,EAAKwtB,aAC9C,CACJ,CAxBAwK,CAAiB3kB,GACb5B,EAAGzR,KAAKI,aAAeu3B,EAAOz0B,SAAuB,IAAbuO,EAAGrH,QAC3CqH,EAAGrH,MAAQ2G,EAAO2L,eAAetS,MAAM8G,EAAKymB,EAAOz0B,OAAQuO,EAAGrH,QAElE,MAAMmV,EAAQrO,EAAIrK,KAAK,SACjBiH,EAAMoD,EAAIlF,MAAM,MAAWxK,EAAUrC,CAAG,GAAGwT,YACjDglB,EAAOn3B,SAAQ,CAACuU,EAAKpR,MACb,EAAIoN,EAAOkM,mBAAmBxL,EAAIsD,KAEtC7D,EAAIG,GAAO7P,EAAUrC,CAAG,GAAG2O,OAASnK,KAAK,IAAMwO,EAAIwU,UAAU,CACzD1U,UACA6X,WAAYnmB,EACZya,SAAUza,GACX4b,KACHpN,EAAI8T,GAAG1G,GAAM,GAWrB,CACA7gB,EAAQ84B,cAAgBA,EACxB94B,EAAA,QAAkB6R,C,kBCjDlB/R,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtD,MAAM6C,EAAY,EAAQ,OACpBuP,EAAS,EAAQ,OACjBtL,EAAS,EAAQ,OACjB+wB,EAAoB,EAAQ,OAK5BjmB,EAAM,CACR0B,QAAS,QACT0J,KAAM,QACNzJ,WAAY,CAAC,SAAU,WACvBogB,OAAQ,cACRvqB,MATU,CACViK,QAAS,EAAGkB,QAAUpF,UAAgBtM,EAAUtC,GAAK,2BAA2B4O,UAChFoF,OAAQ,EAAGA,QAAUpF,UAAgBtM,EAAUrC,CAAG,WAAW2O,MAQ7D,IAAA9K,CAAKmP,GACD,MAAM,OAAEiB,EAAM,aAAEC,EAAY,GAAE5B,GAAOU,GAC/B,YAAE8lB,GAAgB5kB,EACxB5B,EAAGrH,OAAQ,GACP,EAAI2G,EAAOkM,mBAAmBxL,EAAI2B,KAElC6kB,GACA,EAAIzB,EAAkBlD,yBAAyBnhB,EAAK8lB,GAEpD9lB,EAAI8T,IAAG,EAAIxgB,EAAOgyB,eAAetlB,IACzC,GAEJzT,EAAA,QAAkB6R,C,kBC3BlB/R,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtD,MAAMoS,EAAS,EAAQ,OACjBR,EAAM,CACR0B,QAAS,MACTC,WAAY,CAAC,SAAU,WACvBgT,aAAa,EACb,IAAAliB,CAAKmP,GACD,MAAM,IAAEjB,EAAG,OAAEkC,EAAM,GAAE3B,GAAOU,EAC5B,IAAI,EAAIpB,EAAOkM,mBAAmBxL,EAAI2B,GAElC,YADAjB,EAAIqT,OAGR,MAAMjG,EAAQrO,EAAIrK,KAAK,SACvBsL,EAAIwU,UAAU,CACV1U,QAAS,MACTK,eAAe,EACfgB,cAAc,EACdf,WAAW,GACZgN,GACHpN,EAAImT,WAAW/F,GAAO,IAAMpN,EAAI6T,UAAS,IAAM7T,EAAIpK,SACvD,EACAA,MAAO,CAAEiK,QAAS,sBAEtBtT,EAAA,QAAkB6R,C,kBCvBlB/R,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtD,MAAM6C,EAAY,EAAQ,OACpBuP,EAAS,EAAQ,OAKjBR,EAAM,CACR0B,QAAS,QACTC,WAAY,QACZgT,aAAa,EACbnd,MARU,CACViK,QAAS,yCACTkB,OAAQ,EAAGA,YAAiB1R,EAAUrC,CAAG,oBAAoB+T,EAAOglB,YAOpE,IAAAl1B,CAAKmP,GACD,MAAM,IAAEjB,EAAG,OAAEkC,EAAM,aAAEC,EAAY,GAAE5B,GAAOU,EAE1C,IAAK9N,MAAMC,QAAQ8O,GACf,MAAM,IAAIxQ,MAAM,4BACpB,GAAI6O,EAAGzR,KAAKU,eAAiB2S,EAAa3S,cACtC,OACJ,MAAMi3B,EAASvkB,EACTmM,EAAQrO,EAAIjF,IAAI,SAAS,GACzBisB,EAAUhnB,EAAIjF,IAAI,UAAW,MAC7B2oB,EAAW1jB,EAAIrK,KAAK,UAC1BsL,EAAI0T,UAAU,CAAEqS,YAEhBhnB,EAAIxD,OAEJ,WACIiqB,EAAOn3B,SAAQ,CAACuU,EAAKpR,KACjB,IAAI2wB,GACA,EAAIvjB,EAAOkM,mBAAmBxL,EAAIsD,GAClC7D,EAAIhK,IAAI0tB,GAAU,GAGlBN,EAASniB,EAAIwU,UAAU,CACnB1U,QAAS,QACT6X,WAAYnmB,EACZ2O,eAAe,GAChBsiB,GAEHjxB,EAAI,GACJuN,EACKG,GAAO7P,EAAUrC,CAAG,GAAGy1B,QAAerV,KACtCrT,OAAOqT,GAAO,GACdrT,OAAOgsB,EAAa12B,EAAUrC,CAAG,IAAI+4B,MAAYv0B,MACjDiF,OAETsI,EAAIG,GAAGujB,GAAU,KACb1jB,EAAIhF,OAAOqT,GAAO,GAClBrO,EAAIhF,OAAOgsB,EAASv0B,GAChB2wB,GACAniB,EAAIuK,eAAe4X,EAAQ9yB,EAAUzC,KAAK,GAChD,GAEV,IA5BAoT,EAAIgT,OAAO5F,GAAO,IAAMpN,EAAI6T,UAAS,IAAM7T,EAAIpK,OAAM,IA6BzD,GAEJrJ,EAAA,QAAkB6R,C,kBCzDlB/R,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtD,MAAM8G,EAAS,EAAQ,OACjBjE,EAAY,EAAQ,OACpBuP,EAAS,EAAQ,OACjBonB,EAAS,EAAQ,OACjB5nB,EAAM,CACR0B,QAAS,oBACT0J,KAAM,SACNzJ,WAAY,SACZ,IAAAlP,CAAKmP,GACD,MAAM,IAAEjB,EAAG,OAAEkC,EAAM,KAAET,EAAI,aAAEU,EAAY,GAAE5B,GAAOU,GAC1C,KAAEnS,GAASyR,EACX2mB,GAAW,EAAI3yB,EAAOkuB,qBAAqBvgB,GAC3CilB,EAAsBD,EAAS7X,QAAQhJ,IAAM,EAAIxG,EAAOkM,mBAAmBxL,EAAI2B,EAAOmE,MAC5F,GAAwB,IAApB6gB,EAASl1B,QACRm1B,EAAoBn1B,SAAWk1B,EAASl1B,UACnCuO,EAAGzR,KAAKI,cAA4B,IAAbqR,EAAGgF,OAChC,OAEJ,MAAM6hB,EAAkBt4B,EAAKmd,eAAiBnd,EAAKu4B,yBAA2BllB,EAAa8O,WACrF5C,EAAQrO,EAAIrK,KAAK,UACN,IAAb4K,EAAGgF,OAAoBhF,EAAGgF,iBAAiBjV,EAAUzC,OACrD0S,EAAGgF,OAAQ,EAAI0hB,EAAO1b,sBAAsBvL,EAAKO,EAAGgF,QAExD,MAAM,MAAEA,GAAUhF,EAgBlB,SAAS+mB,EAAwBC,GAC7B,IAAK,MAAM3W,KAAQwW,EACX,IAAI5N,OAAO+N,GAAK91B,KAAKmf,KACrB,EAAI/Q,EAAOuL,iBAAiB7K,EAAI,YAAYqQ,qBAAwB2W,kCAGhF,CACA,SAASC,EAAmBD,GACxBvnB,EAAI/D,MAAM,MAAOwF,GAAO5N,IACpBmM,EAAIG,GAAO7P,EAAUrC,CAAG,IAAG,EAAIsG,EAAO2uB,YAAYjiB,EAAKsmB,WAAa1zB,MAAQ,KACxE,MAAM4zB,EAAcN,EAAoBlY,SAASsY,GAC5CE,GACDxmB,EAAIwU,UAAU,CACV1U,QAAS,oBACT6X,WAAY2O,EACZra,SAAUrZ,EACVsZ,aAAc8Z,EAAOpkB,KAAKC,KAC3BuL,GAEH9N,EAAGzR,KAAKI,cAAyB,IAAVqW,EACvBvF,EAAIhF,OAAW1K,EAAUrC,CAAG,GAAGsX,KAAS1R,MAAQ,GAE1C4zB,GAAgBlnB,EAAGc,WAGzBrB,EAAIG,IAAG,EAAI7P,EAAU2D,KAAKoa,IAAQ,IAAMrO,EAAIqiB,SAChD,GACF,GAEV,EA3CA,WACI,IAAK,MAAMkF,KAAOL,EACVE,GACAE,EAAwBC,GACxBhnB,EAAGc,UACHmmB,EAAmBD,IAGnBvnB,EAAIhK,IAAIqY,GAAO,GACfmZ,EAAmBD,GACnBvnB,EAAIG,GAAGkO,GAGnB,CAdAqZ,EA6CJ,GAEJl6B,EAAA,QAAkB6R,C,kBCxElB/R,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtD,MAAM+3B,EAAU,EAAQ,OAClBnmB,EAAM,CACR0B,QAAS,cACT0J,KAAM,QACNzJ,WAAY,CAAC,SACbogB,OAAQ,cACRtvB,KAAOmP,IAAQ,EAAIukB,EAAQc,eAAerlB,EAAK,UAEnDzT,EAAA,QAAkB6R,C,kBCTlB/R,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtD,MAAM0C,EAAa,EAAQ,OACrBoE,EAAS,EAAQ,OACjBsL,EAAS,EAAQ,OACjB+lB,EAAyB,EAAQ,OACjCvmB,EAAM,CACR0B,QAAS,aACT0J,KAAM,SACNzJ,WAAY,SACZ,IAAAlP,CAAKmP,GACD,MAAM,IAAEjB,EAAG,OAAEkC,EAAM,aAAEC,EAAY,KAAEV,EAAI,GAAElB,GAAOU,EACf,QAA7BV,EAAGzR,KAAK0zB,uBAAoEvyB,IAAtCkS,EAAawlB,sBACnD/B,EAAuBh3B,QAAQkD,KAAK,IAAI3B,EAAWjC,WAAWqS,EAAIqlB,EAAuBh3B,QAAS,yBAEtG,MAAMg5B,GAAW,EAAIrzB,EAAOkuB,qBAAqBvgB,GACjD,IAAK,MAAM0O,KAAQgX,EACfrnB,EAAGmE,kBAAkBxK,IAAI0W,GAEzBrQ,EAAGzR,KAAKI,aAAe04B,EAAS51B,SAAuB,IAAbuO,EAAGgF,QAC7ChF,EAAGgF,MAAQ1F,EAAO2L,eAAejG,MAAMvF,GAAK,EAAIH,EAAOmM,QAAQ4b,GAAWrnB,EAAGgF,QAEjF,MAAM0L,EAAa2W,EAASvY,QAAQhJ,KAAO,EAAIxG,EAAOkM,mBAAmBxL,EAAI2B,EAAOmE,MACpF,GAA0B,IAAtB4K,EAAWjf,OACX,OACJ,MAAMqc,EAAQrO,EAAIrK,KAAK,SACvB,IAAK,MAAMib,KAAQK,EACX4W,EAAWjX,GACXkX,EAAoBlX,IAGpB5Q,EAAIG,IAAG,EAAI5L,EAAOkwB,gBAAgBzkB,EAAKyB,EAAMmP,EAAMrQ,EAAGzR,KAAKqN,gBAC3D2rB,EAAoBlX,GACfrQ,EAAGc,WACJrB,EAAItI,OAAO1B,IAAIqY,GAAO,GAC1BrO,EAAI1E,SAER2F,EAAIV,GAAGmE,kBAAkBxK,IAAI0W,GAC7B3P,EAAI8T,GAAG1G,GAEX,SAASwZ,EAAWjX,GAChB,OAAOrQ,EAAGzR,KAAKiiB,cAAgBxQ,EAAGa,oBAA0CnR,IAAzBiS,EAAO0O,GAAMhiB,OACpE,CACA,SAASk5B,EAAoBlX,GACzB3P,EAAIwU,UAAU,CACV1U,QAAS,aACT6X,WAAYhI,EACZ1D,SAAU0D,GACXvC,EACP,CACJ,GAEJ7gB,EAAA,QAAkB6R,C,kBCnDlB/R,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtD,MAAM6C,EAAY,EAAQ,OACpBuP,EAAS,EAAQ,OAKjBR,EAAM,CACR0B,QAAS,gBACT0J,KAAM,SACNzJ,WAAY,CAAC,SAAU,WACvBnK,MARU,CACViK,QAAS,8BACTkB,OAAQ,EAAGA,YAAiB1R,EAAUrC,CAAG,kBAAkB+T,EAAOC,iBAOlE,IAAAnQ,CAAKmP,GACD,MAAM,IAAEjB,EAAG,OAAEkC,EAAM,KAAET,EAAI,GAAElB,GAAOU,EAClC,IAAI,EAAIpB,EAAOkM,mBAAmBxL,EAAI2B,GAClC,OACJ,MAAMmM,EAAQrO,EAAIrK,KAAK,SACvBqK,EAAI/D,MAAM,MAAOwF,GAAO5N,IACpBoN,EAAI0T,UAAU,CAAE1S,aAAcpO,IAC9BoN,EAAIwU,UAAU,CACV1U,QAAS,gBACTU,KAAM5N,EACN4Q,UAAW,CAAC,UACZxC,aAAcpO,EACduN,eAAe,GAChBiN,GACHrO,EAAIG,IAAG,EAAI7P,EAAU2D,KAAKoa,IAAQ,KAC9BpN,EAAIpK,OAAM,GACL0J,EAAGc,WACJrB,EAAIqiB,OAAO,GACjB,IAENphB,EAAI8T,GAAG1G,EACX,GAEJ7gB,EAAA,QAAkB6R,C,kBCnClB/R,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtD,MAAMoS,EAAS,EAAQ,OACjBR,EAAM,CACR0B,QAAS,CAAC,OAAQ,QAClBC,WAAY,CAAC,SAAU,WACvB,IAAAlP,EAAK,QAAEiP,EAAO,aAAEoB,EAAY,GAAE5B,SACFtQ,IAApBkS,EAAahC,KACb,EAAIN,EAAOuL,iBAAiB7K,EAAI,IAAIQ,6BAC5C,GAEJvT,EAAA,QAAkB6R,C,kBCVlB/R,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQ61B,cAAgB71B,EAAQ+4B,cAAgB/4B,EAAQ01B,WAAa11B,EAAQsqB,iBAAmBtqB,EAAQu6B,iBAAmBv6B,EAAQi1B,oBAAsBj1B,EAAQw6B,iBAAmBx6B,EAAQi3B,eAAiBj3B,EAAQy1B,cAAgBz1B,EAAQy6B,YAAcz6B,EAAQq3B,kBAAoBr3B,EAAQo3B,iBAAmBp3B,EAAQm3B,4BAAyB,EACnV,MAAMr0B,EAAY,EAAQ,OACpBuP,EAAS,EAAQ,OACjBC,EAAU,EAAQ,OAClBmnB,EAAS,EAAQ,OAkBvB,SAASgB,EAAYjoB,GACjB,OAAOA,EAAIjG,WAAW,OAAQ,CAE1ByE,IAAKlR,OAAOmrB,UAAUC,eACtB5mB,KAAUxB,EAAUrC,CAAG,mCAE/B,CAEA,SAASg1B,EAAcjjB,EAAKyB,EAAMtD,GAC9B,OAAW7N,EAAUrC,CAAG,GAAGg6B,EAAYjoB,WAAayB,MAAStD,IACjE,CAOA,SAAS6pB,EAAiBhoB,EAAKyB,EAAMtD,EAAUhC,GAC3C,MAAMxE,EAAWrH,EAAUrC,CAAG,GAAGwT,KAAO,EAAInR,EAAUW,aAAakN,mBACnE,OAAOhC,GAAgB,EAAI7L,EAAUyD,IAAI4D,GAAM,EAAIrH,EAAU2D,KAAKgvB,EAAcjjB,EAAKyB,EAAMtD,KAAcxG,CAC7G,CAEA,SAAS8qB,EAAoByF,GACzB,OAAOA,EAAY56B,OAAOmZ,KAAKyhB,GAAW7Y,QAAQhJ,GAAY,cAANA,IAAqB,EACjF,CAlCA7Y,EAAQm3B,uBAPR,SAAgC1jB,EAAK2P,GACjC,MAAM,IAAE5Q,EAAG,KAAEyB,EAAI,GAAElB,GAAOU,EAC1BjB,EAAIG,GAAG6nB,EAAiBhoB,EAAKyB,EAAMmP,EAAMrQ,EAAGzR,KAAKqN,gBAAgB,KAC7D8E,EAAI0T,UAAU,CAAEsP,gBAAqB3zB,EAAUrC,CAAG,GAAG2iB,MAAU,GAC/D3P,EAAIpK,OAAO,GAEnB,EAKArJ,EAAQo3B,iBAHR,UAA0B,IAAE5kB,EAAG,KAAEyB,EAAMlB,IAAI,KAAEzR,IAAUmiB,EAAYsT,GAC/D,OAAO,EAAIj0B,EAAUyD,OAAOkd,EAAWiP,KAAKtP,IAAS,EAAItgB,EAAU0D,KAAKg0B,EAAiBhoB,EAAKyB,EAAMmP,EAAM9hB,EAAKqN,eAAoB7L,EAAUrC,CAAG,GAAGs2B,OAAa3T,OACpK,EAMApjB,EAAQq3B,kBAJR,SAA2B5jB,EAAKsjB,GAC5BtjB,EAAI0T,UAAU,CAAEsP,gBAAiBM,IAAW,GAC5CtjB,EAAIpK,OACR,EASArJ,EAAQy6B,YAAcA,EAItBz6B,EAAQy1B,cAAgBA,EAKxBz1B,EAAQi3B,eAJR,SAAwBzkB,EAAKyB,EAAMtD,EAAUhC,GACzC,MAAMxE,EAAWrH,EAAUrC,CAAG,GAAGwT,KAAO,EAAInR,EAAUW,aAAakN,mBACnE,OAAOhC,EAAoB7L,EAAUrC,CAAG,GAAG0J,QAAWsrB,EAAcjjB,EAAKyB,EAAMtD,KAAcxG,CACjG,EAMAnK,EAAQw6B,iBAAmBA,EAI3Bx6B,EAAQi1B,oBAAsBA,EAI9Bj1B,EAAQu6B,iBAHR,SAA0BxnB,EAAI2nB,GAC1B,OAAOzF,EAAoByF,GAAW7Y,QAAQhJ,KAAO,EAAIxG,EAAOkM,mBAAmBxL,EAAI2nB,EAAU7hB,KACrG,EAeA7Y,EAAQsqB,iBAbR,UAA0B,WAAE1J,EAAU,KAAE3M,EAAMlB,IAAI,IAAEP,EAAG,aAAEuC,EAAY,WAAER,EAAU,UAAEJ,GAAW,GAAEpB,GAAMxD,EAAMorB,EAAStQ,GACjH,MAAMuQ,EAAgBvQ,EAAiBvnB,EAAUrC,CAAG,GAAGmgB,MAAe3M,MAASc,IAAeR,IAAeN,EACvGiG,EAAS,CACX,CAAC5H,EAAQlR,QAAQ8S,cAAc,EAAIpR,EAAUa,WAAW2O,EAAQlR,QAAQ8S,aAAcC,IACtF,CAAC7B,EAAQlR,QAAQwV,WAAY7D,EAAG6D,YAChC,CAACtE,EAAQlR,QAAQyV,mBAAoB9D,EAAG8D,oBACxC,CAACvE,EAAQlR,QAAQ+Y,SAAU7H,EAAQlR,QAAQ+Y,WAE3CpH,EAAGzR,KAAKE,YACR0Y,EAAOhV,KAAK,CAACoN,EAAQlR,QAAQ2U,eAAgBzD,EAAQlR,QAAQ2U,iBACjE,MAAM/Q,EAAWlC,EAAUrC,CAAG,GAAGm6B,MAAkBpoB,EAAI/E,UAAUyM,KACjE,OAAOygB,IAAY73B,EAAUxC,IAAUwC,EAAUrC,CAAG,GAAG8O,UAAaorB,MAAY31B,KAAclC,EAAUrC,CAAG,GAAG8O,KAAQvK,IAC1H,EAEA,MAAM61B,EAAgB/3B,EAAUrC,CAAG,aAWnCT,EAAQ01B,WAVR,UAAoB,IAAEljB,EAAKO,IAAI,KAAEzR,IAAUw5B,GACvC,MAAMC,EAAIz5B,EAAK8tB,cAAgB,IAAM,IAC/B,OAAEP,GAAWvtB,EAAKgD,KAClBgC,EAAKuoB,EAAOiM,EAASC,GAC3B,OAAOvoB,EAAIjG,WAAW,UAAW,CAC7BlG,IAAKC,EAAGnC,WACR6M,IAAK1K,EACLhC,KAAUxB,EAAUrC,CAAG,GAAmB,eAAhBouB,EAAOvqB,KAAwBu2B,GAAY,EAAIpB,EAAO5b,SAASrL,EAAKqc,MAAWiM,MAAYC,MAE7H,EAyBA/6B,EAAQ+4B,cAvBR,SAAuBtlB,GACnB,MAAM,IAAEjB,EAAG,KAAEyB,EAAI,QAAEV,EAAO,GAAER,GAAOU,EAC7BoN,EAAQrO,EAAIrK,KAAK,SACvB,GAAI4K,EAAGc,UAAW,CACd,MAAMmnB,EAAWxoB,EAAIjF,IAAI,SAAS,GAElC,OADAunB,GAAc,IAAMtiB,EAAIhF,OAAOwtB,GAAU,KAClCA,CACX,CAGA,OAFAxoB,EAAIhK,IAAIqY,GAAO,GACfiU,GAAc,IAAMtiB,EAAIqiB,UACjBhU,EACP,SAASiU,EAAcmG,GACnB,MAAM7rB,EAAMoD,EAAIlF,MAAM,MAAWxK,EAAUrC,CAAG,GAAGwT,YACjDzB,EAAIlE,SAAS,IAAK,EAAGc,GAAMnK,IACvBwO,EAAIwU,UAAU,CACV1U,UACAmM,SAAUza,EACV0a,aAActN,EAAOgD,KAAKyK,KAC3Be,GACHrO,EAAIG,IAAG,EAAI7P,EAAU2D,KAAKoa,GAAQoa,EAAS,GAEnD,CACJ,EA2BAj7B,EAAQ61B,cAzBR,SAAuBpiB,GACnB,MAAM,IAAEjB,EAAG,OAAEkC,EAAM,QAAEnB,EAAO,GAAER,GAAOU,EAErC,IAAK9N,MAAMC,QAAQ8O,GACf,MAAM,IAAIxQ,MAAM,4BAEpB,GADoBwQ,EAAOjJ,MAAM4K,IAAQ,EAAIhE,EAAOkM,mBAAmBxL,EAAIsD,OACvDtD,EAAGzR,KAAKI,YACxB,OACJ,MAAMmf,EAAQrO,EAAIjF,IAAI,SAAS,GACzB2oB,EAAW1jB,EAAIrK,KAAK,UAC1BqK,EAAIxD,OAAM,IAAM0F,EAAO5S,SAAQ,CAACwU,EAAMrR,KAClC,MAAM2wB,EAASniB,EAAIwU,UAAU,CACzB1U,UACA6X,WAAYnmB,EACZ2O,eAAe,GAChBsiB,GACH1jB,EAAIhF,OAAOqT,EAAW/d,EAAUrC,CAAG,GAAGogB,QAAYqV,KACnCziB,EAAIkV,oBAAoBiN,EAAQM,IAI3C1jB,EAAIG,IAAG,EAAI7P,EAAU2D,KAAKoa,GAAO,MAEzCpN,EAAIgT,OAAO5F,GAAO,IAAMpN,EAAI6T,UAAS,IAAM7T,EAAIpK,OAAM,IACzD,C,gBC/HAvJ,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtD,MAAM4R,EAAM,CACR0B,QAAS,KACT,IAAAjP,GACI,MAAM,IAAIJ,MAAM,uDACpB,GAEJlE,EAAA,QAAkB6R,C,kBCPlB/R,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtD,MAAMi7B,EAAO,EAAQ,OACfC,EAAQ,EAAQ,OAChBhH,EAAO,CACT,UACA,MACA,QACA,cACA,CAAE5gB,QAAS,YACX,cACA2nB,EAAK95B,QACL+5B,EAAM/5B,SAEVpB,EAAA,QAAkBm0B,C,kBCblBr0B,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQo7B,QAAUp7B,EAAQq7B,iBAAc,EACxC,MAAMr4B,EAAc,EAAQ,OACtB+D,EAAS,EAAQ,OACjBjE,EAAY,EAAQ,OACpBwP,EAAU,EAAQ,OAClBoZ,EAAY,EAAQ,OACpBrZ,EAAS,EAAQ,OACjBR,EAAM,CACR0B,QAAS,OACTC,WAAY,SACZ,IAAAlP,CAAKmP,GACD,MAAM,IAAEjB,EAAKkC,OAAQqF,EAAI,GAAEhH,GAAOU,GAC5B,OAAEyC,EAAQhD,UAAW4C,EAAG,aAAE7C,EAAY,KAAE3R,EAAI,KAAE+V,GAAStE,GACvD,KAAEkD,GAASH,EACjB,IAAc,MAATiE,GAAyB,OAATA,IAAkB7D,IAAWD,EAAKC,OACnD,OAOJ,WACI,GAAIJ,IAAQG,EACR,OAAOmlB,EAAQ3nB,EAAKR,EAAc6C,EAAKA,EAAI3C,QAC/C,MAAM2R,EAAWtS,EAAIjG,WAAW,OAAQ,CAAEyE,IAAKiF,IAC/C,OAAOmlB,EAAQ3nB,EAAS3Q,EAAUrC,CAAG,GAAGqkB,aAAqB7O,EAAMA,EAAK9C,OAC5E,CAZWmoB,GACX,MAAMC,EAAW7P,EAAUhW,WAAWrT,KAAKgV,EAAMpB,EAAMC,EAAQ6D,GAC/D,QAAiBtX,IAAb84B,EACA,MAAM,IAAIv4B,EAAY5B,QAAQ2R,EAAGzR,KAAKmV,YAAaP,EAAQ6D,GAC/D,OAAIwhB,aAAoB7P,EAAU9V,UASlC,SAAsBS,GAClB,MAAMtU,EAAIs5B,EAAY5nB,EAAK4C,GAC3B+kB,EAAQ3nB,EAAK1R,EAAGsU,EAAKA,EAAIlD,OAC7B,CAXWqoB,CAAaD,GAYxB,SAAyBllB,GACrB,MAAMolB,EAAUjpB,EAAIjG,WAAW,UAA+B,IAArBjL,EAAKgD,KAAK6S,OAAkB,CAAEnG,IAAKqF,EAAK/R,MAAM,EAAIxB,EAAUvC,WAAW8V,IAAS,CAAErF,IAAKqF,IAC1HwK,EAAQrO,EAAIrK,KAAK,SACjBytB,EAASniB,EAAIwU,UAAU,CACzBvT,OAAQ2B,EACRY,UAAW,GACX1C,WAAYzR,EAAUxC,IACtByU,aAAc0mB,EACdrnB,cAAe2F,GAChB8G,GACHpN,EAAIuK,eAAe4X,GACnBniB,EAAI8T,GAAG1G,EACX,CAvBO6a,CAAgBH,EAwB3B,GAEJ,SAASF,EAAY5nB,EAAK4C,GACtB,MAAM,IAAE7D,GAAQiB,EAChB,OAAO4C,EAAIsB,SACLnF,EAAIjG,WAAW,WAAY,CAAEyE,IAAKqF,EAAIsB,WAClC7U,EAAUrC,CAAG,GAAG+R,EAAIjG,WAAW,UAAW,CAAEyE,IAAKqF,cAC/D,CAEA,SAAS+kB,EAAQ3nB,EAAK1R,EAAGsU,EAAKlD,GAC1B,MAAM,IAAEX,EAAG,GAAEO,GAAOU,GACd,UAAEI,EAAWX,UAAW4C,EAAG,KAAExU,GAASyR,EACtCoX,EAAU7oB,EAAK8oB,YAAc9X,EAAQlR,QAAQQ,KAAOkB,EAAUxC,IAyBpE,SAASq7B,EAAcxkB,GACnB,MAAMnE,EAAWlQ,EAAUrC,CAAG,GAAG0W,WACjC3E,EAAIhF,OAAO8E,EAAQlR,QAAQwR,QAAa9P,EAAUrC,CAAG,GAAG6R,EAAQlR,QAAQwR,sBAAsBI,OAAUV,EAAQlR,QAAQwR,kBAAkBI,MAC1IR,EAAIhF,OAAO8E,EAAQlR,QAAQyR,OAAY/P,EAAUrC,CAAG,GAAG6R,EAAQlR,QAAQwR,iBAC3E,CACA,SAASgpB,EAAiBzkB,GACtB,IAAIzS,EACJ,IAAKqO,EAAGzR,KAAKI,YACT,OACJ,MAAMm6B,EAAiF,QAAjEn3B,EAAK2R,aAAiC,EAASA,EAAIsB,gBAA6B,IAAPjT,OAAgB,EAASA,EAAGsT,UAE3H,IAAiB,IAAbjF,EAAGgF,MACH,GAAI8jB,IAAiBA,EAAa5jB,kBACHxV,IAAvBo5B,EAAa9jB,QACbhF,EAAGgF,MAAQ1F,EAAO2L,eAAejG,MAAMvF,EAAKqpB,EAAa9jB,MAAOhF,EAAGgF,YAGtE,CACD,MAAMA,EAAQvF,EAAIhK,IAAI,QAAa1F,EAAUrC,CAAG,GAAG0W,qBACnDpE,EAAGgF,MAAQ1F,EAAO2L,eAAejG,MAAMvF,EAAKuF,EAAOhF,EAAGgF,MAAOjV,EAAUzC,KAC3E,CAEJ,IAAiB,IAAb0S,EAAGrH,MACH,GAAImwB,IAAiBA,EAAa3jB,kBACHzV,IAAvBo5B,EAAanwB,QACbqH,EAAGrH,MAAQ2G,EAAO2L,eAAetS,MAAM8G,EAAKqpB,EAAanwB,MAAOqH,EAAGrH,YAGtE,CACD,MAAMA,EAAQ8G,EAAIhK,IAAI,QAAa1F,EAAUrC,CAAG,GAAG0W,qBACnDpE,EAAGrH,MAAQ2G,EAAO2L,eAAetS,MAAM8G,EAAK9G,EAAOqH,EAAGrH,MAAO5I,EAAUzC,KAC3E,CAER,CAzDI8S,EAIJ,WACI,IAAK2C,EAAI3C,OACL,MAAM,IAAIjP,MAAM,0CACpB,MAAM2c,EAAQrO,EAAIjF,IAAI,SACtBiF,EAAIkY,KAAI,KACJlY,EAAIlO,KAASxB,EAAUrC,CAAG,UAAS,EAAIsG,EAAOujB,kBAAkB7W,EAAK1R,EAAGooB,MACxEyR,EAAiB75B,GACZ8R,GACDrB,EAAIhF,OAAOqT,GAAO,EAAK,IAC3BzW,IACAoI,EAAIG,GAAO7P,EAAUrC,CAAG,KAAK2J,gBAAgB2I,EAAG5S,oBAAoB,IAAMqS,EAAIY,MAAMhJ,KACpFuxB,EAAcvxB,GACTyJ,GACDrB,EAAIhF,OAAOqT,GAAO,EAAM,IAEhCpN,EAAI8T,GAAG1G,EACX,CAnBIib,GAqBAroB,EAAIgT,QAAO,EAAI1f,EAAOujB,kBAAkB7W,EAAK1R,EAAGooB,IAAU,IAAMyR,EAAiB75B,KAAI,IAAM45B,EAAc55B,IAoCjH,CA/DA/B,EAAQq7B,YAAcA,EAgEtBr7B,EAAQo7B,QAAUA,EAClBp7B,EAAA,QAAkB6R,C,kBCvHlB/R,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtD,MAAM6C,EAAY,EAAQ,OACpBi5B,EAAU,EAAQ,OAClBrQ,EAAY,EAAQ,OACpBrZ,EAAS,EAAQ,OAOjBR,EAAM,CACR0B,QAAS,gBACT0J,KAAM,SACNzJ,WAAY,SACZnK,MAVU,CACViK,QAAS,EAAGkB,QAAUwnB,aAAYC,cAAgBD,IAAeD,EAAQG,WAAWC,IAC9E,QAAQF,oBACR,iBAAiBA,sBACvBznB,OAAQ,EAAGA,QAAUwnB,aAAYI,MAAKH,cAAoBn5B,EAAUrC,CAAG,WAAWu7B,WAAoBC,gBAAsBG,MAO5H,IAAA93B,CAAKmP,GACD,MAAM,IAAEjB,EAAG,KAAEyB,EAAI,OAAES,EAAM,aAAEC,EAAY,GAAE5B,GAAOU,GAC1C,MAAE4oB,GAAU1nB,EAClB,IAAK5B,EAAGzR,KAAKU,cACT,MAAM,IAAIkC,MAAM,gDAEpB,MAAM+3B,EAAUvnB,EAAOD,aACvB,GAAsB,iBAAXwnB,EACP,MAAM,IAAI/3B,MAAM,wCACpB,GAAIwQ,EAAO4nB,QACP,MAAM,IAAIp4B,MAAM,2CACpB,IAAKm4B,EACD,MAAM,IAAIn4B,MAAM,yCACpB,MAAM2c,EAAQrO,EAAIjF,IAAI,SAAS,GACzB6uB,EAAM5pB,EAAIlF,MAAM,MAAWxK,EAAUrC,CAAG,GAAGwT,KAAO,EAAInR,EAAUW,aAAaw4B,MAcnF,SAASM,EAAenR,GACpB,MAAMgL,EAAS5jB,EAAIrK,KAAK,SAClBytB,EAASniB,EAAIwU,UAAU,CAAE1U,QAAS,QAAS6X,cAAcgL,GAE/D,OADA3iB,EAAIuK,eAAe4X,EAAQ9yB,EAAUzC,MAC9B+1B,CACX,CAlBA5jB,EAAIG,GAAO7P,EAAUrC,CAAG,UAAU27B,iBAAmB,IAErD,WACI,MAAME,EAgBV,WACI,IAAI53B,EACJ,MAAM83B,EAAe,CAAC,EAChBC,EAAcC,EAAY/nB,GAChC,IAAIgoB,GAAc,EAClB,IAAK,IAAI13B,EAAI,EAAGA,EAAIo3B,EAAM73B,OAAQS,IAAK,CACnC,IAAIoR,EAAMgmB,EAAMp3B,IACXoR,aAAiC,EAASA,EAAI0D,SAAU,EAAI1H,EAAO2H,sBAAsB3D,EAAKtD,EAAGsE,KAAK4C,SACvG5D,EAAMqV,EAAUhW,WAAWrT,KAAK0Q,EAAGsE,KAAMtE,EAAGG,UAAU+C,KAAMlD,EAAGmD,OAAQG,aAAiC,EAASA,EAAI0D,MACjH1D,aAAeqV,EAAU9V,YACzBS,EAAMA,EAAI3B,SAElB,MAAMkoB,EAA8E,QAAnEl4B,EAAK2R,aAAiC,EAASA,EAAIoN,kBAA+B,IAAP/e,OAAgB,EAASA,EAAGu3B,GACxH,GAAsB,iBAAXW,EACP,MAAM,IAAI14B,MAAM,iFAAiF+3B,MAErGU,EAAcA,IAAgBF,GAAeC,EAAYrmB,IACzDwmB,EAAYD,EAAS33B,EACzB,CACA,IAAK03B,EACD,MAAM,IAAIz4B,MAAM,mBAAmB+3B,uBACvC,OAAOO,EACP,SAASE,GAAY,SAAEI,IACnB,OAAOn3B,MAAMC,QAAQk3B,IAAaA,EAASrb,SAASwa,EACxD,CACA,SAASY,EAAYxmB,EAAKpR,GACtB,GAAIoR,EAAI/I,MACJyvB,EAAW1mB,EAAI/I,MAAOrI,OAErB,KAAIoR,EAAI2mB,KAMT,MAAM,IAAI94B,MAAM,8BAA8B+3B,kCAL9C,IAAK,MAAMgB,KAAY5mB,EAAI2mB,KACvBD,EAAWE,EAAUh4B,EAK7B,CACJ,CACA,SAAS83B,EAAWE,EAAUh4B,GAC1B,GAAuB,iBAAZg4B,GAAwBA,KAAYT,EAC3C,MAAM,IAAIt4B,MAAM,mBAAmB+3B,oCAEvCO,EAAaS,GAAYh4B,CAC7B,CACJ,CA5DoBi4B,GAChB1qB,EAAIG,IAAG,GACP,IAAK,MAAMsqB,KAAYX,EACnB9pB,EAAIzE,OAAWjL,EAAUrC,CAAG,GAAG27B,SAAWa,KAC1CzqB,EAAIhF,OAAOqT,EAAO0b,EAAeD,EAAQW,KAE7CzqB,EAAItI,OACJuJ,EAAIpK,OAAM,EAAO,CAAE2yB,WAAYD,EAAQG,WAAWiB,QAASf,MAAKH,YAChEzpB,EAAI1E,OACR,CAZ2DsvB,KAAmB,IAAM3pB,EAAIpK,OAAM,EAAO,CAAE2yB,WAAYD,EAAQG,WAAWC,IAAKC,MAAKH,cAChJxoB,EAAI8T,GAAG1G,EA+DX,GAEJ7gB,EAAA,QAAkB6R,C,gBC9FlB,IAAWqqB,EAHXp8B,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQk8B,gBAAa,GAEVA,EAGKl8B,EAAQk8B,aAAel8B,EAAQk8B,WAAa,CAAC,IAFzC,IAAI,MACpBA,EAAoB,QAAI,S,kBCL5Bp8B,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtD,MAAMU,EAAS,EAAQ,OACjB08B,EAAe,EAAQ,OACvBC,EAAe,EAAQ,OACvBC,EAAW,EAAQ,OACnBC,EAAa,EAAQ,OACrBC,EAAqB,CACvB98B,EAAOS,QACPi8B,EAAaj8B,SACb,EAAIk8B,EAAal8B,WACjBm8B,EAASn8B,QACTo8B,EAAWE,mBACXF,EAAWG,mBAEf39B,EAAA,QAAkBy9B,C,kBCdlB39B,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQ49B,mBAAgB,EACxB,MAAM96B,EAAY,EAAQ,OACpBwP,EAAU,EAAQ,OAClBoZ,EAAY,EAAQ,OACpByP,EAAQ,EAAQ,OAChBtpB,EAAM,CACR0B,QAAS,iBACTC,WAAY,SACZlP,KAAOmP,GAAQmqB,EAAcnqB,EAAKA,EAAIiB,SAE1C,SAASkpB,EAAcnqB,EAAK8I,GACxB,MAAM,IAAE/J,EAAG,GAAEO,GAAOU,EACpBV,EAAGG,UAAU+C,KAAKF,eAAewG,IAAU,EAC3C,MAAMxa,EAAQe,EAAUrC,CAAG,GAAG6R,EAAQlR,QAAQ2U,kBAAiB,EAAIjT,EAAUW,aAAa8Y,KACpF5E,EAAgC,MAArB5E,EAAGqB,cAAwBrB,EAAGE,aAInD,SAAsBQ,GAClB,MAAM,UAAEP,EAAS,OAAEwB,EAAM,KAAE2C,GAAS5D,EAAIV,IAClC,KAAEkD,EAAI,OAAEC,EAAM,UAAEE,EAAS,KAAEhU,GAAS8Q,EAAU+C,MAC9C,SAAED,GAAaqB,EAAK/V,KACpB+U,EAAM,IAAIqV,EAAU9V,UAAU,CAAElB,SAAQsB,WAAUC,OAAMC,SAAQE,YAAWhU,SAEjF,OADAspB,EAAU/V,cAActT,KAAKgV,EAAMhB,IAC5B,EAAI8kB,EAAME,aAAa5nB,EAAK4C,EACvC,CAXkEwnB,CAAapqB,GAC3EjB,EAAIG,GAAO7P,EAAUrC,CAAG,IAAIsB,KAAK,IAAMyQ,EAAIhF,OAAOzL,EAAG4V,IACzD,CACA3X,EAAQ49B,cAAgBA,EASxB59B,EAAA,QAAkB6R,C,kBC3BlB/R,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQwB,gBAAa,EACrB,MAAMsB,EAAY,EAAQ,OACpBwP,EAAU,EAAQ,OAClB6oB,EAAQ,EAAQ,OAChBtpB,EAAM,CACR0B,QAAS,cACTC,WAAY,SACZlP,KAAOmP,GAAQjS,EAAWiS,EAAKA,EAAIiB,SAEvC,SAASlT,EAAWiS,EAAKzC,GACrB,MAAM,IAAEwB,EAAG,QAAEe,EAAO,GAAER,GAAOU,EAC7B,GAAe,MAAXzC,EAAI,GACJ,MAAM,IAAI9M,MAAM,IAAIqP,4CACxB,MAAMgJ,EAASvL,EAAIhL,MAAM,GACzB,GAAI+M,EAAGc,UACHiqB,QAEC,CACD,MAAMjd,EAAQrO,EAAIjF,IAAI,SAAS,GAC/BuwB,EAAYjd,GACZpN,EAAI8T,GAAG1G,EACX,CACA,SAASid,EAAYjd,GAOjB,GAAI9N,EAAGG,UAAU+C,KAAKF,eAAewG,GAAS,CAC1C,MAAMxa,EAAIyQ,EAAIjF,IAAI,KAAUzK,EAAUrC,CAAG,GAAG6R,EAAQlR,QAAQ2U,kBAAiB,EAAIjT,EAAUW,aAAa8Y,MACxG/J,EAAIG,GAAG5Q,EAAGg8B,EAASh8B,EAAG8e,GAAQkd,EAAShrB,EAAGE,aAAc4N,GAC5D,MAEIkd,EAAShrB,EAAGE,aAAc4N,EAA1Bkd,EAER,CACA,SAASA,EAASpmB,EAAUkJ,GACxB,OAAOA,EACD,IAAMrO,EAAIxD,OAAM,MACd,EAAImsB,EAAMC,SAAS3nB,EAAKkE,GACxBnF,EAAIjF,IAAIsT,GAAO,EAAK,IAEtB,KAAM,EAAIsa,EAAMC,SAAS3nB,EAAKkE,EACxC,CACJ,CACA3X,EAAQwB,WAAaA,EACrBxB,EAAA,QAAkB6R,C,kBChDlB/R,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtD,MAAM+9B,EAAkB,EAAQ,OAC1BC,EAAe,EAAQ,OACvBC,EAAoB,EAAQ,OAC5BC,EAAiB,EAAQ,OACzBC,EAAU,CAACJ,EAAgB58B,QAAS68B,EAAa78B,QAAS88B,EAAkB98B,QAAS+8B,EAAe/8B,SAC1GpB,EAAA,QAAkBo+B,C,kBCNlBt+B,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtD,MAAM+9B,EAAkB,EAAQ,OAC1B3rB,EAAS,EAAQ,OACjBR,EAAM,CACR0B,QAAS,mBACTC,WAAY,UACZ,IAAAlP,CAAKmP,GACGA,EAAIiB,QACJ,EAAIspB,EAAgBJ,eAAenqB,EAAK,KAExC,EAAIpB,EAAOuL,iBAAiBnK,EAAIV,GAAI,qCAC5C,GAEJ/S,EAAA,QAAkB6R,C,kBCblB/R,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtD,MAAMg+B,EAAe,EAAQ,OACvBpsB,EAAM,CACR0B,QAAS,gBACTC,WAAY,SACZlP,KAAOmP,IAAQ,EAAIwqB,EAAaz8B,YAAYiS,EAAKA,EAAIiB,SAEzD1U,EAAA,QAAkB6R,C,kBCPlB/R,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtD,MAAM6C,EAAY,EAAQ,OAKpB+O,EAAM,CACR0B,QAAS,SACT0J,KAAM,CAAC,SAAU,UACjBzJ,WAAY,SACZrR,OAAO,EACPkH,MATU,CACViK,QAAS,EAAGsN,gBAAqB9d,EAAUtC,GAAK,sBAAsBogB,KACtEpM,OAAQ,EAAGoM,gBAAqB9d,EAAUrC,CAAG,YAAYmgB,MAQzD,IAAAtc,CAAKmP,EAAKmV,GACN,MAAM,IAAEpW,EAAG,KAAEyB,EAAI,MAAE9R,EAAK,OAAEuS,EAAM,WAAEkM,EAAU,GAAE7N,GAAOU,GAC/C,KAAEnS,EAAI,cAAE8S,EAAa,UAAElB,EAAS,KAAEmE,GAAStE,EAC5CzR,EAAK6tB,kBAENhtB,EAIJ,WACI,MAAMk8B,EAAO7rB,EAAIjG,WAAW,UAAW,CACnCyE,IAAKqG,EAAKiY,QACVhrB,KAAMhD,EAAKgD,KAAKgrB,UAEdgP,EAAO9rB,EAAIlF,MAAM,OAAYxK,EAAUrC,CAAG,GAAG49B,KAAQzd,MACrD2d,EAAQ/rB,EAAIjF,IAAI,SAChB8e,EAAS7Z,EAAIjF,IAAI,UAEvBiF,EAAIG,GAAO7P,EAAUrC,CAAG,UAAU69B,sBAAyBA,wBAA2B,IAAM9rB,EAAIhF,OAAO+wB,EAAWz7B,EAAUrC,CAAG,GAAG69B,sBAAyB9wB,OAAO6e,EAAYvpB,EAAUrC,CAAG,GAAG69B,gBAAkB,IAAM9rB,EAAIhF,OAAO+wB,EAAWz7B,EAAUrC,CAAG,YAAY+M,OAAO6e,EAAQiS,KACpR7qB,EAAIsT,WAAU,EAAIjkB,EAAUyD,KAEE,IAAtBjF,EAAKmd,aACE3b,EAAUxC,IACVwC,EAAUrC,CAAG,GAAGmgB,SAAkByL,IAEjD,WACI,MAAMmS,EAAatrB,EAAUC,OACnBrQ,EAAUrC,CAAG,IAAI69B,mBAAsBjS,KAAUpY,QAAWoY,KAAUpY,MACtEnR,EAAUrC,CAAG,GAAG4rB,KAAUpY,KAC9BwqB,EAAgB37B,EAAUrC,CAAG,WAAW4rB,qBAA0BmS,OAAgBnS,UAAepY,MACvG,OAAWnR,EAAUrC,CAAG,GAAG4rB,QAAaA,iBAAsBkS,SAAa3V,SAAgB6V,GAC/F,CAZ8CC,IAalD,CA1BIC,GA2BJ,WACI,MAAMC,EAAYvnB,EAAKiY,QAAQ5a,GAC/B,IAAKkqB,EAED,YAOJ,WACI,IAA0B,IAAtBt9B,EAAKmd,aAIT,MAAM,IAAIva,MAAM26B,KAChB,SAASA,IACL,MAAO,mBAAmBnqB,iCAAsCN,IACpE,CANIiD,EAAKc,OAAOsH,KAAKof,IAOzB,CAjBIC,GAGJ,IAAkB,IAAdF,EACA,OACJ,MAAOG,EAAS1S,EAAQ2S,GAaxB,SAAmBC,GACf,MAAM36B,EAAO26B,aAAkBjT,QACzB,EAAIlpB,EAAUS,YAAY07B,GAC1B39B,EAAKgD,KAAKgrB,QACFxsB,EAAUrC,CAAG,GAAGa,EAAKgD,KAAKgrB,WAAU,EAAIxsB,EAAUW,aAAaiR,UACnEjS,EACJy8B,EAAM1sB,EAAIjG,WAAW,UAAW,CAAElG,IAAKqO,EAAQ1D,IAAKiuB,EAAQ36B,SAClE,MAAqB,iBAAV26B,GAAwBA,aAAkBjT,OAG9C,CAAC,SAAUiT,EAAQC,GAFf,CAACD,EAAOhiB,MAAQ,SAAUgiB,EAAOtnB,SAAc7U,EAAUrC,CAAG,GAAGy+B,aAG9E,CAxBkCC,CAAUP,GACxCG,IAAYnW,GACZnV,EAAIoT,KAuBR,WACI,GAAwB,iBAAb+X,KAA2BA,aAAqB5S,SAAW4S,EAAU5zB,MAAO,CACnF,IAAKkI,EAAUC,OACX,MAAM,IAAIjP,MAAM,+BACpB,OAAWpB,EAAUrC,CAAG,SAASu+B,KAAU/qB,IAC/C,CACA,MAAwB,mBAAVoY,EAA2BvpB,EAAUrC,CAAG,GAAGu+B,KAAU/qB,KAAcnR,EAAUrC,CAAG,GAAGu+B,UAAe/qB,IACpH,CA9BamrB,GA+BjB,CAlEIC,GAmER,GAEJr/B,EAAA,QAAkB6R,C,kBCzFlB/R,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtD,MACMosB,EAAS,CADE,EAAQ,OACAjrB,SACzBpB,EAAA,QAAkBqsB,C,gBCHlBvsB,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQ29B,kBAAoB39B,EAAQ09B,wBAAqB,EACzD19B,EAAQ09B,mBAAqB,CACzB,QACA,cACA,UACA,aACA,WACA,YACA,YAEJ19B,EAAQ29B,kBAAoB,CACxB,mBACA,kBACA,gB,kBCdJ79B,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtD,MAAMq/B,EAAsB,EAAQ,OAC9BC,EAAqB,EAAQ,OAC7BC,EAAkB,EAAQ,OAC1B/9B,EAAO,CAAC69B,EAAoBl+B,QAASm+B,EAAmBn+B,QAASo+B,EAAgBp+B,SACvFpB,EAAA,QAAkByB,C,kBCLlB3B,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtD,MAAMw/B,EAA0B,EAAQ,OAClCC,EAAqB,EAAQ,OAC7Bh+B,EAAc,CAAC+9B,EAAwBr+B,QAASs+B,EAAmBt+B,SACzEpB,EAAA,QAAkB0B,C,kBCJlB5B,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtD,MAAM6C,EAAY,EAAQ,OACpBuP,EAAS,EAAQ,OAKjBR,EAAM,CACR0B,QAAS,mBACT0J,KAAM,QACNzJ,WAAY,CAAC,UAAW,UACxBnK,MARU,CACViK,QAAS,EAAGkB,QAAUpF,UAAgBtM,EAAUtC,GAAK,2BAA2B4O,UAChFoF,OAAQ,EAAGA,QAAUpF,UAAgBtM,EAAUrC,CAAG,WAAW2O,MAO7D,IAAA9K,CAAKmP,GACD,MAAM,IAAEjB,EAAG,OAAEkC,EAAM,KAAET,EAAI,GAAElB,GAAOU,EAC5B/H,EAAQqH,EAAGrH,OAAS,EAC1B,IAAc,IAAVA,EACA,OACJ,MAAM0D,EAAMoD,EAAIlF,MAAM,MAAWxK,EAAUrC,CAAG,GAAGwT,YACjD,IAAe,IAAXS,EACAjB,EAAI0T,UAAU,CAAE/X,IAAK1D,IACrB+H,EAAIqT,KAAShkB,EAAUrC,CAAG,GAAG2O,OAAS1D,UAErC,GAAqB,iBAAVgJ,KAAuB,EAAIrC,EAAOkM,mBAAmBxL,EAAI2B,GAAS,CAC9E,MAAMmM,EAAQrO,EAAIhK,IAAI,QAAa1F,EAAUrC,CAAG,GAAG2O,QAAU1D,KAC7D8G,EAAIG,IAAG,EAAI7P,EAAU2D,KAAKoa,IAAQ,IAItC,SAAuBA,EAAOnW,GAC1B8H,EAAIlE,SAAS,IAAK5D,EAAM0E,GAAMnK,IAC1BwO,EAAIwU,UAAU,CAAE1U,QAAS,mBAAoBmM,SAAUza,EAAG0a,aAActN,EAAOgD,KAAKyK,KAAOe,GACtF9N,EAAGc,WACJrB,EAAIG,IAAG,EAAI7P,EAAU2D,KAAKoa,IAAQ,IAAMrO,EAAIqiB,SAAQ,GAEhE,CAV4CC,CAAcjU,EAAOnV,KAC7D+H,EAAI8T,GAAG1G,EACX,CACA9N,EAAGrH,OAAQ,CAQf,GAEJ1L,EAAA,QAAkB6R,C,kBCrClB/R,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtD,MAAM6C,EAAY,EAAQ,OACpBuP,EAAS,EAAQ,OACjBC,EAAU,EAAQ,OAKlBT,EAAM,CACR0B,QAAS,wBACT0J,KAAM,SACNzJ,WAAY,CAAC,UAAW,UACxBgT,aAAa,EACbnd,MATU,CACViK,QAAS,uCACTkB,OAAQ,EAAGA,YAAiB1R,EAAUrC,CAAG,yBAAyB+T,EAAOmrB,wBAQzE,IAAAr7B,CAAKmP,GACD,MAAM,IAAEjB,EAAG,OAAEkC,EAAM,KAAET,EAAI,UAAEF,EAAS,GAAEhB,GAAOU,EAE7C,IAAKM,EACD,MAAM,IAAI7P,MAAM,4BACpB,MAAM,UAAE2P,EAAS,MAAEkE,GAAUhF,EAW7B,SAAS6sB,EAAoBv5B,GACzB,IAAe,IAAXqO,EAKA,OAJAjB,EAAI0T,UAAU,CAAEwY,oBAAqBt5B,IACrCoN,EAAIpK,aACCwK,GACDrB,EAAIqiB,SAGZ,KAAK,EAAIxiB,EAAOkM,mBAAmBxL,EAAI2B,GAAS,CAC5C,MAAMmM,EAAQrO,EAAIrK,KAAK,SACvBsL,EAAIwU,UAAU,CACV1U,QAAS,wBACTmM,SAAUrZ,EACVsZ,aAActN,EAAOgD,KAAKC,KAC3BuL,GACEhN,GACDrB,EAAIG,IAAG,EAAI7P,EAAU2D,KAAKoa,IAAQ,IAAMrO,EAAIqiB,SACpD,CACJ,CA5BI9c,aAAiBjV,EAAUzC,KAC3BmS,EAAIG,GAAO7P,EAAUrC,CAAG,GAAGsX,cAAkB,IAAMvF,EAAI/D,MAAM,MAAOwF,GAAO5N,GAAQmM,EAAIG,GA4B3F,SAA4BktB,EAAgBx5B,GACxC,OAAWvD,EAAUrC,CAAG,IAAIo/B,SAAsBA,KAAkBx5B,IACxE,CA9B8Fy5B,CAAmB/nB,EAAO1R,IAAM,IAAMu5B,EAAoBv5B,UAErI,IAAV0R,GACLvF,EAAI/D,MAAM,MAAOwF,GAAO5N,QAAkB5D,IAAVsV,EAC1B6nB,EAAoBv5B,GACpBmM,EAAIG,GA0Bd,SAA2BktB,EAAgBx5B,GACvC,MAAM0Y,EAAK,GACX,IAAK,MAAMlG,KAAKgnB,GACc,IAAtBA,EAAehnB,IACfkG,EAAG7Z,KAASpC,EAAUrC,CAAG,GAAG4F,SAAWwS,KAE/C,OAAO,EAAI/V,EAAU0D,QAAQuY,EACjC,CAjCiBghB,CAAkBhoB,EAAO1R,IAAM,IAAMu5B,EAAoBv5B,OAE1E0M,EAAGgF,OAAQ,EACXtE,EAAI8T,GAAOzkB,EAAUrC,CAAG,GAAGsT,SAAiBzB,EAAQlR,QAAQyR,SA+BhE,GAEJ7S,EAAA,QAAkB6R,C,kBC9DlB/R,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtD,MAAM6C,EAAY,EAAQ,OACpBuP,EAAS,EAAQ,OACjB2tB,EAAU,EAAQ,OAKlBnuB,EAAM,CACR0B,QAAS,QACTpR,OAAO,EACPkH,MAPU,CACViK,QAAS,4BACTkB,OAAQ,EAAGoM,gBAAqB9d,EAAUrC,CAAG,kBAAkBmgB,MAM/D,IAAAtc,CAAKmP,GACD,MAAM,IAAEjB,EAAG,KAAEyB,EAAI,MAAE9R,EAAK,WAAEye,EAAU,OAAElM,GAAWjB,EAC7CtR,GAAUuS,GAA2B,iBAAVA,EAC3BjB,EAAIsT,UAAcjkB,EAAUrC,CAAG,KAAI,EAAI4R,EAAOwL,SAASrL,EAAKwtB,EAAQ5+B,YAAY6S,MAAS2M,MAGzFnN,EAAIqT,KAAShkB,EAAUrC,CAAG,GAAGiU,SAAcT,IAEnD,GAEJjU,EAAA,QAAkB6R,C,kBCtBlB/R,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtD,MAAMq3B,EAAiB,EAAQ,OACzBzlB,EAAM,CACR0B,QAAS,oBACT0J,KAAM,SACNzJ,WAAY,SACZnK,MAAOiuB,EAAejuB,MACtB/E,KAAOmP,IAAQ,EAAI6jB,EAAehB,sBAAsB7iB,IAE5DzT,EAAA,QAAkB6R,C,kBCTlB/R,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtD,MAAM6C,EAAY,EAAQ,OACpBuP,EAAS,EAAQ,OACjB2tB,EAAU,EAAQ,OAKlBnuB,EAAM,CACR0B,QAAS,OACTC,WAAY,QACZrR,OAAO,EACPkH,MARU,CACViK,QAAS,6CACTkB,OAAQ,EAAGoM,gBAAqB9d,EAAUrC,CAAG,mBAAmBmgB,MAOhE,IAAAtc,CAAKmP,GACD,MAAM,IAAEjB,EAAG,KAAEyB,EAAI,MAAE9R,EAAK,OAAEuS,EAAM,WAAEkM,EAAU,GAAE7N,GAAOU,EACrD,IAAKtR,GAA2B,IAAlBuS,EAAOlQ,OACjB,MAAM,IAAIN,MAAM,kCACpB,MAAM+7B,EAAUvrB,EAAOlQ,QAAUuO,EAAGzR,KAAK2tB,SACzC,IAAIiR,EACJ,MAAMC,EAAS,IAAOD,QAAiCA,EAAOA,GAAM,EAAI7tB,EAAOwL,SAASrL,EAAKwtB,EAAQ5+B,SACrG,IAAIyf,EACJ,GAAIof,GAAW99B,EACX0e,EAAQrO,EAAIjF,IAAI,SAChBkG,EAAI+T,WAAW3G,GAUnB,WACIrO,EAAIhF,OAAOqT,GAAO,GAClBrO,EAAIjE,MAAM,IAAKqS,GAAa7e,GAAMyQ,EAAIG,GAAO7P,EAAUrC,CAAG,GAAG0/B,OAAYlsB,MAASlS,MAAM,IAAMyQ,EAAIhF,OAAOqT,GAAO,GAAMgU,WAC1H,QAXK,CAED,IAAKlvB,MAAMC,QAAQ8O,GACf,MAAM,IAAIxQ,MAAM,4BACpB,MAAMk8B,EAAU5tB,EAAIlF,MAAM,UAAWsT,GACrCC,GAAQ,EAAI/d,EAAUyD,OAAOmO,EAAOge,KAAI,CAACnE,EAAItpB,IAOjD,SAAmBm7B,EAASn7B,GACxB,MAAMoR,EAAM3B,EAAOzP,GACnB,MAAsB,iBAARoR,GAA4B,OAARA,EACxBvT,EAAUrC,CAAG,GAAG0/B,OAAYlsB,MAASmsB,KAAWn7B,MAChDnC,EAAUrC,CAAG,GAAGwT,SAAYoC,GAC1C,CAZuDgqB,CAAUD,EAASn7B,KAC1E,CACAwO,EAAIoT,KAAKhG,EAWb,GAEJ7gB,EAAA,QAAkB6R,C,kBC7ClB/R,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtD,MAAMqgC,EAAgB,EAAQ,OACxBC,EAAe,EAAQ,OACvBC,EAAgB,EAAQ,OACxBC,EAAY,EAAQ,OACpBC,EAAoB,EAAQ,OAC5BC,EAAa,EAAQ,OACrBC,EAAe,EAAQ,OACvBC,EAAgB,EAAQ,OACxBC,EAAU,EAAQ,OAClBC,EAAS,EAAQ,OACjB1M,EAAa,CAEfiM,EAAcl/B,QACdm/B,EAAan/B,QAEbo/B,EAAcp/B,QACdq/B,EAAUr/B,QAEVs/B,EAAkBt/B,QAClBu/B,EAAWv/B,QAEXw/B,EAAax/B,QACby/B,EAAcz/B,QAEd,CAAEmS,QAAS,OAAQC,WAAY,CAAC,SAAU,UAC1C,CAAED,QAAS,WAAYC,WAAY,WACnCstB,EAAQ1/B,QACR2/B,EAAO3/B,SAEXpB,EAAA,QAAkBq0B,C,kBC9BlBv0B,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtD,MAAMoS,EAAS,EAAQ,OACjBR,EAAM,CACR0B,QAAS,CAAC,cAAe,eACzB0J,KAAM,QACNzJ,WAAY,SACZ,IAAAlP,EAAK,QAAEiP,EAAO,aAAEoB,EAAY,GAAE5B,SACItQ,IAA1BkS,EAAaqsB,WACb,EAAI3uB,EAAOuL,iBAAiB7K,EAAI,IAAIQ,mCAE5C,GAEJvT,EAAA,QAAkB6R,C,kBCZlB/R,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtD,MAAM6C,EAAY,EAAQ,OAQpB+O,EAAM,CACR0B,QAAS,CAAC,WAAY,YACtB0J,KAAM,QACNzJ,WAAY,SACZrR,OAAO,EACPkH,MAZU,CACV,OAAAiK,EAAQ,QAAEC,EAAO,WAAEqN,IACf,MAAMqgB,EAAmB,aAAZ1tB,EAAyB,OAAS,QAC/C,OAAWzQ,EAAUtC,GAAK,iBAAiBygC,UAAargB,SAC5D,EACApM,OAAQ,EAAGoM,gBAAqB9d,EAAUrC,CAAG,WAAWmgB,MAQxD,IAAAtc,CAAKmP,GACD,MAAM,QAAEF,EAAO,KAAEU,EAAI,WAAE2M,GAAenN,EAChCzK,EAAiB,aAAZuK,EAAyBzQ,EAAU4D,UAAUS,GAAKrE,EAAU4D,UAAUW,GACjFoM,EAAIsT,UAAcjkB,EAAUrC,CAAG,GAAGwT,YAAejL,KAAM4X,IAC3D,GAEJ5gB,EAAA,QAAkB6R,C,kBCrBlB/R,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtD,MAAM6C,EAAY,EAAQ,OACpBuP,EAAS,EAAQ,OACjB6uB,EAAe,EAAQ,OAQvBrvB,EAAM,CACR0B,QAAS,CAAC,YAAa,aACvB0J,KAAM,SACNzJ,WAAY,SACZrR,OAAO,EACPkH,MAZU,CACV,OAAAiK,EAAQ,QAAEC,EAAO,WAAEqN,IACf,MAAMqgB,EAAmB,cAAZ1tB,EAA0B,OAAS,QAChD,OAAWzQ,EAAUtC,GAAK,iBAAiBygC,UAAargB,cAC5D,EACApM,OAAQ,EAAGoM,gBAAqB9d,EAAUrC,CAAG,WAAWmgB,MAQxD,IAAAtc,CAAKmP,GACD,MAAM,QAAEF,EAAO,KAAEU,EAAI,WAAE2M,EAAU,GAAE7N,GAAOU,EACpCzK,EAAiB,cAAZuK,EAA0BzQ,EAAU4D,UAAUS,GAAKrE,EAAU4D,UAAUW,GAC5E+H,GAA0B,IAApB2D,EAAGzR,KAAK2rB,QAAwBnqB,EAAUrC,CAAG,GAAGwT,WAAoBnR,EAAUrC,CAAG,IAAG,EAAI4R,EAAOwL,SAASpK,EAAIjB,IAAK0uB,EAAa9/B,YAAY6S,KACtJR,EAAIsT,UAAcjkB,EAAUrC,CAAG,GAAG2O,KAAOpG,KAAM4X,IACnD,GAEJ5gB,EAAA,QAAkB6R,C,kBCxBlB/R,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtD,MAAM6C,EAAY,EAAQ,OACpBq+B,EAAMr+B,EAAU4D,UAChB06B,EAAO,CACTC,QAAS,CAAEC,MAAO,KAAM/Z,GAAI4Z,EAAI75B,IAAKwf,KAAMqa,EAAIh6B,IAC/Co6B,QAAS,CAAED,MAAO,KAAM/Z,GAAI4Z,EAAI/5B,IAAK0f,KAAMqa,EAAI95B,IAC/Cm6B,iBAAkB,CAAEF,MAAO,IAAK/Z,GAAI4Z,EAAI95B,GAAIyf,KAAMqa,EAAI/5B,KACtDq6B,iBAAkB,CAAEH,MAAO,IAAK/Z,GAAI4Z,EAAIh6B,GAAI2f,KAAMqa,EAAI75B,MAEpD+B,EAAQ,CACViK,QAAS,EAAGC,UAASqN,gBAAqB9d,EAAUtC,GAAK,WAAW4gC,EAAK7tB,GAAS+tB,SAAS1gB,IAC3FpM,OAAQ,EAAGjB,UAASqN,gBAAqB9d,EAAUrC,CAAG,gBAAgB2gC,EAAK7tB,GAAS+tB,iBAAiB1gB,MAEnG/O,EAAM,CACR0B,QAASzT,OAAOmZ,KAAKmoB,GACrBnkB,KAAM,SACNzJ,WAAY,SACZrR,OAAO,EACPkH,QACA,IAAA/E,CAAKmP,GACD,MAAM,QAAEF,EAAO,KAAEU,EAAI,WAAE2M,GAAenN,EACtCA,EAAIsT,UAAcjkB,EAAUrC,CAAG,GAAGwT,KAAQmtB,EAAK7tB,GAASuT,QAAQlG,cAAuB3M,KAC3F,GAEJjU,EAAA,QAAkB6R,C,kBCxBlB/R,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtD,MAAM6C,EAAY,EAAQ,OAQpB+O,EAAM,CACR0B,QAAS,CAAC,gBAAiB,iBAC3B0J,KAAM,SACNzJ,WAAY,SACZrR,OAAO,EACPkH,MAZU,CACV,OAAAiK,EAAQ,QAAEC,EAAO,WAAEqN,IACf,MAAMqgB,EAAmB,kBAAZ1tB,EAA8B,OAAS,QACpD,OAAWzQ,EAAUtC,GAAK,iBAAiBygC,UAAargB,cAC5D,EACApM,OAAQ,EAAGoM,gBAAqB9d,EAAUrC,CAAG,WAAWmgB,MAQxD,IAAAtc,CAAKmP,GACD,MAAM,QAAEF,EAAO,KAAEU,EAAI,WAAE2M,GAAenN,EAChCzK,EAAiB,kBAAZuK,EAA8BzQ,EAAU4D,UAAUS,GAAKrE,EAAU4D,UAAUW,GACtFoM,EAAIsT,UAAcjkB,EAAUrC,CAAG,eAAewT,aAAgBjL,KAAM4X,IACxE,GAEJ5gB,EAAA,QAAkB6R,C,kBCrBlB/R,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtD,MAAM6C,EAAY,EAAQ,OAKpB+O,EAAM,CACR0B,QAAS,aACT0J,KAAM,SACNzJ,WAAY,SACZrR,OAAO,EACPkH,MATU,CACViK,QAAS,EAAGsN,gBAAqB9d,EAAUtC,GAAK,uBAAuBogB,IACvEpM,OAAQ,EAAGoM,gBAAqB9d,EAAUrC,CAAG,gBAAgBmgB,MAQ7D,IAAAtc,CAAKmP,GACD,MAAM,IAAEjB,EAAG,KAAEyB,EAAI,WAAE2M,EAAU,GAAE7N,GAAOU,EAEhCiuB,EAAO3uB,EAAGzR,KAAKqgC,oBACft8B,EAAMmN,EAAIjF,IAAI,OACdq0B,EAAUF,EACN5+B,EAAUrC,CAAG,uBAAuB4E,QAAUA,WAAaq8B,IAC3D5+B,EAAUrC,CAAG,GAAG4E,kBAAoBA,KAC9CoO,EAAIsT,UAAcjkB,EAAUrC,CAAG,IAAImgB,eAAwBvb,OAAS4O,KAAQ2M,MAAeghB,MAC/F,GAEJ5hC,EAAA,QAAkB6R,C,kBCvBlB/R,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtD,MAAM8G,EAAS,EAAQ,OACjBjE,EAAY,EAAQ,OAKpB+O,EAAM,CACR0B,QAAS,UACT0J,KAAM,SACNzJ,WAAY,SACZrR,OAAO,EACPkH,MATU,CACViK,QAAS,EAAGsN,gBAAqB9d,EAAUtC,GAAK,uBAAuBogB,KACvEpM,OAAQ,EAAGoM,gBAAqB9d,EAAUrC,CAAG,aAAamgB,MAQ1D,IAAAtc,CAAKmP,GACD,MAAM,KAAEQ,EAAI,MAAE9R,EAAK,OAAEuS,EAAM,WAAEkM,EAAU,GAAE7N,GAAOU,EAE1CsnB,EAAIhoB,EAAGzR,KAAK8tB,cAAgB,IAAM,GAClCP,EAAS1sB,EAAYW,EAAUrC,CAAG,eAAemgB,MAAema,OAAQ,EAAIh0B,EAAO2uB,YAAYjiB,EAAKiB,GAC1GjB,EAAIsT,UAAcjkB,EAAUrC,CAAG,IAAIouB,UAAe5a,KACtD,GAEJjU,EAAA,QAAkB6R,C,kBCrBlB/R,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtD,MAAM8G,EAAS,EAAQ,OACjBjE,EAAY,EAAQ,OACpBuP,EAAS,EAAQ,OAKjBR,EAAM,CACR0B,QAAS,WACT0J,KAAM,SACNzJ,WAAY,QACZrR,OAAO,EACPkH,MATU,CACViK,QAAS,EAAGkB,QAAUiiB,sBAA4B3zB,EAAUtC,GAAK,gCAAgCi2B,KACjGjiB,OAAQ,EAAGA,QAAUiiB,sBAA4B3zB,EAAUrC,CAAG,qBAAqBg2B,MAQnF,IAAAnyB,CAAKmP,GACD,MAAM,IAAEjB,EAAG,OAAEkC,EAAM,WAAEkM,EAAU,KAAE3M,EAAI,MAAE9R,EAAK,GAAE4Q,GAAOU,GAC/C,KAAEnS,GAASyR,EACjB,IAAK5Q,GAA2B,IAAlBuS,EAAOlQ,OACjB,OACJ,MAAMy7B,EAAUvrB,EAAOlQ,QAAUlD,EAAK0tB,aAKtC,GAJIjc,EAAGc,UAeP,WACI,GAAIosB,GAAW99B,EACXsR,EAAI+T,WAAW1kB,EAAUxC,IAAKuhC,QAG9B,IAAK,MAAMze,KAAQ1O,GACf,EAAI3N,EAAOowB,wBAAwB1jB,EAAK2P,EAGpD,CAvBI0e,GAwBJ,WACI,MAAM/K,EAAUvkB,EAAIjF,IAAI,WACxB,GAAI0yB,GAAW99B,EAAO,CAClB,MAAM0e,EAAQrO,EAAIjF,IAAI,SAAS,GAC/BkG,EAAI+T,WAAW3G,GAAO,IAe9B,SAA0BkW,EAASlW,GAC/BpN,EAAI0T,UAAU,CAAEsP,gBAAiBM,IACjCvkB,EAAIjE,MAAMwoB,EAASnW,GAAY,KAC3BpO,EAAIhF,OAAOqT,GAAO,EAAI9Z,EAAOkwB,gBAAgBzkB,EAAKyB,EAAM8iB,EAASz1B,EAAKqN,gBACtE6D,EAAIG,IAAG,EAAI7P,EAAU2D,KAAKoa,IAAQ,KAC9BpN,EAAIpK,QACJmJ,EAAIqiB,OAAO,GACb,GACH/xB,EAAUxC,IACjB,CAxBoCyhC,CAAiBhL,EAASlW,KACtDpN,EAAI8T,GAAG1G,EACX,MAEIrO,EAAIG,IAAG,EAAI5L,EAAOqwB,kBAAkB3jB,EAAKiB,EAAQqiB,KACjD,EAAIhwB,EAAOswB,mBAAmB5jB,EAAKsjB,GACnCvkB,EAAItI,MAEZ,CAlCI83B,GACA1gC,EAAKytB,eAAgB,CACrB,MAAMhX,EAAQtE,EAAIkB,aAAa8O,YACzB,kBAAEvM,GAAsBzD,EAAIV,GAClC,IAAK,MAAMkvB,KAAevtB,EACtB,QAA2EjS,KAAtEsV,aAAqC,EAASA,EAAMkqB,MAAgC/qB,EAAkB1G,IAAIyxB,GAAc,CACzH,MACMxnB,EAAM,sBAAsBwnB,yBADflvB,EAAGG,UAAUgD,OAASnD,EAAGqB,mCAE5C,EAAI/B,EAAOuL,iBAAiB7K,EAAI0H,EAAK1H,EAAGzR,KAAKytB,eACjD,CAER,CAwBA,SAAS8S,IACLrvB,EAAIjE,MAAM,OAAQqS,GAAawC,IAC3B3P,EAAI0T,UAAU,CAAEsP,gBAAiBrT,IACjC5Q,EAAIG,IAAG,EAAI5L,EAAOyzB,kBAAkBhoB,EAAKyB,EAAMmP,EAAM9hB,EAAKqN,gBAAgB,IAAM8E,EAAIpK,SAAQ,GAEpG,CAWJ,GAEJrJ,EAAA,QAAkB6R,C,kBC5ElB/R,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtD,MAAM2jB,EAAa,EAAQ,OACrB9gB,EAAY,EAAQ,OACpBuP,EAAS,EAAQ,OACjB2tB,EAAU,EAAQ,OAKlBnuB,EAAM,CACR0B,QAAS,cACT0J,KAAM,QACNzJ,WAAY,UACZrR,OAAO,EACPkH,MATU,CACViK,QAAS,EAAGkB,QAAUvP,IAAGi9B,QAAcp/B,EAAUtC,GAAK,2CAA2C0hC,SAASj9B,mBAC1GuP,OAAQ,EAAGA,QAAUvP,IAAGi9B,QAAcp/B,EAAUrC,CAAG,OAAOwE,SAASi9B,MAQnE,IAAA59B,CAAKmP,GACD,MAAM,IAAEjB,EAAG,KAAEyB,EAAI,MAAE9R,EAAK,OAAEuS,EAAM,aAAEC,EAAY,WAAEiM,EAAU,GAAE7N,GAAOU,EACnE,IAAKtR,IAAUuS,EACX,OACJ,MAAMmM,EAAQrO,EAAIjF,IAAI,SAChB40B,EAAYxtB,EAAajJ,OAAQ,EAAIkY,EAAWzC,gBAAgBxM,EAAajJ,OAAS,GAa5F,SAAS02B,EAAMn9B,EAAGi9B,GACd,MAAMz9B,EAAO+N,EAAIrK,KAAK,QAChB+Z,GAAY,EAAI0B,EAAW7C,gBAAgBohB,EAAW19B,EAAMsO,EAAGzR,KAAK6gB,cAAeyB,EAAWxC,SAASgB,OACvGigB,EAAU7vB,EAAIlF,MAAM,UAAexK,EAAUrC,CAAG,MACtD+R,EAAI8vB,IAAQx/B,EAAUrC,CAAG,IAAIwE,QAAQ,KACjCuN,EAAIjF,IAAI9I,EAAU3B,EAAUrC,CAAG,GAAGwT,KAAQhP,MAC1CuN,EAAIG,GAAGuP,EAAepf,EAAUrC,CAAG,YAC/B0hC,EAAU39B,OAAS,GACnBgO,EAAIG,GAAO7P,EAAUrC,CAAG,UAAUgE,gBAAwB3B,EAAUrC,CAAG,GAAGgE,YAC9E+N,EACKG,GAAO7P,EAAUrC,CAAG,UAAU4hC,KAAW59B,kBAAqB,KAC/D+N,EAAIhF,OAAO00B,EAAOp/B,EAAUrC,CAAG,GAAG4hC,KAAW59B,MAC7CgP,EAAIpK,QACJmJ,EAAIhF,OAAOqT,GAAO,GAAOgU,OAAO,IAE/BvwB,KAASxB,EAAUrC,CAAG,GAAG4hC,KAAW59B,QAAWQ,IAAI,GAEhE,CACA,SAASs9B,EAAOt9B,EAAGi9B,GACf,MAAMhC,GAAM,EAAI7tB,EAAOwL,SAASrL,EAAKwtB,EAAQ5+B,SACvCohC,EAAQhwB,EAAIrK,KAAK,SACvBqK,EAAItJ,MAAMs5B,GAAOF,IAAQx/B,EAAUrC,CAAG,IAAIwE,QAAQ,IAAMuN,EAAI8vB,IAAQx/B,EAAUrC,CAAG,GAAGyhC,OAAOj9B,MAAMi9B,QAAQ,IAAM1vB,EAAIG,GAAO7P,EAAUrC,CAAG,GAAGy/B,KAAOjsB,KAAQhP,OAAOgP,KAAQiuB,OAAO,KAC3KzuB,EAAIpK,QACJmJ,EAAIhF,OAAOqT,GAAO,GAAOgU,MAAM2N,EAAM,OAE7C,CArCA/uB,EAAI+T,WAAW3G,GAEf,WACI,MAAM5b,EAAIuN,EAAIjF,IAAI,IAASzK,EAAUrC,CAAG,GAAGwT,YACrCiuB,EAAI1vB,EAAIjF,IAAI,KAClBkG,EAAI0T,UAAU,CAAEliB,IAAGi9B,MACnB1vB,EAAIhF,OAAOqT,GAAO,GAClBrO,EAAIG,GAAO7P,EAAUrC,CAAG,GAAGwE,SAAS,KAG7Bk9B,EAAU39B,OAAS,IAAM29B,EAAU12B,MAAMqW,GAAY,WAANA,GAAwB,UAANA,IAHbsgB,EAAQG,GAAQt9B,EAAGi9B,IAClF,GAR+Cp/B,EAAUrC,CAAG,GAAGmgB,eAC/DnN,EAAI8T,GAAG1G,EAqCX,GAEJ7gB,EAAA,QAAkB6R,C","sources":["webpack://pipeline-manager/./node_modules/ajv/dist/2019.js","webpack://pipeline-manager/./node_modules/ajv/dist/ajv.js","webpack://pipeline-manager/./node_modules/ajv/dist/compile/codegen/code.js","webpack://pipeline-manager/./node_modules/ajv/dist/compile/codegen/index.js","webpack://pipeline-manager/./node_modules/ajv/dist/compile/codegen/scope.js","webpack://pipeline-manager/./node_modules/ajv/dist/compile/errors.js","webpack://pipeline-manager/./node_modules/ajv/dist/compile/index.js","webpack://pipeline-manager/./node_modules/ajv/dist/compile/names.js","webpack://pipeline-manager/./node_modules/ajv/dist/compile/ref_error.js","webpack://pipeline-manager/./node_modules/ajv/dist/compile/resolve.js","webpack://pipeline-manager/./node_modules/ajv/dist/compile/rules.js","webpack://pipeline-manager/./node_modules/ajv/dist/compile/util.js","webpack://pipeline-manager/./node_modules/ajv/dist/compile/validate/applicability.js","webpack://pipeline-manager/./node_modules/ajv/dist/compile/validate/boolSchema.js","webpack://pipeline-manager/./node_modules/ajv/dist/compile/validate/dataType.js","webpack://pipeline-manager/./node_modules/ajv/dist/compile/validate/defaults.js","webpack://pipeline-manager/./node_modules/ajv/dist/compile/validate/index.js","webpack://pipeline-manager/./node_modules/ajv/dist/compile/validate/keyword.js","webpack://pipeline-manager/./node_modules/ajv/dist/compile/validate/subschema.js","webpack://pipeline-manager/./node_modules/ajv/dist/core.js","webpack://pipeline-manager/./node_modules/ajv/dist/refs/json-schema-2019-09/index.js","webpack://pipeline-manager/./node_modules/ajv/dist/runtime/equal.js","webpack://pipeline-manager/./node_modules/ajv/dist/runtime/ucs2length.js","webpack://pipeline-manager/./node_modules/ajv/dist/runtime/uri.js","webpack://pipeline-manager/./node_modules/ajv/dist/runtime/validation_error.js","webpack://pipeline-manager/./node_modules/ajv/dist/vocabularies/applicator/additionalItems.js","webpack://pipeline-manager/./node_modules/ajv/dist/vocabularies/applicator/additionalProperties.js","webpack://pipeline-manager/./node_modules/ajv/dist/vocabularies/applicator/allOf.js","webpack://pipeline-manager/./node_modules/ajv/dist/vocabularies/applicator/anyOf.js","webpack://pipeline-manager/./node_modules/ajv/dist/vocabularies/applicator/contains.js","webpack://pipeline-manager/./node_modules/ajv/dist/vocabularies/applicator/dependencies.js","webpack://pipeline-manager/./node_modules/ajv/dist/vocabularies/applicator/dependentSchemas.js","webpack://pipeline-manager/./node_modules/ajv/dist/vocabularies/applicator/if.js","webpack://pipeline-manager/./node_modules/ajv/dist/vocabularies/applicator/index.js","webpack://pipeline-manager/./node_modules/ajv/dist/vocabularies/applicator/items.js","webpack://pipeline-manager/./node_modules/ajv/dist/vocabularies/applicator/items2020.js","webpack://pipeline-manager/./node_modules/ajv/dist/vocabularies/applicator/not.js","webpack://pipeline-manager/./node_modules/ajv/dist/vocabularies/applicator/oneOf.js","webpack://pipeline-manager/./node_modules/ajv/dist/vocabularies/applicator/patternProperties.js","webpack://pipeline-manager/./node_modules/ajv/dist/vocabularies/applicator/prefixItems.js","webpack://pipeline-manager/./node_modules/ajv/dist/vocabularies/applicator/properties.js","webpack://pipeline-manager/./node_modules/ajv/dist/vocabularies/applicator/propertyNames.js","webpack://pipeline-manager/./node_modules/ajv/dist/vocabularies/applicator/thenElse.js","webpack://pipeline-manager/./node_modules/ajv/dist/vocabularies/code.js","webpack://pipeline-manager/./node_modules/ajv/dist/vocabularies/core/id.js","webpack://pipeline-manager/./node_modules/ajv/dist/vocabularies/core/index.js","webpack://pipeline-manager/./node_modules/ajv/dist/vocabularies/core/ref.js","webpack://pipeline-manager/./node_modules/ajv/dist/vocabularies/discriminator/index.js","webpack://pipeline-manager/./node_modules/ajv/dist/vocabularies/discriminator/types.js","webpack://pipeline-manager/./node_modules/ajv/dist/vocabularies/draft7.js","webpack://pipeline-manager/./node_modules/ajv/dist/vocabularies/dynamic/dynamicAnchor.js","webpack://pipeline-manager/./node_modules/ajv/dist/vocabularies/dynamic/dynamicRef.js","webpack://pipeline-manager/./node_modules/ajv/dist/vocabularies/dynamic/index.js","webpack://pipeline-manager/./node_modules/ajv/dist/vocabularies/dynamic/recursiveAnchor.js","webpack://pipeline-manager/./node_modules/ajv/dist/vocabularies/dynamic/recursiveRef.js","webpack://pipeline-manager/./node_modules/ajv/dist/vocabularies/format/format.js","webpack://pipeline-manager/./node_modules/ajv/dist/vocabularies/format/index.js","webpack://pipeline-manager/./node_modules/ajv/dist/vocabularies/metadata.js","webpack://pipeline-manager/./node_modules/ajv/dist/vocabularies/next.js","webpack://pipeline-manager/./node_modules/ajv/dist/vocabularies/unevaluated/index.js","webpack://pipeline-manager/./node_modules/ajv/dist/vocabularies/unevaluated/unevaluatedItems.js","webpack://pipeline-manager/./node_modules/ajv/dist/vocabularies/unevaluated/unevaluatedProperties.js","webpack://pipeline-manager/./node_modules/ajv/dist/vocabularies/validation/const.js","webpack://pipeline-manager/./node_modules/ajv/dist/vocabularies/validation/dependentRequired.js","webpack://pipeline-manager/./node_modules/ajv/dist/vocabularies/validation/enum.js","webpack://pipeline-manager/./node_modules/ajv/dist/vocabularies/validation/index.js","webpack://pipeline-manager/./node_modules/ajv/dist/vocabularies/validation/limitContains.js","webpack://pipeline-manager/./node_modules/ajv/dist/vocabularies/validation/limitItems.js","webpack://pipeline-manager/./node_modules/ajv/dist/vocabularies/validation/limitLength.js","webpack://pipeline-manager/./node_modules/ajv/dist/vocabularies/validation/limitNumber.js","webpack://pipeline-manager/./node_modules/ajv/dist/vocabularies/validation/limitProperties.js","webpack://pipeline-manager/./node_modules/ajv/dist/vocabularies/validation/multipleOf.js","webpack://pipeline-manager/./node_modules/ajv/dist/vocabularies/validation/pattern.js","webpack://pipeline-manager/./node_modules/ajv/dist/vocabularies/validation/required.js","webpack://pipeline-manager/./node_modules/ajv/dist/vocabularies/validation/uniqueItems.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MissingRefError = exports.ValidationError = exports.CodeGen = exports.Name = exports.nil = exports.stringify = exports.str = exports._ = exports.KeywordCxt = void 0;\nconst core_1 = require(\"./core\");\nconst draft7_1 = require(\"./vocabularies/draft7\");\nconst dynamic_1 = require(\"./vocabularies/dynamic\");\nconst next_1 = require(\"./vocabularies/next\");\nconst unevaluated_1 = require(\"./vocabularies/unevaluated\");\nconst discriminator_1 = require(\"./vocabularies/discriminator\");\nconst json_schema_2019_09_1 = require(\"./refs/json-schema-2019-09\");\nconst META_SCHEMA_ID = \"https://json-schema.org/draft/2019-09/schema\";\nclass Ajv2019 extends core_1.default {\n    constructor(opts = {}) {\n        super({\n            ...opts,\n            dynamicRef: true,\n            next: true,\n            unevaluated: true,\n        });\n    }\n    _addVocabularies() {\n        super._addVocabularies();\n        this.addVocabulary(dynamic_1.default);\n        draft7_1.default.forEach((v) => this.addVocabulary(v));\n        this.addVocabulary(next_1.default);\n        this.addVocabulary(unevaluated_1.default);\n        if (this.opts.discriminator)\n            this.addKeyword(discriminator_1.default);\n    }\n    _addDefaultMetaSchema() {\n        super._addDefaultMetaSchema();\n        const { $data, meta } = this.opts;\n        if (!meta)\n            return;\n        json_schema_2019_09_1.default.call(this, $data);\n        this.refs[\"http://json-schema.org/schema\"] = META_SCHEMA_ID;\n    }\n    defaultMeta() {\n        return (this.opts.defaultMeta =\n            super.defaultMeta() || (this.getSchema(META_SCHEMA_ID) ? META_SCHEMA_ID : undefined));\n    }\n}\nmodule.exports = exports = Ajv2019;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = Ajv2019;\nvar validate_1 = require(\"./compile/validate\");\nObject.defineProperty(exports, \"KeywordCxt\", { enumerable: true, get: function () { return validate_1.KeywordCxt; } });\nvar codegen_1 = require(\"./compile/codegen\");\nObject.defineProperty(exports, \"_\", { enumerable: true, get: function () { return codegen_1._; } });\nObject.defineProperty(exports, \"str\", { enumerable: true, get: function () { return codegen_1.str; } });\nObject.defineProperty(exports, \"stringify\", { enumerable: true, get: function () { return codegen_1.stringify; } });\nObject.defineProperty(exports, \"nil\", { enumerable: true, get: function () { return codegen_1.nil; } });\nObject.defineProperty(exports, \"Name\", { enumerable: true, get: function () { return codegen_1.Name; } });\nObject.defineProperty(exports, \"CodeGen\", { enumerable: true, get: function () { return codegen_1.CodeGen; } });\nvar validation_error_1 = require(\"./runtime/validation_error\");\nObject.defineProperty(exports, \"ValidationError\", { enumerable: true, get: function () { return validation_error_1.default; } });\nvar ref_error_1 = require(\"./compile/ref_error\");\nObject.defineProperty(exports, \"MissingRefError\", { enumerable: true, get: function () { return ref_error_1.default; } });\n//# sourceMappingURL=2019.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MissingRefError = exports.ValidationError = exports.CodeGen = exports.Name = exports.nil = exports.stringify = exports.str = exports._ = exports.KeywordCxt = void 0;\nconst core_1 = require(\"./core\");\nconst draft7_1 = require(\"./vocabularies/draft7\");\nconst discriminator_1 = require(\"./vocabularies/discriminator\");\nconst draft7MetaSchema = require(\"./refs/json-schema-draft-07.json\");\nconst META_SUPPORT_DATA = [\"/properties\"];\nconst META_SCHEMA_ID = \"http://json-schema.org/draft-07/schema\";\nclass Ajv extends core_1.default {\n    _addVocabularies() {\n        super._addVocabularies();\n        draft7_1.default.forEach((v) => this.addVocabulary(v));\n        if (this.opts.discriminator)\n            this.addKeyword(discriminator_1.default);\n    }\n    _addDefaultMetaSchema() {\n        super._addDefaultMetaSchema();\n        if (!this.opts.meta)\n            return;\n        const metaSchema = this.opts.$data\n            ? this.$dataMetaSchema(draft7MetaSchema, META_SUPPORT_DATA)\n            : draft7MetaSchema;\n        this.addMetaSchema(metaSchema, META_SCHEMA_ID, false);\n        this.refs[\"http://json-schema.org/schema\"] = META_SCHEMA_ID;\n    }\n    defaultMeta() {\n        return (this.opts.defaultMeta =\n            super.defaultMeta() || (this.getSchema(META_SCHEMA_ID) ? META_SCHEMA_ID : undefined));\n    }\n}\nmodule.exports = exports = Ajv;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = Ajv;\nvar validate_1 = require(\"./compile/validate\");\nObject.defineProperty(exports, \"KeywordCxt\", { enumerable: true, get: function () { return validate_1.KeywordCxt; } });\nvar codegen_1 = require(\"./compile/codegen\");\nObject.defineProperty(exports, \"_\", { enumerable: true, get: function () { return codegen_1._; } });\nObject.defineProperty(exports, \"str\", { enumerable: true, get: function () { return codegen_1.str; } });\nObject.defineProperty(exports, \"stringify\", { enumerable: true, get: function () { return codegen_1.stringify; } });\nObject.defineProperty(exports, \"nil\", { enumerable: true, get: function () { return codegen_1.nil; } });\nObject.defineProperty(exports, \"Name\", { enumerable: true, get: function () { return codegen_1.Name; } });\nObject.defineProperty(exports, \"CodeGen\", { enumerable: true, get: function () { return codegen_1.CodeGen; } });\nvar validation_error_1 = require(\"./runtime/validation_error\");\nObject.defineProperty(exports, \"ValidationError\", { enumerable: true, get: function () { return validation_error_1.default; } });\nvar ref_error_1 = require(\"./compile/ref_error\");\nObject.defineProperty(exports, \"MissingRefError\", { enumerable: true, get: function () { return ref_error_1.default; } });\n//# sourceMappingURL=ajv.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.regexpCode = exports.getEsmExportName = exports.getProperty = exports.safeStringify = exports.stringify = exports.strConcat = exports.addCodeArg = exports.str = exports._ = exports.nil = exports._Code = exports.Name = exports.IDENTIFIER = exports._CodeOrName = void 0;\nclass _CodeOrName {\n}\nexports._CodeOrName = _CodeOrName;\nexports.IDENTIFIER = /^[a-z$_][a-z$_0-9]*$/i;\nclass Name extends _CodeOrName {\n    constructor(s) {\n        super();\n        if (!exports.IDENTIFIER.test(s))\n            throw new Error(\"CodeGen: name must be a valid identifier\");\n        this.str = s;\n    }\n    toString() {\n        return this.str;\n    }\n    emptyStr() {\n        return false;\n    }\n    get names() {\n        return { [this.str]: 1 };\n    }\n}\nexports.Name = Name;\nclass _Code extends _CodeOrName {\n    constructor(code) {\n        super();\n        this._items = typeof code === \"string\" ? [code] : code;\n    }\n    toString() {\n        return this.str;\n    }\n    emptyStr() {\n        if (this._items.length > 1)\n            return false;\n        const item = this._items[0];\n        return item === \"\" || item === '\"\"';\n    }\n    get str() {\n        var _a;\n        return ((_a = this._str) !== null && _a !== void 0 ? _a : (this._str = this._items.reduce((s, c) => `${s}${c}`, \"\")));\n    }\n    get names() {\n        var _a;\n        return ((_a = this._names) !== null && _a !== void 0 ? _a : (this._names = this._items.reduce((names, c) => {\n            if (c instanceof Name)\n                names[c.str] = (names[c.str] || 0) + 1;\n            return names;\n        }, {})));\n    }\n}\nexports._Code = _Code;\nexports.nil = new _Code(\"\");\nfunction _(strs, ...args) {\n    const code = [strs[0]];\n    let i = 0;\n    while (i < args.length) {\n        addCodeArg(code, args[i]);\n        code.push(strs[++i]);\n    }\n    return new _Code(code);\n}\nexports._ = _;\nconst plus = new _Code(\"+\");\nfunction str(strs, ...args) {\n    const expr = [safeStringify(strs[0])];\n    let i = 0;\n    while (i < args.length) {\n        expr.push(plus);\n        addCodeArg(expr, args[i]);\n        expr.push(plus, safeStringify(strs[++i]));\n    }\n    optimize(expr);\n    return new _Code(expr);\n}\nexports.str = str;\nfunction addCodeArg(code, arg) {\n    if (arg instanceof _Code)\n        code.push(...arg._items);\n    else if (arg instanceof Name)\n        code.push(arg);\n    else\n        code.push(interpolate(arg));\n}\nexports.addCodeArg = addCodeArg;\nfunction optimize(expr) {\n    let i = 1;\n    while (i < expr.length - 1) {\n        if (expr[i] === plus) {\n            const res = mergeExprItems(expr[i - 1], expr[i + 1]);\n            if (res !== undefined) {\n                expr.splice(i - 1, 3, res);\n                continue;\n            }\n            expr[i++] = \"+\";\n        }\n        i++;\n    }\n}\nfunction mergeExprItems(a, b) {\n    if (b === '\"\"')\n        return a;\n    if (a === '\"\"')\n        return b;\n    if (typeof a == \"string\") {\n        if (b instanceof Name || a[a.length - 1] !== '\"')\n            return;\n        if (typeof b != \"string\")\n            return `${a.slice(0, -1)}${b}\"`;\n        if (b[0] === '\"')\n            return a.slice(0, -1) + b.slice(1);\n        return;\n    }\n    if (typeof b == \"string\" && b[0] === '\"' && !(a instanceof Name))\n        return `\"${a}${b.slice(1)}`;\n    return;\n}\nfunction strConcat(c1, c2) {\n    return c2.emptyStr() ? c1 : c1.emptyStr() ? c2 : str `${c1}${c2}`;\n}\nexports.strConcat = strConcat;\n// TODO do not allow arrays here\nfunction interpolate(x) {\n    return typeof x == \"number\" || typeof x == \"boolean\" || x === null\n        ? x\n        : safeStringify(Array.isArray(x) ? x.join(\",\") : x);\n}\nfunction stringify(x) {\n    return new _Code(safeStringify(x));\n}\nexports.stringify = stringify;\nfunction safeStringify(x) {\n    return JSON.stringify(x)\n        .replace(/\\u2028/g, \"\\\\u2028\")\n        .replace(/\\u2029/g, \"\\\\u2029\");\n}\nexports.safeStringify = safeStringify;\nfunction getProperty(key) {\n    return typeof key == \"string\" && exports.IDENTIFIER.test(key) ? new _Code(`.${key}`) : _ `[${key}]`;\n}\nexports.getProperty = getProperty;\n//Does best effort to format the name properly\nfunction getEsmExportName(key) {\n    if (typeof key == \"string\" && exports.IDENTIFIER.test(key)) {\n        return new _Code(`${key}`);\n    }\n    throw new Error(`CodeGen: invalid export name: ${key}, use explicit $id name mapping`);\n}\nexports.getEsmExportName = getEsmExportName;\nfunction regexpCode(rx) {\n    return new _Code(rx.toString());\n}\nexports.regexpCode = regexpCode;\n//# sourceMappingURL=code.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.or = exports.and = exports.not = exports.CodeGen = exports.operators = exports.varKinds = exports.ValueScopeName = exports.ValueScope = exports.Scope = exports.Name = exports.regexpCode = exports.stringify = exports.getProperty = exports.nil = exports.strConcat = exports.str = exports._ = void 0;\nconst code_1 = require(\"./code\");\nconst scope_1 = require(\"./scope\");\nvar code_2 = require(\"./code\");\nObject.defineProperty(exports, \"_\", { enumerable: true, get: function () { return code_2._; } });\nObject.defineProperty(exports, \"str\", { enumerable: true, get: function () { return code_2.str; } });\nObject.defineProperty(exports, \"strConcat\", { enumerable: true, get: function () { return code_2.strConcat; } });\nObject.defineProperty(exports, \"nil\", { enumerable: true, get: function () { return code_2.nil; } });\nObject.defineProperty(exports, \"getProperty\", { enumerable: true, get: function () { return code_2.getProperty; } });\nObject.defineProperty(exports, \"stringify\", { enumerable: true, get: function () { return code_2.stringify; } });\nObject.defineProperty(exports, \"regexpCode\", { enumerable: true, get: function () { return code_2.regexpCode; } });\nObject.defineProperty(exports, \"Name\", { enumerable: true, get: function () { return code_2.Name; } });\nvar scope_2 = require(\"./scope\");\nObject.defineProperty(exports, \"Scope\", { enumerable: true, get: function () { return scope_2.Scope; } });\nObject.defineProperty(exports, \"ValueScope\", { enumerable: true, get: function () { return scope_2.ValueScope; } });\nObject.defineProperty(exports, \"ValueScopeName\", { enumerable: true, get: function () { return scope_2.ValueScopeName; } });\nObject.defineProperty(exports, \"varKinds\", { enumerable: true, get: function () { return scope_2.varKinds; } });\nexports.operators = {\n    GT: new code_1._Code(\">\"),\n    GTE: new code_1._Code(\">=\"),\n    LT: new code_1._Code(\"<\"),\n    LTE: new code_1._Code(\"<=\"),\n    EQ: new code_1._Code(\"===\"),\n    NEQ: new code_1._Code(\"!==\"),\n    NOT: new code_1._Code(\"!\"),\n    OR: new code_1._Code(\"||\"),\n    AND: new code_1._Code(\"&&\"),\n    ADD: new code_1._Code(\"+\"),\n};\nclass Node {\n    optimizeNodes() {\n        return this;\n    }\n    optimizeNames(_names, _constants) {\n        return this;\n    }\n}\nclass Def extends Node {\n    constructor(varKind, name, rhs) {\n        super();\n        this.varKind = varKind;\n        this.name = name;\n        this.rhs = rhs;\n    }\n    render({ es5, _n }) {\n        const varKind = es5 ? scope_1.varKinds.var : this.varKind;\n        const rhs = this.rhs === undefined ? \"\" : ` = ${this.rhs}`;\n        return `${varKind} ${this.name}${rhs};` + _n;\n    }\n    optimizeNames(names, constants) {\n        if (!names[this.name.str])\n            return;\n        if (this.rhs)\n            this.rhs = optimizeExpr(this.rhs, names, constants);\n        return this;\n    }\n    get names() {\n        return this.rhs instanceof code_1._CodeOrName ? this.rhs.names : {};\n    }\n}\nclass Assign extends Node {\n    constructor(lhs, rhs, sideEffects) {\n        super();\n        this.lhs = lhs;\n        this.rhs = rhs;\n        this.sideEffects = sideEffects;\n    }\n    render({ _n }) {\n        return `${this.lhs} = ${this.rhs};` + _n;\n    }\n    optimizeNames(names, constants) {\n        if (this.lhs instanceof code_1.Name && !names[this.lhs.str] && !this.sideEffects)\n            return;\n        this.rhs = optimizeExpr(this.rhs, names, constants);\n        return this;\n    }\n    get names() {\n        const names = this.lhs instanceof code_1.Name ? {} : { ...this.lhs.names };\n        return addExprNames(names, this.rhs);\n    }\n}\nclass AssignOp extends Assign {\n    constructor(lhs, op, rhs, sideEffects) {\n        super(lhs, rhs, sideEffects);\n        this.op = op;\n    }\n    render({ _n }) {\n        return `${this.lhs} ${this.op}= ${this.rhs};` + _n;\n    }\n}\nclass Label extends Node {\n    constructor(label) {\n        super();\n        this.label = label;\n        this.names = {};\n    }\n    render({ _n }) {\n        return `${this.label}:` + _n;\n    }\n}\nclass Break extends Node {\n    constructor(label) {\n        super();\n        this.label = label;\n        this.names = {};\n    }\n    render({ _n }) {\n        const label = this.label ? ` ${this.label}` : \"\";\n        return `break${label};` + _n;\n    }\n}\nclass Throw extends Node {\n    constructor(error) {\n        super();\n        this.error = error;\n    }\n    render({ _n }) {\n        return `throw ${this.error};` + _n;\n    }\n    get names() {\n        return this.error.names;\n    }\n}\nclass AnyCode extends Node {\n    constructor(code) {\n        super();\n        this.code = code;\n    }\n    render({ _n }) {\n        return `${this.code};` + _n;\n    }\n    optimizeNodes() {\n        return `${this.code}` ? this : undefined;\n    }\n    optimizeNames(names, constants) {\n        this.code = optimizeExpr(this.code, names, constants);\n        return this;\n    }\n    get names() {\n        return this.code instanceof code_1._CodeOrName ? this.code.names : {};\n    }\n}\nclass ParentNode extends Node {\n    constructor(nodes = []) {\n        super();\n        this.nodes = nodes;\n    }\n    render(opts) {\n        return this.nodes.reduce((code, n) => code + n.render(opts), \"\");\n    }\n    optimizeNodes() {\n        const { nodes } = this;\n        let i = nodes.length;\n        while (i--) {\n            const n = nodes[i].optimizeNodes();\n            if (Array.isArray(n))\n                nodes.splice(i, 1, ...n);\n            else if (n)\n                nodes[i] = n;\n            else\n                nodes.splice(i, 1);\n        }\n        return nodes.length > 0 ? this : undefined;\n    }\n    optimizeNames(names, constants) {\n        const { nodes } = this;\n        let i = nodes.length;\n        while (i--) {\n            // iterating backwards improves 1-pass optimization\n            const n = nodes[i];\n            if (n.optimizeNames(names, constants))\n                continue;\n            subtractNames(names, n.names);\n            nodes.splice(i, 1);\n        }\n        return nodes.length > 0 ? this : undefined;\n    }\n    get names() {\n        return this.nodes.reduce((names, n) => addNames(names, n.names), {});\n    }\n}\nclass BlockNode extends ParentNode {\n    render(opts) {\n        return \"{\" + opts._n + super.render(opts) + \"}\" + opts._n;\n    }\n}\nclass Root extends ParentNode {\n}\nclass Else extends BlockNode {\n}\nElse.kind = \"else\";\nclass If extends BlockNode {\n    constructor(condition, nodes) {\n        super(nodes);\n        this.condition = condition;\n    }\n    render(opts) {\n        let code = `if(${this.condition})` + super.render(opts);\n        if (this.else)\n            code += \"else \" + this.else.render(opts);\n        return code;\n    }\n    optimizeNodes() {\n        super.optimizeNodes();\n        const cond = this.condition;\n        if (cond === true)\n            return this.nodes; // else is ignored here\n        let e = this.else;\n        if (e) {\n            const ns = e.optimizeNodes();\n            e = this.else = Array.isArray(ns) ? new Else(ns) : ns;\n        }\n        if (e) {\n            if (cond === false)\n                return e instanceof If ? e : e.nodes;\n            if (this.nodes.length)\n                return this;\n            return new If(not(cond), e instanceof If ? [e] : e.nodes);\n        }\n        if (cond === false || !this.nodes.length)\n            return undefined;\n        return this;\n    }\n    optimizeNames(names, constants) {\n        var _a;\n        this.else = (_a = this.else) === null || _a === void 0 ? void 0 : _a.optimizeNames(names, constants);\n        if (!(super.optimizeNames(names, constants) || this.else))\n            return;\n        this.condition = optimizeExpr(this.condition, names, constants);\n        return this;\n    }\n    get names() {\n        const names = super.names;\n        addExprNames(names, this.condition);\n        if (this.else)\n            addNames(names, this.else.names);\n        return names;\n    }\n}\nIf.kind = \"if\";\nclass For extends BlockNode {\n}\nFor.kind = \"for\";\nclass ForLoop extends For {\n    constructor(iteration) {\n        super();\n        this.iteration = iteration;\n    }\n    render(opts) {\n        return `for(${this.iteration})` + super.render(opts);\n    }\n    optimizeNames(names, constants) {\n        if (!super.optimizeNames(names, constants))\n            return;\n        this.iteration = optimizeExpr(this.iteration, names, constants);\n        return this;\n    }\n    get names() {\n        return addNames(super.names, this.iteration.names);\n    }\n}\nclass ForRange extends For {\n    constructor(varKind, name, from, to) {\n        super();\n        this.varKind = varKind;\n        this.name = name;\n        this.from = from;\n        this.to = to;\n    }\n    render(opts) {\n        const varKind = opts.es5 ? scope_1.varKinds.var : this.varKind;\n        const { name, from, to } = this;\n        return `for(${varKind} ${name}=${from}; ${name}<${to}; ${name}++)` + super.render(opts);\n    }\n    get names() {\n        const names = addExprNames(super.names, this.from);\n        return addExprNames(names, this.to);\n    }\n}\nclass ForIter extends For {\n    constructor(loop, varKind, name, iterable) {\n        super();\n        this.loop = loop;\n        this.varKind = varKind;\n        this.name = name;\n        this.iterable = iterable;\n    }\n    render(opts) {\n        return `for(${this.varKind} ${this.name} ${this.loop} ${this.iterable})` + super.render(opts);\n    }\n    optimizeNames(names, constants) {\n        if (!super.optimizeNames(names, constants))\n            return;\n        this.iterable = optimizeExpr(this.iterable, names, constants);\n        return this;\n    }\n    get names() {\n        return addNames(super.names, this.iterable.names);\n    }\n}\nclass Func extends BlockNode {\n    constructor(name, args, async) {\n        super();\n        this.name = name;\n        this.args = args;\n        this.async = async;\n    }\n    render(opts) {\n        const _async = this.async ? \"async \" : \"\";\n        return `${_async}function ${this.name}(${this.args})` + super.render(opts);\n    }\n}\nFunc.kind = \"func\";\nclass Return extends ParentNode {\n    render(opts) {\n        return \"return \" + super.render(opts);\n    }\n}\nReturn.kind = \"return\";\nclass Try extends BlockNode {\n    render(opts) {\n        let code = \"try\" + super.render(opts);\n        if (this.catch)\n            code += this.catch.render(opts);\n        if (this.finally)\n            code += this.finally.render(opts);\n        return code;\n    }\n    optimizeNodes() {\n        var _a, _b;\n        super.optimizeNodes();\n        (_a = this.catch) === null || _a === void 0 ? void 0 : _a.optimizeNodes();\n        (_b = this.finally) === null || _b === void 0 ? void 0 : _b.optimizeNodes();\n        return this;\n    }\n    optimizeNames(names, constants) {\n        var _a, _b;\n        super.optimizeNames(names, constants);\n        (_a = this.catch) === null || _a === void 0 ? void 0 : _a.optimizeNames(names, constants);\n        (_b = this.finally) === null || _b === void 0 ? void 0 : _b.optimizeNames(names, constants);\n        return this;\n    }\n    get names() {\n        const names = super.names;\n        if (this.catch)\n            addNames(names, this.catch.names);\n        if (this.finally)\n            addNames(names, this.finally.names);\n        return names;\n    }\n}\nclass Catch extends BlockNode {\n    constructor(error) {\n        super();\n        this.error = error;\n    }\n    render(opts) {\n        return `catch(${this.error})` + super.render(opts);\n    }\n}\nCatch.kind = \"catch\";\nclass Finally extends BlockNode {\n    render(opts) {\n        return \"finally\" + super.render(opts);\n    }\n}\nFinally.kind = \"finally\";\nclass CodeGen {\n    constructor(extScope, opts = {}) {\n        this._values = {};\n        this._blockStarts = [];\n        this._constants = {};\n        this.opts = { ...opts, _n: opts.lines ? \"\\n\" : \"\" };\n        this._extScope = extScope;\n        this._scope = new scope_1.Scope({ parent: extScope });\n        this._nodes = [new Root()];\n    }\n    toString() {\n        return this._root.render(this.opts);\n    }\n    // returns unique name in the internal scope\n    name(prefix) {\n        return this._scope.name(prefix);\n    }\n    // reserves unique name in the external scope\n    scopeName(prefix) {\n        return this._extScope.name(prefix);\n    }\n    // reserves unique name in the external scope and assigns value to it\n    scopeValue(prefixOrName, value) {\n        const name = this._extScope.value(prefixOrName, value);\n        const vs = this._values[name.prefix] || (this._values[name.prefix] = new Set());\n        vs.add(name);\n        return name;\n    }\n    getScopeValue(prefix, keyOrRef) {\n        return this._extScope.getValue(prefix, keyOrRef);\n    }\n    // return code that assigns values in the external scope to the names that are used internally\n    // (same names that were returned by gen.scopeName or gen.scopeValue)\n    scopeRefs(scopeName) {\n        return this._extScope.scopeRefs(scopeName, this._values);\n    }\n    scopeCode() {\n        return this._extScope.scopeCode(this._values);\n    }\n    _def(varKind, nameOrPrefix, rhs, constant) {\n        const name = this._scope.toName(nameOrPrefix);\n        if (rhs !== undefined && constant)\n            this._constants[name.str] = rhs;\n        this._leafNode(new Def(varKind, name, rhs));\n        return name;\n    }\n    // `const` declaration (`var` in es5 mode)\n    const(nameOrPrefix, rhs, _constant) {\n        return this._def(scope_1.varKinds.const, nameOrPrefix, rhs, _constant);\n    }\n    // `let` declaration with optional assignment (`var` in es5 mode)\n    let(nameOrPrefix, rhs, _constant) {\n        return this._def(scope_1.varKinds.let, nameOrPrefix, rhs, _constant);\n    }\n    // `var` declaration with optional assignment\n    var(nameOrPrefix, rhs, _constant) {\n        return this._def(scope_1.varKinds.var, nameOrPrefix, rhs, _constant);\n    }\n    // assignment code\n    assign(lhs, rhs, sideEffects) {\n        return this._leafNode(new Assign(lhs, rhs, sideEffects));\n    }\n    // `+=` code\n    add(lhs, rhs) {\n        return this._leafNode(new AssignOp(lhs, exports.operators.ADD, rhs));\n    }\n    // appends passed SafeExpr to code or executes Block\n    code(c) {\n        if (typeof c == \"function\")\n            c();\n        else if (c !== code_1.nil)\n            this._leafNode(new AnyCode(c));\n        return this;\n    }\n    // returns code for object literal for the passed argument list of key-value pairs\n    object(...keyValues) {\n        const code = [\"{\"];\n        for (const [key, value] of keyValues) {\n            if (code.length > 1)\n                code.push(\",\");\n            code.push(key);\n            if (key !== value || this.opts.es5) {\n                code.push(\":\");\n                (0, code_1.addCodeArg)(code, value);\n            }\n        }\n        code.push(\"}\");\n        return new code_1._Code(code);\n    }\n    // `if` clause (or statement if `thenBody` and, optionally, `elseBody` are passed)\n    if(condition, thenBody, elseBody) {\n        this._blockNode(new If(condition));\n        if (thenBody && elseBody) {\n            this.code(thenBody).else().code(elseBody).endIf();\n        }\n        else if (thenBody) {\n            this.code(thenBody).endIf();\n        }\n        else if (elseBody) {\n            throw new Error('CodeGen: \"else\" body without \"then\" body');\n        }\n        return this;\n    }\n    // `else if` clause - invalid without `if` or after `else` clauses\n    elseIf(condition) {\n        return this._elseNode(new If(condition));\n    }\n    // `else` clause - only valid after `if` or `else if` clauses\n    else() {\n        return this._elseNode(new Else());\n    }\n    // end `if` statement (needed if gen.if was used only with condition)\n    endIf() {\n        return this._endBlockNode(If, Else);\n    }\n    _for(node, forBody) {\n        this._blockNode(node);\n        if (forBody)\n            this.code(forBody).endFor();\n        return this;\n    }\n    // a generic `for` clause (or statement if `forBody` is passed)\n    for(iteration, forBody) {\n        return this._for(new ForLoop(iteration), forBody);\n    }\n    // `for` statement for a range of values\n    forRange(nameOrPrefix, from, to, forBody, varKind = this.opts.es5 ? scope_1.varKinds.var : scope_1.varKinds.let) {\n        const name = this._scope.toName(nameOrPrefix);\n        return this._for(new ForRange(varKind, name, from, to), () => forBody(name));\n    }\n    // `for-of` statement (in es5 mode replace with a normal for loop)\n    forOf(nameOrPrefix, iterable, forBody, varKind = scope_1.varKinds.const) {\n        const name = this._scope.toName(nameOrPrefix);\n        if (this.opts.es5) {\n            const arr = iterable instanceof code_1.Name ? iterable : this.var(\"_arr\", iterable);\n            return this.forRange(\"_i\", 0, (0, code_1._) `${arr}.length`, (i) => {\n                this.var(name, (0, code_1._) `${arr}[${i}]`);\n                forBody(name);\n            });\n        }\n        return this._for(new ForIter(\"of\", varKind, name, iterable), () => forBody(name));\n    }\n    // `for-in` statement.\n    // With option `ownProperties` replaced with a `for-of` loop for object keys\n    forIn(nameOrPrefix, obj, forBody, varKind = this.opts.es5 ? scope_1.varKinds.var : scope_1.varKinds.const) {\n        if (this.opts.ownProperties) {\n            return this.forOf(nameOrPrefix, (0, code_1._) `Object.keys(${obj})`, forBody);\n        }\n        const name = this._scope.toName(nameOrPrefix);\n        return this._for(new ForIter(\"in\", varKind, name, obj), () => forBody(name));\n    }\n    // end `for` loop\n    endFor() {\n        return this._endBlockNode(For);\n    }\n    // `label` statement\n    label(label) {\n        return this._leafNode(new Label(label));\n    }\n    // `break` statement\n    break(label) {\n        return this._leafNode(new Break(label));\n    }\n    // `return` statement\n    return(value) {\n        const node = new Return();\n        this._blockNode(node);\n        this.code(value);\n        if (node.nodes.length !== 1)\n            throw new Error('CodeGen: \"return\" should have one node');\n        return this._endBlockNode(Return);\n    }\n    // `try` statement\n    try(tryBody, catchCode, finallyCode) {\n        if (!catchCode && !finallyCode)\n            throw new Error('CodeGen: \"try\" without \"catch\" and \"finally\"');\n        const node = new Try();\n        this._blockNode(node);\n        this.code(tryBody);\n        if (catchCode) {\n            const error = this.name(\"e\");\n            this._currNode = node.catch = new Catch(error);\n            catchCode(error);\n        }\n        if (finallyCode) {\n            this._currNode = node.finally = new Finally();\n            this.code(finallyCode);\n        }\n        return this._endBlockNode(Catch, Finally);\n    }\n    // `throw` statement\n    throw(error) {\n        return this._leafNode(new Throw(error));\n    }\n    // start self-balancing block\n    block(body, nodeCount) {\n        this._blockStarts.push(this._nodes.length);\n        if (body)\n            this.code(body).endBlock(nodeCount);\n        return this;\n    }\n    // end the current self-balancing block\n    endBlock(nodeCount) {\n        const len = this._blockStarts.pop();\n        if (len === undefined)\n            throw new Error(\"CodeGen: not in self-balancing block\");\n        const toClose = this._nodes.length - len;\n        if (toClose < 0 || (nodeCount !== undefined && toClose !== nodeCount)) {\n            throw new Error(`CodeGen: wrong number of nodes: ${toClose} vs ${nodeCount} expected`);\n        }\n        this._nodes.length = len;\n        return this;\n    }\n    // `function` heading (or definition if funcBody is passed)\n    func(name, args = code_1.nil, async, funcBody) {\n        this._blockNode(new Func(name, args, async));\n        if (funcBody)\n            this.code(funcBody).endFunc();\n        return this;\n    }\n    // end function definition\n    endFunc() {\n        return this._endBlockNode(Func);\n    }\n    optimize(n = 1) {\n        while (n-- > 0) {\n            this._root.optimizeNodes();\n            this._root.optimizeNames(this._root.names, this._constants);\n        }\n    }\n    _leafNode(node) {\n        this._currNode.nodes.push(node);\n        return this;\n    }\n    _blockNode(node) {\n        this._currNode.nodes.push(node);\n        this._nodes.push(node);\n    }\n    _endBlockNode(N1, N2) {\n        const n = this._currNode;\n        if (n instanceof N1 || (N2 && n instanceof N2)) {\n            this._nodes.pop();\n            return this;\n        }\n        throw new Error(`CodeGen: not in block \"${N2 ? `${N1.kind}/${N2.kind}` : N1.kind}\"`);\n    }\n    _elseNode(node) {\n        const n = this._currNode;\n        if (!(n instanceof If)) {\n            throw new Error('CodeGen: \"else\" without \"if\"');\n        }\n        this._currNode = n.else = node;\n        return this;\n    }\n    get _root() {\n        return this._nodes[0];\n    }\n    get _currNode() {\n        const ns = this._nodes;\n        return ns[ns.length - 1];\n    }\n    set _currNode(node) {\n        const ns = this._nodes;\n        ns[ns.length - 1] = node;\n    }\n}\nexports.CodeGen = CodeGen;\nfunction addNames(names, from) {\n    for (const n in from)\n        names[n] = (names[n] || 0) + (from[n] || 0);\n    return names;\n}\nfunction addExprNames(names, from) {\n    return from instanceof code_1._CodeOrName ? addNames(names, from.names) : names;\n}\nfunction optimizeExpr(expr, names, constants) {\n    if (expr instanceof code_1.Name)\n        return replaceName(expr);\n    if (!canOptimize(expr))\n        return expr;\n    return new code_1._Code(expr._items.reduce((items, c) => {\n        if (c instanceof code_1.Name)\n            c = replaceName(c);\n        if (c instanceof code_1._Code)\n            items.push(...c._items);\n        else\n            items.push(c);\n        return items;\n    }, []));\n    function replaceName(n) {\n        const c = constants[n.str];\n        if (c === undefined || names[n.str] !== 1)\n            return n;\n        delete names[n.str];\n        return c;\n    }\n    function canOptimize(e) {\n        return (e instanceof code_1._Code &&\n            e._items.some((c) => c instanceof code_1.Name && names[c.str] === 1 && constants[c.str] !== undefined));\n    }\n}\nfunction subtractNames(names, from) {\n    for (const n in from)\n        names[n] = (names[n] || 0) - (from[n] || 0);\n}\nfunction not(x) {\n    return typeof x == \"boolean\" || typeof x == \"number\" || x === null ? !x : (0, code_1._) `!${par(x)}`;\n}\nexports.not = not;\nconst andCode = mappend(exports.operators.AND);\n// boolean AND (&&) expression with the passed arguments\nfunction and(...args) {\n    return args.reduce(andCode);\n}\nexports.and = and;\nconst orCode = mappend(exports.operators.OR);\n// boolean OR (||) expression with the passed arguments\nfunction or(...args) {\n    return args.reduce(orCode);\n}\nexports.or = or;\nfunction mappend(op) {\n    return (x, y) => (x === code_1.nil ? y : y === code_1.nil ? x : (0, code_1._) `${par(x)} ${op} ${par(y)}`);\n}\nfunction par(x) {\n    return x instanceof code_1.Name ? x : (0, code_1._) `(${x})`;\n}\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ValueScope = exports.ValueScopeName = exports.Scope = exports.varKinds = exports.UsedValueState = void 0;\nconst code_1 = require(\"./code\");\nclass ValueError extends Error {\n    constructor(name) {\n        super(`CodeGen: \"code\" for ${name} not defined`);\n        this.value = name.value;\n    }\n}\nvar UsedValueState;\n(function (UsedValueState) {\n    UsedValueState[UsedValueState[\"Started\"] = 0] = \"Started\";\n    UsedValueState[UsedValueState[\"Completed\"] = 1] = \"Completed\";\n})(UsedValueState = exports.UsedValueState || (exports.UsedValueState = {}));\nexports.varKinds = {\n    const: new code_1.Name(\"const\"),\n    let: new code_1.Name(\"let\"),\n    var: new code_1.Name(\"var\"),\n};\nclass Scope {\n    constructor({ prefixes, parent } = {}) {\n        this._names = {};\n        this._prefixes = prefixes;\n        this._parent = parent;\n    }\n    toName(nameOrPrefix) {\n        return nameOrPrefix instanceof code_1.Name ? nameOrPrefix : this.name(nameOrPrefix);\n    }\n    name(prefix) {\n        return new code_1.Name(this._newName(prefix));\n    }\n    _newName(prefix) {\n        const ng = this._names[prefix] || this._nameGroup(prefix);\n        return `${prefix}${ng.index++}`;\n    }\n    _nameGroup(prefix) {\n        var _a, _b;\n        if (((_b = (_a = this._parent) === null || _a === void 0 ? void 0 : _a._prefixes) === null || _b === void 0 ? void 0 : _b.has(prefix)) || (this._prefixes && !this._prefixes.has(prefix))) {\n            throw new Error(`CodeGen: prefix \"${prefix}\" is not allowed in this scope`);\n        }\n        return (this._names[prefix] = { prefix, index: 0 });\n    }\n}\nexports.Scope = Scope;\nclass ValueScopeName extends code_1.Name {\n    constructor(prefix, nameStr) {\n        super(nameStr);\n        this.prefix = prefix;\n    }\n    setValue(value, { property, itemIndex }) {\n        this.value = value;\n        this.scopePath = (0, code_1._) `.${new code_1.Name(property)}[${itemIndex}]`;\n    }\n}\nexports.ValueScopeName = ValueScopeName;\nconst line = (0, code_1._) `\\n`;\nclass ValueScope extends Scope {\n    constructor(opts) {\n        super(opts);\n        this._values = {};\n        this._scope = opts.scope;\n        this.opts = { ...opts, _n: opts.lines ? line : code_1.nil };\n    }\n    get() {\n        return this._scope;\n    }\n    name(prefix) {\n        return new ValueScopeName(prefix, this._newName(prefix));\n    }\n    value(nameOrPrefix, value) {\n        var _a;\n        if (value.ref === undefined)\n            throw new Error(\"CodeGen: ref must be passed in value\");\n        const name = this.toName(nameOrPrefix);\n        const { prefix } = name;\n        const valueKey = (_a = value.key) !== null && _a !== void 0 ? _a : value.ref;\n        let vs = this._values[prefix];\n        if (vs) {\n            const _name = vs.get(valueKey);\n            if (_name)\n                return _name;\n        }\n        else {\n            vs = this._values[prefix] = new Map();\n        }\n        vs.set(valueKey, name);\n        const s = this._scope[prefix] || (this._scope[prefix] = []);\n        const itemIndex = s.length;\n        s[itemIndex] = value.ref;\n        name.setValue(value, { property: prefix, itemIndex });\n        return name;\n    }\n    getValue(prefix, keyOrRef) {\n        const vs = this._values[prefix];\n        if (!vs)\n            return;\n        return vs.get(keyOrRef);\n    }\n    scopeRefs(scopeName, values = this._values) {\n        return this._reduceValues(values, (name) => {\n            if (name.scopePath === undefined)\n                throw new Error(`CodeGen: name \"${name}\" has no value`);\n            return (0, code_1._) `${scopeName}${name.scopePath}`;\n        });\n    }\n    scopeCode(values = this._values, usedValues, getCode) {\n        return this._reduceValues(values, (name) => {\n            if (name.value === undefined)\n                throw new Error(`CodeGen: name \"${name}\" has no value`);\n            return name.value.code;\n        }, usedValues, getCode);\n    }\n    _reduceValues(values, valueCode, usedValues = {}, getCode) {\n        let code = code_1.nil;\n        for (const prefix in values) {\n            const vs = values[prefix];\n            if (!vs)\n                continue;\n            const nameSet = (usedValues[prefix] = usedValues[prefix] || new Map());\n            vs.forEach((name) => {\n                if (nameSet.has(name))\n                    return;\n                nameSet.set(name, UsedValueState.Started);\n                let c = valueCode(name);\n                if (c) {\n                    const def = this.opts.es5 ? exports.varKinds.var : exports.varKinds.const;\n                    code = (0, code_1._) `${code}${def} ${name} = ${c};${this.opts._n}`;\n                }\n                else if ((c = getCode === null || getCode === void 0 ? void 0 : getCode(name))) {\n                    code = (0, code_1._) `${code}${c}${this.opts._n}`;\n                }\n                else {\n                    throw new ValueError(name);\n                }\n                nameSet.set(name, UsedValueState.Completed);\n            });\n        }\n        return code;\n    }\n}\nexports.ValueScope = ValueScope;\n//# sourceMappingURL=scope.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.extendErrors = exports.resetErrorsCount = exports.reportExtraError = exports.reportError = exports.keyword$DataError = exports.keywordError = void 0;\nconst codegen_1 = require(\"./codegen\");\nconst util_1 = require(\"./util\");\nconst names_1 = require(\"./names\");\nexports.keywordError = {\n    message: ({ keyword }) => (0, codegen_1.str) `must pass \"${keyword}\" keyword validation`,\n};\nexports.keyword$DataError = {\n    message: ({ keyword, schemaType }) => schemaType\n        ? (0, codegen_1.str) `\"${keyword}\" keyword must be ${schemaType} ($data)`\n        : (0, codegen_1.str) `\"${keyword}\" keyword is invalid ($data)`,\n};\nfunction reportError(cxt, error = exports.keywordError, errorPaths, overrideAllErrors) {\n    const { it } = cxt;\n    const { gen, compositeRule, allErrors } = it;\n    const errObj = errorObjectCode(cxt, error, errorPaths);\n    if (overrideAllErrors !== null && overrideAllErrors !== void 0 ? overrideAllErrors : (compositeRule || allErrors)) {\n        addError(gen, errObj);\n    }\n    else {\n        returnErrors(it, (0, codegen_1._) `[${errObj}]`);\n    }\n}\nexports.reportError = reportError;\nfunction reportExtraError(cxt, error = exports.keywordError, errorPaths) {\n    const { it } = cxt;\n    const { gen, compositeRule, allErrors } = it;\n    const errObj = errorObjectCode(cxt, error, errorPaths);\n    addError(gen, errObj);\n    if (!(compositeRule || allErrors)) {\n        returnErrors(it, names_1.default.vErrors);\n    }\n}\nexports.reportExtraError = reportExtraError;\nfunction resetErrorsCount(gen, errsCount) {\n    gen.assign(names_1.default.errors, errsCount);\n    gen.if((0, codegen_1._) `${names_1.default.vErrors} !== null`, () => gen.if(errsCount, () => gen.assign((0, codegen_1._) `${names_1.default.vErrors}.length`, errsCount), () => gen.assign(names_1.default.vErrors, null)));\n}\nexports.resetErrorsCount = resetErrorsCount;\nfunction extendErrors({ gen, keyword, schemaValue, data, errsCount, it, }) {\n    /* istanbul ignore if */\n    if (errsCount === undefined)\n        throw new Error(\"ajv implementation error\");\n    const err = gen.name(\"err\");\n    gen.forRange(\"i\", errsCount, names_1.default.errors, (i) => {\n        gen.const(err, (0, codegen_1._) `${names_1.default.vErrors}[${i}]`);\n        gen.if((0, codegen_1._) `${err}.instancePath === undefined`, () => gen.assign((0, codegen_1._) `${err}.instancePath`, (0, codegen_1.strConcat)(names_1.default.instancePath, it.errorPath)));\n        gen.assign((0, codegen_1._) `${err}.schemaPath`, (0, codegen_1.str) `${it.errSchemaPath}/${keyword}`);\n        if (it.opts.verbose) {\n            gen.assign((0, codegen_1._) `${err}.schema`, schemaValue);\n            gen.assign((0, codegen_1._) `${err}.data`, data);\n        }\n    });\n}\nexports.extendErrors = extendErrors;\nfunction addError(gen, errObj) {\n    const err = gen.const(\"err\", errObj);\n    gen.if((0, codegen_1._) `${names_1.default.vErrors} === null`, () => gen.assign(names_1.default.vErrors, (0, codegen_1._) `[${err}]`), (0, codegen_1._) `${names_1.default.vErrors}.push(${err})`);\n    gen.code((0, codegen_1._) `${names_1.default.errors}++`);\n}\nfunction returnErrors(it, errs) {\n    const { gen, validateName, schemaEnv } = it;\n    if (schemaEnv.$async) {\n        gen.throw((0, codegen_1._) `new ${it.ValidationError}(${errs})`);\n    }\n    else {\n        gen.assign((0, codegen_1._) `${validateName}.errors`, errs);\n        gen.return(false);\n    }\n}\nconst E = {\n    keyword: new codegen_1.Name(\"keyword\"),\n    schemaPath: new codegen_1.Name(\"schemaPath\"),\n    params: new codegen_1.Name(\"params\"),\n    propertyName: new codegen_1.Name(\"propertyName\"),\n    message: new codegen_1.Name(\"message\"),\n    schema: new codegen_1.Name(\"schema\"),\n    parentSchema: new codegen_1.Name(\"parentSchema\"),\n};\nfunction errorObjectCode(cxt, error, errorPaths) {\n    const { createErrors } = cxt.it;\n    if (createErrors === false)\n        return (0, codegen_1._) `{}`;\n    return errorObject(cxt, error, errorPaths);\n}\nfunction errorObject(cxt, error, errorPaths = {}) {\n    const { gen, it } = cxt;\n    const keyValues = [\n        errorInstancePath(it, errorPaths),\n        errorSchemaPath(cxt, errorPaths),\n    ];\n    extraErrorProps(cxt, error, keyValues);\n    return gen.object(...keyValues);\n}\nfunction errorInstancePath({ errorPath }, { instancePath }) {\n    const instPath = instancePath\n        ? (0, codegen_1.str) `${errorPath}${(0, util_1.getErrorPath)(instancePath, util_1.Type.Str)}`\n        : errorPath;\n    return [names_1.default.instancePath, (0, codegen_1.strConcat)(names_1.default.instancePath, instPath)];\n}\nfunction errorSchemaPath({ keyword, it: { errSchemaPath } }, { schemaPath, parentSchema }) {\n    let schPath = parentSchema ? errSchemaPath : (0, codegen_1.str) `${errSchemaPath}/${keyword}`;\n    if (schemaPath) {\n        schPath = (0, codegen_1.str) `${schPath}${(0, util_1.getErrorPath)(schemaPath, util_1.Type.Str)}`;\n    }\n    return [E.schemaPath, schPath];\n}\nfunction extraErrorProps(cxt, { params, message }, keyValues) {\n    const { keyword, data, schemaValue, it } = cxt;\n    const { opts, propertyName, topSchemaRef, schemaPath } = it;\n    keyValues.push([E.keyword, keyword], [E.params, typeof params == \"function\" ? params(cxt) : params || (0, codegen_1._) `{}`]);\n    if (opts.messages) {\n        keyValues.push([E.message, typeof message == \"function\" ? message(cxt) : message]);\n    }\n    if (opts.verbose) {\n        keyValues.push([E.schema, schemaValue], [E.parentSchema, (0, codegen_1._) `${topSchemaRef}${schemaPath}`], [names_1.default.data, data]);\n    }\n    if (propertyName)\n        keyValues.push([E.propertyName, propertyName]);\n}\n//# sourceMappingURL=errors.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.resolveSchema = exports.getCompilingSchema = exports.resolveRef = exports.compileSchema = exports.SchemaEnv = void 0;\nconst codegen_1 = require(\"./codegen\");\nconst validation_error_1 = require(\"../runtime/validation_error\");\nconst names_1 = require(\"./names\");\nconst resolve_1 = require(\"./resolve\");\nconst util_1 = require(\"./util\");\nconst validate_1 = require(\"./validate\");\nclass SchemaEnv {\n    constructor(env) {\n        var _a;\n        this.refs = {};\n        this.dynamicAnchors = {};\n        let schema;\n        if (typeof env.schema == \"object\")\n            schema = env.schema;\n        this.schema = env.schema;\n        this.schemaId = env.schemaId;\n        this.root = env.root || this;\n        this.baseId = (_a = env.baseId) !== null && _a !== void 0 ? _a : (0, resolve_1.normalizeId)(schema === null || schema === void 0 ? void 0 : schema[env.schemaId || \"$id\"]);\n        this.schemaPath = env.schemaPath;\n        this.localRefs = env.localRefs;\n        this.meta = env.meta;\n        this.$async = schema === null || schema === void 0 ? void 0 : schema.$async;\n        this.refs = {};\n    }\n}\nexports.SchemaEnv = SchemaEnv;\n// let codeSize = 0\n// let nodeCount = 0\n// Compiles schema in SchemaEnv\nfunction compileSchema(sch) {\n    // TODO refactor - remove compilations\n    const _sch = getCompilingSchema.call(this, sch);\n    if (_sch)\n        return _sch;\n    const rootId = (0, resolve_1.getFullPath)(this.opts.uriResolver, sch.root.baseId); // TODO if getFullPath removed 1 tests fails\n    const { es5, lines } = this.opts.code;\n    const { ownProperties } = this.opts;\n    const gen = new codegen_1.CodeGen(this.scope, { es5, lines, ownProperties });\n    let _ValidationError;\n    if (sch.$async) {\n        _ValidationError = gen.scopeValue(\"Error\", {\n            ref: validation_error_1.default,\n            code: (0, codegen_1._) `require(\"ajv/dist/runtime/validation_error\").default`,\n        });\n    }\n    const validateName = gen.scopeName(\"validate\");\n    sch.validateName = validateName;\n    const schemaCxt = {\n        gen,\n        allErrors: this.opts.allErrors,\n        data: names_1.default.data,\n        parentData: names_1.default.parentData,\n        parentDataProperty: names_1.default.parentDataProperty,\n        dataNames: [names_1.default.data],\n        dataPathArr: [codegen_1.nil],\n        dataLevel: 0,\n        dataTypes: [],\n        definedProperties: new Set(),\n        topSchemaRef: gen.scopeValue(\"schema\", this.opts.code.source === true\n            ? { ref: sch.schema, code: (0, codegen_1.stringify)(sch.schema) }\n            : { ref: sch.schema }),\n        validateName,\n        ValidationError: _ValidationError,\n        schema: sch.schema,\n        schemaEnv: sch,\n        rootId,\n        baseId: sch.baseId || rootId,\n        schemaPath: codegen_1.nil,\n        errSchemaPath: sch.schemaPath || (this.opts.jtd ? \"\" : \"#\"),\n        errorPath: (0, codegen_1._) `\"\"`,\n        opts: this.opts,\n        self: this,\n    };\n    let sourceCode;\n    try {\n        this._compilations.add(sch);\n        (0, validate_1.validateFunctionCode)(schemaCxt);\n        gen.optimize(this.opts.code.optimize);\n        // gen.optimize(1)\n        const validateCode = gen.toString();\n        sourceCode = `${gen.scopeRefs(names_1.default.scope)}return ${validateCode}`;\n        // console.log((codeSize += sourceCode.length), (nodeCount += gen.nodeCount))\n        if (this.opts.code.process)\n            sourceCode = this.opts.code.process(sourceCode, sch);\n        // console.log(\"\\n\\n\\n *** \\n\", sourceCode)\n        const makeValidate = new Function(`${names_1.default.self}`, `${names_1.default.scope}`, sourceCode);\n        const validate = makeValidate(this, this.scope.get());\n        this.scope.value(validateName, { ref: validate });\n        validate.errors = null;\n        validate.schema = sch.schema;\n        validate.schemaEnv = sch;\n        if (sch.$async)\n            validate.$async = true;\n        if (this.opts.code.source === true) {\n            validate.source = { validateName, validateCode, scopeValues: gen._values };\n        }\n        if (this.opts.unevaluated) {\n            const { props, items } = schemaCxt;\n            validate.evaluated = {\n                props: props instanceof codegen_1.Name ? undefined : props,\n                items: items instanceof codegen_1.Name ? undefined : items,\n                dynamicProps: props instanceof codegen_1.Name,\n                dynamicItems: items instanceof codegen_1.Name,\n            };\n            if (validate.source)\n                validate.source.evaluated = (0, codegen_1.stringify)(validate.evaluated);\n        }\n        sch.validate = validate;\n        return sch;\n    }\n    catch (e) {\n        delete sch.validate;\n        delete sch.validateName;\n        if (sourceCode)\n            this.logger.error(\"Error compiling schema, function code:\", sourceCode);\n        // console.log(\"\\n\\n\\n *** \\n\", sourceCode, this.opts)\n        throw e;\n    }\n    finally {\n        this._compilations.delete(sch);\n    }\n}\nexports.compileSchema = compileSchema;\nfunction resolveRef(root, baseId, ref) {\n    var _a;\n    ref = (0, resolve_1.resolveUrl)(this.opts.uriResolver, baseId, ref);\n    const schOrFunc = root.refs[ref];\n    if (schOrFunc)\n        return schOrFunc;\n    let _sch = resolve.call(this, root, ref);\n    if (_sch === undefined) {\n        const schema = (_a = root.localRefs) === null || _a === void 0 ? void 0 : _a[ref]; // TODO maybe localRefs should hold SchemaEnv\n        const { schemaId } = this.opts;\n        if (schema)\n            _sch = new SchemaEnv({ schema, schemaId, root, baseId });\n    }\n    if (_sch === undefined)\n        return;\n    return (root.refs[ref] = inlineOrCompile.call(this, _sch));\n}\nexports.resolveRef = resolveRef;\nfunction inlineOrCompile(sch) {\n    if ((0, resolve_1.inlineRef)(sch.schema, this.opts.inlineRefs))\n        return sch.schema;\n    return sch.validate ? sch : compileSchema.call(this, sch);\n}\n// Index of schema compilation in the currently compiled list\nfunction getCompilingSchema(schEnv) {\n    for (const sch of this._compilations) {\n        if (sameSchemaEnv(sch, schEnv))\n            return sch;\n    }\n}\nexports.getCompilingSchema = getCompilingSchema;\nfunction sameSchemaEnv(s1, s2) {\n    return s1.schema === s2.schema && s1.root === s2.root && s1.baseId === s2.baseId;\n}\n// resolve and compile the references ($ref)\n// TODO returns AnySchemaObject (if the schema can be inlined) or validation function\nfunction resolve(root, // information about the root schema for the current schema\nref // reference to resolve\n) {\n    let sch;\n    while (typeof (sch = this.refs[ref]) == \"string\")\n        ref = sch;\n    return sch || this.schemas[ref] || resolveSchema.call(this, root, ref);\n}\n// Resolve schema, its root and baseId\nfunction resolveSchema(root, // root object with properties schema, refs TODO below SchemaEnv is assigned to it\nref // reference to resolve\n) {\n    const p = this.opts.uriResolver.parse(ref);\n    const refPath = (0, resolve_1._getFullPath)(this.opts.uriResolver, p);\n    let baseId = (0, resolve_1.getFullPath)(this.opts.uriResolver, root.baseId, undefined);\n    // TODO `Object.keys(root.schema).length > 0` should not be needed - but removing breaks 2 tests\n    if (Object.keys(root.schema).length > 0 && refPath === baseId) {\n        return getJsonPointer.call(this, p, root);\n    }\n    const id = (0, resolve_1.normalizeId)(refPath);\n    const schOrRef = this.refs[id] || this.schemas[id];\n    if (typeof schOrRef == \"string\") {\n        const sch = resolveSchema.call(this, root, schOrRef);\n        if (typeof (sch === null || sch === void 0 ? void 0 : sch.schema) !== \"object\")\n            return;\n        return getJsonPointer.call(this, p, sch);\n    }\n    if (typeof (schOrRef === null || schOrRef === void 0 ? void 0 : schOrRef.schema) !== \"object\")\n        return;\n    if (!schOrRef.validate)\n        compileSchema.call(this, schOrRef);\n    if (id === (0, resolve_1.normalizeId)(ref)) {\n        const { schema } = schOrRef;\n        const { schemaId } = this.opts;\n        const schId = schema[schemaId];\n        if (schId)\n            baseId = (0, resolve_1.resolveUrl)(this.opts.uriResolver, baseId, schId);\n        return new SchemaEnv({ schema, schemaId, root, baseId });\n    }\n    return getJsonPointer.call(this, p, schOrRef);\n}\nexports.resolveSchema = resolveSchema;\nconst PREVENT_SCOPE_CHANGE = new Set([\n    \"properties\",\n    \"patternProperties\",\n    \"enum\",\n    \"dependencies\",\n    \"definitions\",\n]);\nfunction getJsonPointer(parsedRef, { baseId, schema, root }) {\n    var _a;\n    if (((_a = parsedRef.fragment) === null || _a === void 0 ? void 0 : _a[0]) !== \"/\")\n        return;\n    for (const part of parsedRef.fragment.slice(1).split(\"/\")) {\n        if (typeof schema === \"boolean\")\n            return;\n        const partSchema = schema[(0, util_1.unescapeFragment)(part)];\n        if (partSchema === undefined)\n            return;\n        schema = partSchema;\n        // TODO PREVENT_SCOPE_CHANGE could be defined in keyword def?\n        const schId = typeof schema === \"object\" && schema[this.opts.schemaId];\n        if (!PREVENT_SCOPE_CHANGE.has(part) && schId) {\n            baseId = (0, resolve_1.resolveUrl)(this.opts.uriResolver, baseId, schId);\n        }\n    }\n    let env;\n    if (typeof schema != \"boolean\" && schema.$ref && !(0, util_1.schemaHasRulesButRef)(schema, this.RULES)) {\n        const $ref = (0, resolve_1.resolveUrl)(this.opts.uriResolver, baseId, schema.$ref);\n        env = resolveSchema.call(this, root, $ref);\n    }\n    // even though resolution failed we need to return SchemaEnv to throw exception\n    // so that compileAsync loads missing schema.\n    const { schemaId } = this.opts;\n    env = env || new SchemaEnv({ schema, schemaId, root, baseId });\n    if (env.schema !== env.root.schema)\n        return env;\n    return undefined;\n}\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst codegen_1 = require(\"./codegen\");\nconst names = {\n    // validation function arguments\n    data: new codegen_1.Name(\"data\"),\n    // args passed from referencing schema\n    valCxt: new codegen_1.Name(\"valCxt\"),\n    instancePath: new codegen_1.Name(\"instancePath\"),\n    parentData: new codegen_1.Name(\"parentData\"),\n    parentDataProperty: new codegen_1.Name(\"parentDataProperty\"),\n    rootData: new codegen_1.Name(\"rootData\"),\n    dynamicAnchors: new codegen_1.Name(\"dynamicAnchors\"),\n    // function scoped variables\n    vErrors: new codegen_1.Name(\"vErrors\"),\n    errors: new codegen_1.Name(\"errors\"),\n    this: new codegen_1.Name(\"this\"),\n    // \"globals\"\n    self: new codegen_1.Name(\"self\"),\n    scope: new codegen_1.Name(\"scope\"),\n    // JTD serialize/parse name for JSON string and position\n    json: new codegen_1.Name(\"json\"),\n    jsonPos: new codegen_1.Name(\"jsonPos\"),\n    jsonLen: new codegen_1.Name(\"jsonLen\"),\n    jsonPart: new codegen_1.Name(\"jsonPart\"),\n};\nexports.default = names;\n//# sourceMappingURL=names.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst resolve_1 = require(\"./resolve\");\nclass MissingRefError extends Error {\n    constructor(resolver, baseId, ref, msg) {\n        super(msg || `can't resolve reference ${ref} from id ${baseId}`);\n        this.missingRef = (0, resolve_1.resolveUrl)(resolver, baseId, ref);\n        this.missingSchema = (0, resolve_1.normalizeId)((0, resolve_1.getFullPath)(resolver, this.missingRef));\n    }\n}\nexports.default = MissingRefError;\n//# sourceMappingURL=ref_error.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getSchemaRefs = exports.resolveUrl = exports.normalizeId = exports._getFullPath = exports.getFullPath = exports.inlineRef = void 0;\nconst util_1 = require(\"./util\");\nconst equal = require(\"fast-deep-equal\");\nconst traverse = require(\"json-schema-traverse\");\n// TODO refactor to use keyword definitions\nconst SIMPLE_INLINED = new Set([\n    \"type\",\n    \"format\",\n    \"pattern\",\n    \"maxLength\",\n    \"minLength\",\n    \"maxProperties\",\n    \"minProperties\",\n    \"maxItems\",\n    \"minItems\",\n    \"maximum\",\n    \"minimum\",\n    \"uniqueItems\",\n    \"multipleOf\",\n    \"required\",\n    \"enum\",\n    \"const\",\n]);\nfunction inlineRef(schema, limit = true) {\n    if (typeof schema == \"boolean\")\n        return true;\n    if (limit === true)\n        return !hasRef(schema);\n    if (!limit)\n        return false;\n    return countKeys(schema) <= limit;\n}\nexports.inlineRef = inlineRef;\nconst REF_KEYWORDS = new Set([\n    \"$ref\",\n    \"$recursiveRef\",\n    \"$recursiveAnchor\",\n    \"$dynamicRef\",\n    \"$dynamicAnchor\",\n]);\nfunction hasRef(schema) {\n    for (const key in schema) {\n        if (REF_KEYWORDS.has(key))\n            return true;\n        const sch = schema[key];\n        if (Array.isArray(sch) && sch.some(hasRef))\n            return true;\n        if (typeof sch == \"object\" && hasRef(sch))\n            return true;\n    }\n    return false;\n}\nfunction countKeys(schema) {\n    let count = 0;\n    for (const key in schema) {\n        if (key === \"$ref\")\n            return Infinity;\n        count++;\n        if (SIMPLE_INLINED.has(key))\n            continue;\n        if (typeof schema[key] == \"object\") {\n            (0, util_1.eachItem)(schema[key], (sch) => (count += countKeys(sch)));\n        }\n        if (count === Infinity)\n            return Infinity;\n    }\n    return count;\n}\nfunction getFullPath(resolver, id = \"\", normalize) {\n    if (normalize !== false)\n        id = normalizeId(id);\n    const p = resolver.parse(id);\n    return _getFullPath(resolver, p);\n}\nexports.getFullPath = getFullPath;\nfunction _getFullPath(resolver, p) {\n    const serialized = resolver.serialize(p);\n    return serialized.split(\"#\")[0] + \"#\";\n}\nexports._getFullPath = _getFullPath;\nconst TRAILING_SLASH_HASH = /#\\/?$/;\nfunction normalizeId(id) {\n    return id ? id.replace(TRAILING_SLASH_HASH, \"\") : \"\";\n}\nexports.normalizeId = normalizeId;\nfunction resolveUrl(resolver, baseId, id) {\n    id = normalizeId(id);\n    return resolver.resolve(baseId, id);\n}\nexports.resolveUrl = resolveUrl;\nconst ANCHOR = /^[a-z_][-a-z0-9._]*$/i;\nfunction getSchemaRefs(schema, baseId) {\n    if (typeof schema == \"boolean\")\n        return {};\n    const { schemaId, uriResolver } = this.opts;\n    const schId = normalizeId(schema[schemaId] || baseId);\n    const baseIds = { \"\": schId };\n    const pathPrefix = getFullPath(uriResolver, schId, false);\n    const localRefs = {};\n    const schemaRefs = new Set();\n    traverse(schema, { allKeys: true }, (sch, jsonPtr, _, parentJsonPtr) => {\n        if (parentJsonPtr === undefined)\n            return;\n        const fullPath = pathPrefix + jsonPtr;\n        let baseId = baseIds[parentJsonPtr];\n        if (typeof sch[schemaId] == \"string\")\n            baseId = addRef.call(this, sch[schemaId]);\n        addAnchor.call(this, sch.$anchor);\n        addAnchor.call(this, sch.$dynamicAnchor);\n        baseIds[jsonPtr] = baseId;\n        function addRef(ref) {\n            // eslint-disable-next-line @typescript-eslint/unbound-method\n            const _resolve = this.opts.uriResolver.resolve;\n            ref = normalizeId(baseId ? _resolve(baseId, ref) : ref);\n            if (schemaRefs.has(ref))\n                throw ambiguos(ref);\n            schemaRefs.add(ref);\n            let schOrRef = this.refs[ref];\n            if (typeof schOrRef == \"string\")\n                schOrRef = this.refs[schOrRef];\n            if (typeof schOrRef == \"object\") {\n                checkAmbiguosRef(sch, schOrRef.schema, ref);\n            }\n            else if (ref !== normalizeId(fullPath)) {\n                if (ref[0] === \"#\") {\n                    checkAmbiguosRef(sch, localRefs[ref], ref);\n                    localRefs[ref] = sch;\n                }\n                else {\n                    this.refs[ref] = fullPath;\n                }\n            }\n            return ref;\n        }\n        function addAnchor(anchor) {\n            if (typeof anchor == \"string\") {\n                if (!ANCHOR.test(anchor))\n                    throw new Error(`invalid anchor \"${anchor}\"`);\n                addRef.call(this, `#${anchor}`);\n            }\n        }\n    });\n    return localRefs;\n    function checkAmbiguosRef(sch1, sch2, ref) {\n        if (sch2 !== undefined && !equal(sch1, sch2))\n            throw ambiguos(ref);\n    }\n    function ambiguos(ref) {\n        return new Error(`reference \"${ref}\" resolves to more than one schema`);\n    }\n}\nexports.getSchemaRefs = getSchemaRefs;\n//# sourceMappingURL=resolve.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getRules = exports.isJSONType = void 0;\nconst _jsonTypes = [\"string\", \"number\", \"integer\", \"boolean\", \"null\", \"object\", \"array\"];\nconst jsonTypes = new Set(_jsonTypes);\nfunction isJSONType(x) {\n    return typeof x == \"string\" && jsonTypes.has(x);\n}\nexports.isJSONType = isJSONType;\nfunction getRules() {\n    const groups = {\n        number: { type: \"number\", rules: [] },\n        string: { type: \"string\", rules: [] },\n        array: { type: \"array\", rules: [] },\n        object: { type: \"object\", rules: [] },\n    };\n    return {\n        types: { ...groups, integer: true, boolean: true, null: true },\n        rules: [{ rules: [] }, groups.number, groups.string, groups.array, groups.object],\n        post: { rules: [] },\n        all: {},\n        keywords: {},\n    };\n}\nexports.getRules = getRules;\n//# sourceMappingURL=rules.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.checkStrictMode = exports.getErrorPath = exports.Type = exports.useFunc = exports.setEvaluated = exports.evaluatedPropsToName = exports.mergeEvaluated = exports.eachItem = exports.unescapeJsonPointer = exports.escapeJsonPointer = exports.escapeFragment = exports.unescapeFragment = exports.schemaRefOrVal = exports.schemaHasRulesButRef = exports.schemaHasRules = exports.checkUnknownRules = exports.alwaysValidSchema = exports.toHash = void 0;\nconst codegen_1 = require(\"./codegen\");\nconst code_1 = require(\"./codegen/code\");\n// TODO refactor to use Set\nfunction toHash(arr) {\n    const hash = {};\n    for (const item of arr)\n        hash[item] = true;\n    return hash;\n}\nexports.toHash = toHash;\nfunction alwaysValidSchema(it, schema) {\n    if (typeof schema == \"boolean\")\n        return schema;\n    if (Object.keys(schema).length === 0)\n        return true;\n    checkUnknownRules(it, schema);\n    return !schemaHasRules(schema, it.self.RULES.all);\n}\nexports.alwaysValidSchema = alwaysValidSchema;\nfunction checkUnknownRules(it, schema = it.schema) {\n    const { opts, self } = it;\n    if (!opts.strictSchema)\n        return;\n    if (typeof schema === \"boolean\")\n        return;\n    const rules = self.RULES.keywords;\n    for (const key in schema) {\n        if (!rules[key])\n            checkStrictMode(it, `unknown keyword: \"${key}\"`);\n    }\n}\nexports.checkUnknownRules = checkUnknownRules;\nfunction schemaHasRules(schema, rules) {\n    if (typeof schema == \"boolean\")\n        return !schema;\n    for (const key in schema)\n        if (rules[key])\n            return true;\n    return false;\n}\nexports.schemaHasRules = schemaHasRules;\nfunction schemaHasRulesButRef(schema, RULES) {\n    if (typeof schema == \"boolean\")\n        return !schema;\n    for (const key in schema)\n        if (key !== \"$ref\" && RULES.all[key])\n            return true;\n    return false;\n}\nexports.schemaHasRulesButRef = schemaHasRulesButRef;\nfunction schemaRefOrVal({ topSchemaRef, schemaPath }, schema, keyword, $data) {\n    if (!$data) {\n        if (typeof schema == \"number\" || typeof schema == \"boolean\")\n            return schema;\n        if (typeof schema == \"string\")\n            return (0, codegen_1._) `${schema}`;\n    }\n    return (0, codegen_1._) `${topSchemaRef}${schemaPath}${(0, codegen_1.getProperty)(keyword)}`;\n}\nexports.schemaRefOrVal = schemaRefOrVal;\nfunction unescapeFragment(str) {\n    return unescapeJsonPointer(decodeURIComponent(str));\n}\nexports.unescapeFragment = unescapeFragment;\nfunction escapeFragment(str) {\n    return encodeURIComponent(escapeJsonPointer(str));\n}\nexports.escapeFragment = escapeFragment;\nfunction escapeJsonPointer(str) {\n    if (typeof str == \"number\")\n        return `${str}`;\n    return str.replace(/~/g, \"~0\").replace(/\\//g, \"~1\");\n}\nexports.escapeJsonPointer = escapeJsonPointer;\nfunction unescapeJsonPointer(str) {\n    return str.replace(/~1/g, \"/\").replace(/~0/g, \"~\");\n}\nexports.unescapeJsonPointer = unescapeJsonPointer;\nfunction eachItem(xs, f) {\n    if (Array.isArray(xs)) {\n        for (const x of xs)\n            f(x);\n    }\n    else {\n        f(xs);\n    }\n}\nexports.eachItem = eachItem;\nfunction makeMergeEvaluated({ mergeNames, mergeToName, mergeValues, resultToName, }) {\n    return (gen, from, to, toName) => {\n        const res = to === undefined\n            ? from\n            : to instanceof codegen_1.Name\n                ? (from instanceof codegen_1.Name ? mergeNames(gen, from, to) : mergeToName(gen, from, to), to)\n                : from instanceof codegen_1.Name\n                    ? (mergeToName(gen, to, from), from)\n                    : mergeValues(from, to);\n        return toName === codegen_1.Name && !(res instanceof codegen_1.Name) ? resultToName(gen, res) : res;\n    };\n}\nexports.mergeEvaluated = {\n    props: makeMergeEvaluated({\n        mergeNames: (gen, from, to) => gen.if((0, codegen_1._) `${to} !== true && ${from} !== undefined`, () => {\n            gen.if((0, codegen_1._) `${from} === true`, () => gen.assign(to, true), () => gen.assign(to, (0, codegen_1._) `${to} || {}`).code((0, codegen_1._) `Object.assign(${to}, ${from})`));\n        }),\n        mergeToName: (gen, from, to) => gen.if((0, codegen_1._) `${to} !== true`, () => {\n            if (from === true) {\n                gen.assign(to, true);\n            }\n            else {\n                gen.assign(to, (0, codegen_1._) `${to} || {}`);\n                setEvaluated(gen, to, from);\n            }\n        }),\n        mergeValues: (from, to) => (from === true ? true : { ...from, ...to }),\n        resultToName: evaluatedPropsToName,\n    }),\n    items: makeMergeEvaluated({\n        mergeNames: (gen, from, to) => gen.if((0, codegen_1._) `${to} !== true && ${from} !== undefined`, () => gen.assign(to, (0, codegen_1._) `${from} === true ? true : ${to} > ${from} ? ${to} : ${from}`)),\n        mergeToName: (gen, from, to) => gen.if((0, codegen_1._) `${to} !== true`, () => gen.assign(to, from === true ? true : (0, codegen_1._) `${to} > ${from} ? ${to} : ${from}`)),\n        mergeValues: (from, to) => (from === true ? true : Math.max(from, to)),\n        resultToName: (gen, items) => gen.var(\"items\", items),\n    }),\n};\nfunction evaluatedPropsToName(gen, ps) {\n    if (ps === true)\n        return gen.var(\"props\", true);\n    const props = gen.var(\"props\", (0, codegen_1._) `{}`);\n    if (ps !== undefined)\n        setEvaluated(gen, props, ps);\n    return props;\n}\nexports.evaluatedPropsToName = evaluatedPropsToName;\nfunction setEvaluated(gen, props, ps) {\n    Object.keys(ps).forEach((p) => gen.assign((0, codegen_1._) `${props}${(0, codegen_1.getProperty)(p)}`, true));\n}\nexports.setEvaluated = setEvaluated;\nconst snippets = {};\nfunction useFunc(gen, f) {\n    return gen.scopeValue(\"func\", {\n        ref: f,\n        code: snippets[f.code] || (snippets[f.code] = new code_1._Code(f.code)),\n    });\n}\nexports.useFunc = useFunc;\nvar Type;\n(function (Type) {\n    Type[Type[\"Num\"] = 0] = \"Num\";\n    Type[Type[\"Str\"] = 1] = \"Str\";\n})(Type = exports.Type || (exports.Type = {}));\nfunction getErrorPath(dataProp, dataPropType, jsPropertySyntax) {\n    // let path\n    if (dataProp instanceof codegen_1.Name) {\n        const isNumber = dataPropType === Type.Num;\n        return jsPropertySyntax\n            ? isNumber\n                ? (0, codegen_1._) `\"[\" + ${dataProp} + \"]\"`\n                : (0, codegen_1._) `\"['\" + ${dataProp} + \"']\"`\n            : isNumber\n                ? (0, codegen_1._) `\"/\" + ${dataProp}`\n                : (0, codegen_1._) `\"/\" + ${dataProp}.replace(/~/g, \"~0\").replace(/\\\\//g, \"~1\")`; // TODO maybe use global escapePointer\n    }\n    return jsPropertySyntax ? (0, codegen_1.getProperty)(dataProp).toString() : \"/\" + escapeJsonPointer(dataProp);\n}\nexports.getErrorPath = getErrorPath;\nfunction checkStrictMode(it, msg, mode = it.opts.strictSchema) {\n    if (!mode)\n        return;\n    msg = `strict mode: ${msg}`;\n    if (mode === true)\n        throw new Error(msg);\n    it.self.logger.warn(msg);\n}\nexports.checkStrictMode = checkStrictMode;\n//# sourceMappingURL=util.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.shouldUseRule = exports.shouldUseGroup = exports.schemaHasRulesForType = void 0;\nfunction schemaHasRulesForType({ schema, self }, type) {\n    const group = self.RULES.types[type];\n    return group && group !== true && shouldUseGroup(schema, group);\n}\nexports.schemaHasRulesForType = schemaHasRulesForType;\nfunction shouldUseGroup(schema, group) {\n    return group.rules.some((rule) => shouldUseRule(schema, rule));\n}\nexports.shouldUseGroup = shouldUseGroup;\nfunction shouldUseRule(schema, rule) {\n    var _a;\n    return (schema[rule.keyword] !== undefined ||\n        ((_a = rule.definition.implements) === null || _a === void 0 ? void 0 : _a.some((kwd) => schema[kwd] !== undefined)));\n}\nexports.shouldUseRule = shouldUseRule;\n//# sourceMappingURL=applicability.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.boolOrEmptySchema = exports.topBoolOrEmptySchema = void 0;\nconst errors_1 = require(\"../errors\");\nconst codegen_1 = require(\"../codegen\");\nconst names_1 = require(\"../names\");\nconst boolError = {\n    message: \"boolean schema is false\",\n};\nfunction topBoolOrEmptySchema(it) {\n    const { gen, schema, validateName } = it;\n    if (schema === false) {\n        falseSchemaError(it, false);\n    }\n    else if (typeof schema == \"object\" && schema.$async === true) {\n        gen.return(names_1.default.data);\n    }\n    else {\n        gen.assign((0, codegen_1._) `${validateName}.errors`, null);\n        gen.return(true);\n    }\n}\nexports.topBoolOrEmptySchema = topBoolOrEmptySchema;\nfunction boolOrEmptySchema(it, valid) {\n    const { gen, schema } = it;\n    if (schema === false) {\n        gen.var(valid, false); // TODO var\n        falseSchemaError(it);\n    }\n    else {\n        gen.var(valid, true); // TODO var\n    }\n}\nexports.boolOrEmptySchema = boolOrEmptySchema;\nfunction falseSchemaError(it, overrideAllErrors) {\n    const { gen, data } = it;\n    // TODO maybe some other interface should be used for non-keyword validation errors...\n    const cxt = {\n        gen,\n        keyword: \"false schema\",\n        data,\n        schema: false,\n        schemaCode: false,\n        schemaValue: false,\n        params: {},\n        it,\n    };\n    (0, errors_1.reportError)(cxt, boolError, undefined, overrideAllErrors);\n}\n//# sourceMappingURL=boolSchema.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.reportTypeError = exports.checkDataTypes = exports.checkDataType = exports.coerceAndCheckDataType = exports.getJSONTypes = exports.getSchemaTypes = exports.DataType = void 0;\nconst rules_1 = require(\"../rules\");\nconst applicability_1 = require(\"./applicability\");\nconst errors_1 = require(\"../errors\");\nconst codegen_1 = require(\"../codegen\");\nconst util_1 = require(\"../util\");\nvar DataType;\n(function (DataType) {\n    DataType[DataType[\"Correct\"] = 0] = \"Correct\";\n    DataType[DataType[\"Wrong\"] = 1] = \"Wrong\";\n})(DataType = exports.DataType || (exports.DataType = {}));\nfunction getSchemaTypes(schema) {\n    const types = getJSONTypes(schema.type);\n    const hasNull = types.includes(\"null\");\n    if (hasNull) {\n        if (schema.nullable === false)\n            throw new Error(\"type: null contradicts nullable: false\");\n    }\n    else {\n        if (!types.length && schema.nullable !== undefined) {\n            throw new Error('\"nullable\" cannot be used without \"type\"');\n        }\n        if (schema.nullable === true)\n            types.push(\"null\");\n    }\n    return types;\n}\nexports.getSchemaTypes = getSchemaTypes;\nfunction getJSONTypes(ts) {\n    const types = Array.isArray(ts) ? ts : ts ? [ts] : [];\n    if (types.every(rules_1.isJSONType))\n        return types;\n    throw new Error(\"type must be JSONType or JSONType[]: \" + types.join(\",\"));\n}\nexports.getJSONTypes = getJSONTypes;\nfunction coerceAndCheckDataType(it, types) {\n    const { gen, data, opts } = it;\n    const coerceTo = coerceToTypes(types, opts.coerceTypes);\n    const checkTypes = types.length > 0 &&\n        !(coerceTo.length === 0 && types.length === 1 && (0, applicability_1.schemaHasRulesForType)(it, types[0]));\n    if (checkTypes) {\n        const wrongType = checkDataTypes(types, data, opts.strictNumbers, DataType.Wrong);\n        gen.if(wrongType, () => {\n            if (coerceTo.length)\n                coerceData(it, types, coerceTo);\n            else\n                reportTypeError(it);\n        });\n    }\n    return checkTypes;\n}\nexports.coerceAndCheckDataType = coerceAndCheckDataType;\nconst COERCIBLE = new Set([\"string\", \"number\", \"integer\", \"boolean\", \"null\"]);\nfunction coerceToTypes(types, coerceTypes) {\n    return coerceTypes\n        ? types.filter((t) => COERCIBLE.has(t) || (coerceTypes === \"array\" && t === \"array\"))\n        : [];\n}\nfunction coerceData(it, types, coerceTo) {\n    const { gen, data, opts } = it;\n    const dataType = gen.let(\"dataType\", (0, codegen_1._) `typeof ${data}`);\n    const coerced = gen.let(\"coerced\", (0, codegen_1._) `undefined`);\n    if (opts.coerceTypes === \"array\") {\n        gen.if((0, codegen_1._) `${dataType} == 'object' && Array.isArray(${data}) && ${data}.length == 1`, () => gen\n            .assign(data, (0, codegen_1._) `${data}[0]`)\n            .assign(dataType, (0, codegen_1._) `typeof ${data}`)\n            .if(checkDataTypes(types, data, opts.strictNumbers), () => gen.assign(coerced, data)));\n    }\n    gen.if((0, codegen_1._) `${coerced} !== undefined`);\n    for (const t of coerceTo) {\n        if (COERCIBLE.has(t) || (t === \"array\" && opts.coerceTypes === \"array\")) {\n            coerceSpecificType(t);\n        }\n    }\n    gen.else();\n    reportTypeError(it);\n    gen.endIf();\n    gen.if((0, codegen_1._) `${coerced} !== undefined`, () => {\n        gen.assign(data, coerced);\n        assignParentData(it, coerced);\n    });\n    function coerceSpecificType(t) {\n        switch (t) {\n            case \"string\":\n                gen\n                    .elseIf((0, codegen_1._) `${dataType} == \"number\" || ${dataType} == \"boolean\"`)\n                    .assign(coerced, (0, codegen_1._) `\"\" + ${data}`)\n                    .elseIf((0, codegen_1._) `${data} === null`)\n                    .assign(coerced, (0, codegen_1._) `\"\"`);\n                return;\n            case \"number\":\n                gen\n                    .elseIf((0, codegen_1._) `${dataType} == \"boolean\" || ${data} === null\n              || (${dataType} == \"string\" && ${data} && ${data} == +${data})`)\n                    .assign(coerced, (0, codegen_1._) `+${data}`);\n                return;\n            case \"integer\":\n                gen\n                    .elseIf((0, codegen_1._) `${dataType} === \"boolean\" || ${data} === null\n              || (${dataType} === \"string\" && ${data} && ${data} == +${data} && !(${data} % 1))`)\n                    .assign(coerced, (0, codegen_1._) `+${data}`);\n                return;\n            case \"boolean\":\n                gen\n                    .elseIf((0, codegen_1._) `${data} === \"false\" || ${data} === 0 || ${data} === null`)\n                    .assign(coerced, false)\n                    .elseIf((0, codegen_1._) `${data} === \"true\" || ${data} === 1`)\n                    .assign(coerced, true);\n                return;\n            case \"null\":\n                gen.elseIf((0, codegen_1._) `${data} === \"\" || ${data} === 0 || ${data} === false`);\n                gen.assign(coerced, null);\n                return;\n            case \"array\":\n                gen\n                    .elseIf((0, codegen_1._) `${dataType} === \"string\" || ${dataType} === \"number\"\n              || ${dataType} === \"boolean\" || ${data} === null`)\n                    .assign(coerced, (0, codegen_1._) `[${data}]`);\n        }\n    }\n}\nfunction assignParentData({ gen, parentData, parentDataProperty }, expr) {\n    // TODO use gen.property\n    gen.if((0, codegen_1._) `${parentData} !== undefined`, () => gen.assign((0, codegen_1._) `${parentData}[${parentDataProperty}]`, expr));\n}\nfunction checkDataType(dataType, data, strictNums, correct = DataType.Correct) {\n    const EQ = correct === DataType.Correct ? codegen_1.operators.EQ : codegen_1.operators.NEQ;\n    let cond;\n    switch (dataType) {\n        case \"null\":\n            return (0, codegen_1._) `${data} ${EQ} null`;\n        case \"array\":\n            cond = (0, codegen_1._) `Array.isArray(${data})`;\n            break;\n        case \"object\":\n            cond = (0, codegen_1._) `${data} && typeof ${data} == \"object\" && !Array.isArray(${data})`;\n            break;\n        case \"integer\":\n            cond = numCond((0, codegen_1._) `!(${data} % 1) && !isNaN(${data})`);\n            break;\n        case \"number\":\n            cond = numCond();\n            break;\n        default:\n            return (0, codegen_1._) `typeof ${data} ${EQ} ${dataType}`;\n    }\n    return correct === DataType.Correct ? cond : (0, codegen_1.not)(cond);\n    function numCond(_cond = codegen_1.nil) {\n        return (0, codegen_1.and)((0, codegen_1._) `typeof ${data} == \"number\"`, _cond, strictNums ? (0, codegen_1._) `isFinite(${data})` : codegen_1.nil);\n    }\n}\nexports.checkDataType = checkDataType;\nfunction checkDataTypes(dataTypes, data, strictNums, correct) {\n    if (dataTypes.length === 1) {\n        return checkDataType(dataTypes[0], data, strictNums, correct);\n    }\n    let cond;\n    const types = (0, util_1.toHash)(dataTypes);\n    if (types.array && types.object) {\n        const notObj = (0, codegen_1._) `typeof ${data} != \"object\"`;\n        cond = types.null ? notObj : (0, codegen_1._) `!${data} || ${notObj}`;\n        delete types.null;\n        delete types.array;\n        delete types.object;\n    }\n    else {\n        cond = codegen_1.nil;\n    }\n    if (types.number)\n        delete types.integer;\n    for (const t in types)\n        cond = (0, codegen_1.and)(cond, checkDataType(t, data, strictNums, correct));\n    return cond;\n}\nexports.checkDataTypes = checkDataTypes;\nconst typeError = {\n    message: ({ schema }) => `must be ${schema}`,\n    params: ({ schema, schemaValue }) => typeof schema == \"string\" ? (0, codegen_1._) `{type: ${schema}}` : (0, codegen_1._) `{type: ${schemaValue}}`,\n};\nfunction reportTypeError(it) {\n    const cxt = getTypeErrorContext(it);\n    (0, errors_1.reportError)(cxt, typeError);\n}\nexports.reportTypeError = reportTypeError;\nfunction getTypeErrorContext(it) {\n    const { gen, data, schema } = it;\n    const schemaCode = (0, util_1.schemaRefOrVal)(it, schema, \"type\");\n    return {\n        gen,\n        keyword: \"type\",\n        data,\n        schema: schema.type,\n        schemaCode,\n        schemaValue: schemaCode,\n        parentSchema: schema,\n        params: {},\n        it,\n    };\n}\n//# sourceMappingURL=dataType.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.assignDefaults = void 0;\nconst codegen_1 = require(\"../codegen\");\nconst util_1 = require(\"../util\");\nfunction assignDefaults(it, ty) {\n    const { properties, items } = it.schema;\n    if (ty === \"object\" && properties) {\n        for (const key in properties) {\n            assignDefault(it, key, properties[key].default);\n        }\n    }\n    else if (ty === \"array\" && Array.isArray(items)) {\n        items.forEach((sch, i) => assignDefault(it, i, sch.default));\n    }\n}\nexports.assignDefaults = assignDefaults;\nfunction assignDefault(it, prop, defaultValue) {\n    const { gen, compositeRule, data, opts } = it;\n    if (defaultValue === undefined)\n        return;\n    const childData = (0, codegen_1._) `${data}${(0, codegen_1.getProperty)(prop)}`;\n    if (compositeRule) {\n        (0, util_1.checkStrictMode)(it, `default is ignored for: ${childData}`);\n        return;\n    }\n    let condition = (0, codegen_1._) `${childData} === undefined`;\n    if (opts.useDefaults === \"empty\") {\n        condition = (0, codegen_1._) `${condition} || ${childData} === null || ${childData} === \"\"`;\n    }\n    // `${childData} === undefined` +\n    // (opts.useDefaults === \"empty\" ? ` || ${childData} === null || ${childData} === \"\"` : \"\")\n    gen.if(condition, (0, codegen_1._) `${childData} = ${(0, codegen_1.stringify)(defaultValue)}`);\n}\n//# sourceMappingURL=defaults.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getData = exports.KeywordCxt = exports.validateFunctionCode = void 0;\nconst boolSchema_1 = require(\"./boolSchema\");\nconst dataType_1 = require(\"./dataType\");\nconst applicability_1 = require(\"./applicability\");\nconst dataType_2 = require(\"./dataType\");\nconst defaults_1 = require(\"./defaults\");\nconst keyword_1 = require(\"./keyword\");\nconst subschema_1 = require(\"./subschema\");\nconst codegen_1 = require(\"../codegen\");\nconst names_1 = require(\"../names\");\nconst resolve_1 = require(\"../resolve\");\nconst util_1 = require(\"../util\");\nconst errors_1 = require(\"../errors\");\n// schema compilation - generates validation function, subschemaCode (below) is used for subschemas\nfunction validateFunctionCode(it) {\n    if (isSchemaObj(it)) {\n        checkKeywords(it);\n        if (schemaCxtHasRules(it)) {\n            topSchemaObjCode(it);\n            return;\n        }\n    }\n    validateFunction(it, () => (0, boolSchema_1.topBoolOrEmptySchema)(it));\n}\nexports.validateFunctionCode = validateFunctionCode;\nfunction validateFunction({ gen, validateName, schema, schemaEnv, opts }, body) {\n    if (opts.code.es5) {\n        gen.func(validateName, (0, codegen_1._) `${names_1.default.data}, ${names_1.default.valCxt}`, schemaEnv.$async, () => {\n            gen.code((0, codegen_1._) `\"use strict\"; ${funcSourceUrl(schema, opts)}`);\n            destructureValCxtES5(gen, opts);\n            gen.code(body);\n        });\n    }\n    else {\n        gen.func(validateName, (0, codegen_1._) `${names_1.default.data}, ${destructureValCxt(opts)}`, schemaEnv.$async, () => gen.code(funcSourceUrl(schema, opts)).code(body));\n    }\n}\nfunction destructureValCxt(opts) {\n    return (0, codegen_1._) `{${names_1.default.instancePath}=\"\", ${names_1.default.parentData}, ${names_1.default.parentDataProperty}, ${names_1.default.rootData}=${names_1.default.data}${opts.dynamicRef ? (0, codegen_1._) `, ${names_1.default.dynamicAnchors}={}` : codegen_1.nil}}={}`;\n}\nfunction destructureValCxtES5(gen, opts) {\n    gen.if(names_1.default.valCxt, () => {\n        gen.var(names_1.default.instancePath, (0, codegen_1._) `${names_1.default.valCxt}.${names_1.default.instancePath}`);\n        gen.var(names_1.default.parentData, (0, codegen_1._) `${names_1.default.valCxt}.${names_1.default.parentData}`);\n        gen.var(names_1.default.parentDataProperty, (0, codegen_1._) `${names_1.default.valCxt}.${names_1.default.parentDataProperty}`);\n        gen.var(names_1.default.rootData, (0, codegen_1._) `${names_1.default.valCxt}.${names_1.default.rootData}`);\n        if (opts.dynamicRef)\n            gen.var(names_1.default.dynamicAnchors, (0, codegen_1._) `${names_1.default.valCxt}.${names_1.default.dynamicAnchors}`);\n    }, () => {\n        gen.var(names_1.default.instancePath, (0, codegen_1._) `\"\"`);\n        gen.var(names_1.default.parentData, (0, codegen_1._) `undefined`);\n        gen.var(names_1.default.parentDataProperty, (0, codegen_1._) `undefined`);\n        gen.var(names_1.default.rootData, names_1.default.data);\n        if (opts.dynamicRef)\n            gen.var(names_1.default.dynamicAnchors, (0, codegen_1._) `{}`);\n    });\n}\nfunction topSchemaObjCode(it) {\n    const { schema, opts, gen } = it;\n    validateFunction(it, () => {\n        if (opts.$comment && schema.$comment)\n            commentKeyword(it);\n        checkNoDefault(it);\n        gen.let(names_1.default.vErrors, null);\n        gen.let(names_1.default.errors, 0);\n        if (opts.unevaluated)\n            resetEvaluated(it);\n        typeAndKeywords(it);\n        returnResults(it);\n    });\n    return;\n}\nfunction resetEvaluated(it) {\n    // TODO maybe some hook to execute it in the end to check whether props/items are Name, as in assignEvaluated\n    const { gen, validateName } = it;\n    it.evaluated = gen.const(\"evaluated\", (0, codegen_1._) `${validateName}.evaluated`);\n    gen.if((0, codegen_1._) `${it.evaluated}.dynamicProps`, () => gen.assign((0, codegen_1._) `${it.evaluated}.props`, (0, codegen_1._) `undefined`));\n    gen.if((0, codegen_1._) `${it.evaluated}.dynamicItems`, () => gen.assign((0, codegen_1._) `${it.evaluated}.items`, (0, codegen_1._) `undefined`));\n}\nfunction funcSourceUrl(schema, opts) {\n    const schId = typeof schema == \"object\" && schema[opts.schemaId];\n    return schId && (opts.code.source || opts.code.process) ? (0, codegen_1._) `/*# sourceURL=${schId} */` : codegen_1.nil;\n}\n// schema compilation - this function is used recursively to generate code for sub-schemas\nfunction subschemaCode(it, valid) {\n    if (isSchemaObj(it)) {\n        checkKeywords(it);\n        if (schemaCxtHasRules(it)) {\n            subSchemaObjCode(it, valid);\n            return;\n        }\n    }\n    (0, boolSchema_1.boolOrEmptySchema)(it, valid);\n}\nfunction schemaCxtHasRules({ schema, self }) {\n    if (typeof schema == \"boolean\")\n        return !schema;\n    for (const key in schema)\n        if (self.RULES.all[key])\n            return true;\n    return false;\n}\nfunction isSchemaObj(it) {\n    return typeof it.schema != \"boolean\";\n}\nfunction subSchemaObjCode(it, valid) {\n    const { schema, gen, opts } = it;\n    if (opts.$comment && schema.$comment)\n        commentKeyword(it);\n    updateContext(it);\n    checkAsyncSchema(it);\n    const errsCount = gen.const(\"_errs\", names_1.default.errors);\n    typeAndKeywords(it, errsCount);\n    // TODO var\n    gen.var(valid, (0, codegen_1._) `${errsCount} === ${names_1.default.errors}`);\n}\nfunction checkKeywords(it) {\n    (0, util_1.checkUnknownRules)(it);\n    checkRefsAndKeywords(it);\n}\nfunction typeAndKeywords(it, errsCount) {\n    if (it.opts.jtd)\n        return schemaKeywords(it, [], false, errsCount);\n    const types = (0, dataType_1.getSchemaTypes)(it.schema);\n    const checkedTypes = (0, dataType_1.coerceAndCheckDataType)(it, types);\n    schemaKeywords(it, types, !checkedTypes, errsCount);\n}\nfunction checkRefsAndKeywords(it) {\n    const { schema, errSchemaPath, opts, self } = it;\n    if (schema.$ref && opts.ignoreKeywordsWithRef && (0, util_1.schemaHasRulesButRef)(schema, self.RULES)) {\n        self.logger.warn(`$ref: keywords ignored in schema at path \"${errSchemaPath}\"`);\n    }\n}\nfunction checkNoDefault(it) {\n    const { schema, opts } = it;\n    if (schema.default !== undefined && opts.useDefaults && opts.strictSchema) {\n        (0, util_1.checkStrictMode)(it, \"default is ignored in the schema root\");\n    }\n}\nfunction updateContext(it) {\n    const schId = it.schema[it.opts.schemaId];\n    if (schId)\n        it.baseId = (0, resolve_1.resolveUrl)(it.opts.uriResolver, it.baseId, schId);\n}\nfunction checkAsyncSchema(it) {\n    if (it.schema.$async && !it.schemaEnv.$async)\n        throw new Error(\"async schema in sync schema\");\n}\nfunction commentKeyword({ gen, schemaEnv, schema, errSchemaPath, opts }) {\n    const msg = schema.$comment;\n    if (opts.$comment === true) {\n        gen.code((0, codegen_1._) `${names_1.default.self}.logger.log(${msg})`);\n    }\n    else if (typeof opts.$comment == \"function\") {\n        const schemaPath = (0, codegen_1.str) `${errSchemaPath}/$comment`;\n        const rootName = gen.scopeValue(\"root\", { ref: schemaEnv.root });\n        gen.code((0, codegen_1._) `${names_1.default.self}.opts.$comment(${msg}, ${schemaPath}, ${rootName}.schema)`);\n    }\n}\nfunction returnResults(it) {\n    const { gen, schemaEnv, validateName, ValidationError, opts } = it;\n    if (schemaEnv.$async) {\n        // TODO assign unevaluated\n        gen.if((0, codegen_1._) `${names_1.default.errors} === 0`, () => gen.return(names_1.default.data), () => gen.throw((0, codegen_1._) `new ${ValidationError}(${names_1.default.vErrors})`));\n    }\n    else {\n        gen.assign((0, codegen_1._) `${validateName}.errors`, names_1.default.vErrors);\n        if (opts.unevaluated)\n            assignEvaluated(it);\n        gen.return((0, codegen_1._) `${names_1.default.errors} === 0`);\n    }\n}\nfunction assignEvaluated({ gen, evaluated, props, items }) {\n    if (props instanceof codegen_1.Name)\n        gen.assign((0, codegen_1._) `${evaluated}.props`, props);\n    if (items instanceof codegen_1.Name)\n        gen.assign((0, codegen_1._) `${evaluated}.items`, items);\n}\nfunction schemaKeywords(it, types, typeErrors, errsCount) {\n    const { gen, schema, data, allErrors, opts, self } = it;\n    const { RULES } = self;\n    if (schema.$ref && (opts.ignoreKeywordsWithRef || !(0, util_1.schemaHasRulesButRef)(schema, RULES))) {\n        gen.block(() => keywordCode(it, \"$ref\", RULES.all.$ref.definition)); // TODO typecast\n        return;\n    }\n    if (!opts.jtd)\n        checkStrictTypes(it, types);\n    gen.block(() => {\n        for (const group of RULES.rules)\n            groupKeywords(group);\n        groupKeywords(RULES.post);\n    });\n    function groupKeywords(group) {\n        if (!(0, applicability_1.shouldUseGroup)(schema, group))\n            return;\n        if (group.type) {\n            gen.if((0, dataType_2.checkDataType)(group.type, data, opts.strictNumbers));\n            iterateKeywords(it, group);\n            if (types.length === 1 && types[0] === group.type && typeErrors) {\n                gen.else();\n                (0, dataType_2.reportTypeError)(it);\n            }\n            gen.endIf();\n        }\n        else {\n            iterateKeywords(it, group);\n        }\n        // TODO make it \"ok\" call?\n        if (!allErrors)\n            gen.if((0, codegen_1._) `${names_1.default.errors} === ${errsCount || 0}`);\n    }\n}\nfunction iterateKeywords(it, group) {\n    const { gen, schema, opts: { useDefaults }, } = it;\n    if (useDefaults)\n        (0, defaults_1.assignDefaults)(it, group.type);\n    gen.block(() => {\n        for (const rule of group.rules) {\n            if ((0, applicability_1.shouldUseRule)(schema, rule)) {\n                keywordCode(it, rule.keyword, rule.definition, group.type);\n            }\n        }\n    });\n}\nfunction checkStrictTypes(it, types) {\n    if (it.schemaEnv.meta || !it.opts.strictTypes)\n        return;\n    checkContextTypes(it, types);\n    if (!it.opts.allowUnionTypes)\n        checkMultipleTypes(it, types);\n    checkKeywordTypes(it, it.dataTypes);\n}\nfunction checkContextTypes(it, types) {\n    if (!types.length)\n        return;\n    if (!it.dataTypes.length) {\n        it.dataTypes = types;\n        return;\n    }\n    types.forEach((t) => {\n        if (!includesType(it.dataTypes, t)) {\n            strictTypesError(it, `type \"${t}\" not allowed by context \"${it.dataTypes.join(\",\")}\"`);\n        }\n    });\n    narrowSchemaTypes(it, types);\n}\nfunction checkMultipleTypes(it, ts) {\n    if (ts.length > 1 && !(ts.length === 2 && ts.includes(\"null\"))) {\n        strictTypesError(it, \"use allowUnionTypes to allow union type keyword\");\n    }\n}\nfunction checkKeywordTypes(it, ts) {\n    const rules = it.self.RULES.all;\n    for (const keyword in rules) {\n        const rule = rules[keyword];\n        if (typeof rule == \"object\" && (0, applicability_1.shouldUseRule)(it.schema, rule)) {\n            const { type } = rule.definition;\n            if (type.length && !type.some((t) => hasApplicableType(ts, t))) {\n                strictTypesError(it, `missing type \"${type.join(\",\")}\" for keyword \"${keyword}\"`);\n            }\n        }\n    }\n}\nfunction hasApplicableType(schTs, kwdT) {\n    return schTs.includes(kwdT) || (kwdT === \"number\" && schTs.includes(\"integer\"));\n}\nfunction includesType(ts, t) {\n    return ts.includes(t) || (t === \"integer\" && ts.includes(\"number\"));\n}\nfunction narrowSchemaTypes(it, withTypes) {\n    const ts = [];\n    for (const t of it.dataTypes) {\n        if (includesType(withTypes, t))\n            ts.push(t);\n        else if (withTypes.includes(\"integer\") && t === \"number\")\n            ts.push(\"integer\");\n    }\n    it.dataTypes = ts;\n}\nfunction strictTypesError(it, msg) {\n    const schemaPath = it.schemaEnv.baseId + it.errSchemaPath;\n    msg += ` at \"${schemaPath}\" (strictTypes)`;\n    (0, util_1.checkStrictMode)(it, msg, it.opts.strictTypes);\n}\nclass KeywordCxt {\n    constructor(it, def, keyword) {\n        (0, keyword_1.validateKeywordUsage)(it, def, keyword);\n        this.gen = it.gen;\n        this.allErrors = it.allErrors;\n        this.keyword = keyword;\n        this.data = it.data;\n        this.schema = it.schema[keyword];\n        this.$data = def.$data && it.opts.$data && this.schema && this.schema.$data;\n        this.schemaValue = (0, util_1.schemaRefOrVal)(it, this.schema, keyword, this.$data);\n        this.schemaType = def.schemaType;\n        this.parentSchema = it.schema;\n        this.params = {};\n        this.it = it;\n        this.def = def;\n        if (this.$data) {\n            this.schemaCode = it.gen.const(\"vSchema\", getData(this.$data, it));\n        }\n        else {\n            this.schemaCode = this.schemaValue;\n            if (!(0, keyword_1.validSchemaType)(this.schema, def.schemaType, def.allowUndefined)) {\n                throw new Error(`${keyword} value must be ${JSON.stringify(def.schemaType)}`);\n            }\n        }\n        if (\"code\" in def ? def.trackErrors : def.errors !== false) {\n            this.errsCount = it.gen.const(\"_errs\", names_1.default.errors);\n        }\n    }\n    result(condition, successAction, failAction) {\n        this.failResult((0, codegen_1.not)(condition), successAction, failAction);\n    }\n    failResult(condition, successAction, failAction) {\n        this.gen.if(condition);\n        if (failAction)\n            failAction();\n        else\n            this.error();\n        if (successAction) {\n            this.gen.else();\n            successAction();\n            if (this.allErrors)\n                this.gen.endIf();\n        }\n        else {\n            if (this.allErrors)\n                this.gen.endIf();\n            else\n                this.gen.else();\n        }\n    }\n    pass(condition, failAction) {\n        this.failResult((0, codegen_1.not)(condition), undefined, failAction);\n    }\n    fail(condition) {\n        if (condition === undefined) {\n            this.error();\n            if (!this.allErrors)\n                this.gen.if(false); // this branch will be removed by gen.optimize\n            return;\n        }\n        this.gen.if(condition);\n        this.error();\n        if (this.allErrors)\n            this.gen.endIf();\n        else\n            this.gen.else();\n    }\n    fail$data(condition) {\n        if (!this.$data)\n            return this.fail(condition);\n        const { schemaCode } = this;\n        this.fail((0, codegen_1._) `${schemaCode} !== undefined && (${(0, codegen_1.or)(this.invalid$data(), condition)})`);\n    }\n    error(append, errorParams, errorPaths) {\n        if (errorParams) {\n            this.setParams(errorParams);\n            this._error(append, errorPaths);\n            this.setParams({});\n            return;\n        }\n        this._error(append, errorPaths);\n    }\n    _error(append, errorPaths) {\n        ;\n        (append ? errors_1.reportExtraError : errors_1.reportError)(this, this.def.error, errorPaths);\n    }\n    $dataError() {\n        (0, errors_1.reportError)(this, this.def.$dataError || errors_1.keyword$DataError);\n    }\n    reset() {\n        if (this.errsCount === undefined)\n            throw new Error('add \"trackErrors\" to keyword definition');\n        (0, errors_1.resetErrorsCount)(this.gen, this.errsCount);\n    }\n    ok(cond) {\n        if (!this.allErrors)\n            this.gen.if(cond);\n    }\n    setParams(obj, assign) {\n        if (assign)\n            Object.assign(this.params, obj);\n        else\n            this.params = obj;\n    }\n    block$data(valid, codeBlock, $dataValid = codegen_1.nil) {\n        this.gen.block(() => {\n            this.check$data(valid, $dataValid);\n            codeBlock();\n        });\n    }\n    check$data(valid = codegen_1.nil, $dataValid = codegen_1.nil) {\n        if (!this.$data)\n            return;\n        const { gen, schemaCode, schemaType, def } = this;\n        gen.if((0, codegen_1.or)((0, codegen_1._) `${schemaCode} === undefined`, $dataValid));\n        if (valid !== codegen_1.nil)\n            gen.assign(valid, true);\n        if (schemaType.length || def.validateSchema) {\n            gen.elseIf(this.invalid$data());\n            this.$dataError();\n            if (valid !== codegen_1.nil)\n                gen.assign(valid, false);\n        }\n        gen.else();\n    }\n    invalid$data() {\n        const { gen, schemaCode, schemaType, def, it } = this;\n        return (0, codegen_1.or)(wrong$DataType(), invalid$DataSchema());\n        function wrong$DataType() {\n            if (schemaType.length) {\n                /* istanbul ignore if */\n                if (!(schemaCode instanceof codegen_1.Name))\n                    throw new Error(\"ajv implementation error\");\n                const st = Array.isArray(schemaType) ? schemaType : [schemaType];\n                return (0, codegen_1._) `${(0, dataType_2.checkDataTypes)(st, schemaCode, it.opts.strictNumbers, dataType_2.DataType.Wrong)}`;\n            }\n            return codegen_1.nil;\n        }\n        function invalid$DataSchema() {\n            if (def.validateSchema) {\n                const validateSchemaRef = gen.scopeValue(\"validate$data\", { ref: def.validateSchema }); // TODO value.code for standalone\n                return (0, codegen_1._) `!${validateSchemaRef}(${schemaCode})`;\n            }\n            return codegen_1.nil;\n        }\n    }\n    subschema(appl, valid) {\n        const subschema = (0, subschema_1.getSubschema)(this.it, appl);\n        (0, subschema_1.extendSubschemaData)(subschema, this.it, appl);\n        (0, subschema_1.extendSubschemaMode)(subschema, appl);\n        const nextContext = { ...this.it, ...subschema, items: undefined, props: undefined };\n        subschemaCode(nextContext, valid);\n        return nextContext;\n    }\n    mergeEvaluated(schemaCxt, toName) {\n        const { it, gen } = this;\n        if (!it.opts.unevaluated)\n            return;\n        if (it.props !== true && schemaCxt.props !== undefined) {\n            it.props = util_1.mergeEvaluated.props(gen, schemaCxt.props, it.props, toName);\n        }\n        if (it.items !== true && schemaCxt.items !== undefined) {\n            it.items = util_1.mergeEvaluated.items(gen, schemaCxt.items, it.items, toName);\n        }\n    }\n    mergeValidEvaluated(schemaCxt, valid) {\n        const { it, gen } = this;\n        if (it.opts.unevaluated && (it.props !== true || it.items !== true)) {\n            gen.if(valid, () => this.mergeEvaluated(schemaCxt, codegen_1.Name));\n            return true;\n        }\n    }\n}\nexports.KeywordCxt = KeywordCxt;\nfunction keywordCode(it, keyword, def, ruleType) {\n    const cxt = new KeywordCxt(it, def, keyword);\n    if (\"code\" in def) {\n        def.code(cxt, ruleType);\n    }\n    else if (cxt.$data && def.validate) {\n        (0, keyword_1.funcKeywordCode)(cxt, def);\n    }\n    else if (\"macro\" in def) {\n        (0, keyword_1.macroKeywordCode)(cxt, def);\n    }\n    else if (def.compile || def.validate) {\n        (0, keyword_1.funcKeywordCode)(cxt, def);\n    }\n}\nconst JSON_POINTER = /^\\/(?:[^~]|~0|~1)*$/;\nconst RELATIVE_JSON_POINTER = /^([0-9]+)(#|\\/(?:[^~]|~0|~1)*)?$/;\nfunction getData($data, { dataLevel, dataNames, dataPathArr }) {\n    let jsonPointer;\n    let data;\n    if ($data === \"\")\n        return names_1.default.rootData;\n    if ($data[0] === \"/\") {\n        if (!JSON_POINTER.test($data))\n            throw new Error(`Invalid JSON-pointer: ${$data}`);\n        jsonPointer = $data;\n        data = names_1.default.rootData;\n    }\n    else {\n        const matches = RELATIVE_JSON_POINTER.exec($data);\n        if (!matches)\n            throw new Error(`Invalid JSON-pointer: ${$data}`);\n        const up = +matches[1];\n        jsonPointer = matches[2];\n        if (jsonPointer === \"#\") {\n            if (up >= dataLevel)\n                throw new Error(errorMsg(\"property/index\", up));\n            return dataPathArr[dataLevel - up];\n        }\n        if (up > dataLevel)\n            throw new Error(errorMsg(\"data\", up));\n        data = dataNames[dataLevel - up];\n        if (!jsonPointer)\n            return data;\n    }\n    let expr = data;\n    const segments = jsonPointer.split(\"/\");\n    for (const segment of segments) {\n        if (segment) {\n            data = (0, codegen_1._) `${data}${(0, codegen_1.getProperty)((0, util_1.unescapeJsonPointer)(segment))}`;\n            expr = (0, codegen_1._) `${expr} && ${data}`;\n        }\n    }\n    return expr;\n    function errorMsg(pointerType, up) {\n        return `Cannot access ${pointerType} ${up} levels up, current level is ${dataLevel}`;\n    }\n}\nexports.getData = getData;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.validateKeywordUsage = exports.validSchemaType = exports.funcKeywordCode = exports.macroKeywordCode = void 0;\nconst codegen_1 = require(\"../codegen\");\nconst names_1 = require(\"../names\");\nconst code_1 = require(\"../../vocabularies/code\");\nconst errors_1 = require(\"../errors\");\nfunction macroKeywordCode(cxt, def) {\n    const { gen, keyword, schema, parentSchema, it } = cxt;\n    const macroSchema = def.macro.call(it.self, schema, parentSchema, it);\n    const schemaRef = useKeyword(gen, keyword, macroSchema);\n    if (it.opts.validateSchema !== false)\n        it.self.validateSchema(macroSchema, true);\n    const valid = gen.name(\"valid\");\n    cxt.subschema({\n        schema: macroSchema,\n        schemaPath: codegen_1.nil,\n        errSchemaPath: `${it.errSchemaPath}/${keyword}`,\n        topSchemaRef: schemaRef,\n        compositeRule: true,\n    }, valid);\n    cxt.pass(valid, () => cxt.error(true));\n}\nexports.macroKeywordCode = macroKeywordCode;\nfunction funcKeywordCode(cxt, def) {\n    var _a;\n    const { gen, keyword, schema, parentSchema, $data, it } = cxt;\n    checkAsyncKeyword(it, def);\n    const validate = !$data && def.compile ? def.compile.call(it.self, schema, parentSchema, it) : def.validate;\n    const validateRef = useKeyword(gen, keyword, validate);\n    const valid = gen.let(\"valid\");\n    cxt.block$data(valid, validateKeyword);\n    cxt.ok((_a = def.valid) !== null && _a !== void 0 ? _a : valid);\n    function validateKeyword() {\n        if (def.errors === false) {\n            assignValid();\n            if (def.modifying)\n                modifyData(cxt);\n            reportErrs(() => cxt.error());\n        }\n        else {\n            const ruleErrs = def.async ? validateAsync() : validateSync();\n            if (def.modifying)\n                modifyData(cxt);\n            reportErrs(() => addErrs(cxt, ruleErrs));\n        }\n    }\n    function validateAsync() {\n        const ruleErrs = gen.let(\"ruleErrs\", null);\n        gen.try(() => assignValid((0, codegen_1._) `await `), (e) => gen.assign(valid, false).if((0, codegen_1._) `${e} instanceof ${it.ValidationError}`, () => gen.assign(ruleErrs, (0, codegen_1._) `${e}.errors`), () => gen.throw(e)));\n        return ruleErrs;\n    }\n    function validateSync() {\n        const validateErrs = (0, codegen_1._) `${validateRef}.errors`;\n        gen.assign(validateErrs, null);\n        assignValid(codegen_1.nil);\n        return validateErrs;\n    }\n    function assignValid(_await = def.async ? (0, codegen_1._) `await ` : codegen_1.nil) {\n        const passCxt = it.opts.passContext ? names_1.default.this : names_1.default.self;\n        const passSchema = !((\"compile\" in def && !$data) || def.schema === false);\n        gen.assign(valid, (0, codegen_1._) `${_await}${(0, code_1.callValidateCode)(cxt, validateRef, passCxt, passSchema)}`, def.modifying);\n    }\n    function reportErrs(errors) {\n        var _a;\n        gen.if((0, codegen_1.not)((_a = def.valid) !== null && _a !== void 0 ? _a : valid), errors);\n    }\n}\nexports.funcKeywordCode = funcKeywordCode;\nfunction modifyData(cxt) {\n    const { gen, data, it } = cxt;\n    gen.if(it.parentData, () => gen.assign(data, (0, codegen_1._) `${it.parentData}[${it.parentDataProperty}]`));\n}\nfunction addErrs(cxt, errs) {\n    const { gen } = cxt;\n    gen.if((0, codegen_1._) `Array.isArray(${errs})`, () => {\n        gen\n            .assign(names_1.default.vErrors, (0, codegen_1._) `${names_1.default.vErrors} === null ? ${errs} : ${names_1.default.vErrors}.concat(${errs})`)\n            .assign(names_1.default.errors, (0, codegen_1._) `${names_1.default.vErrors}.length`);\n        (0, errors_1.extendErrors)(cxt);\n    }, () => cxt.error());\n}\nfunction checkAsyncKeyword({ schemaEnv }, def) {\n    if (def.async && !schemaEnv.$async)\n        throw new Error(\"async keyword in sync schema\");\n}\nfunction useKeyword(gen, keyword, result) {\n    if (result === undefined)\n        throw new Error(`keyword \"${keyword}\" failed to compile`);\n    return gen.scopeValue(\"keyword\", typeof result == \"function\" ? { ref: result } : { ref: result, code: (0, codegen_1.stringify)(result) });\n}\nfunction validSchemaType(schema, schemaType, allowUndefined = false) {\n    // TODO add tests\n    return (!schemaType.length ||\n        schemaType.some((st) => st === \"array\"\n            ? Array.isArray(schema)\n            : st === \"object\"\n                ? schema && typeof schema == \"object\" && !Array.isArray(schema)\n                : typeof schema == st || (allowUndefined && typeof schema == \"undefined\")));\n}\nexports.validSchemaType = validSchemaType;\nfunction validateKeywordUsage({ schema, opts, self, errSchemaPath }, def, keyword) {\n    /* istanbul ignore if */\n    if (Array.isArray(def.keyword) ? !def.keyword.includes(keyword) : def.keyword !== keyword) {\n        throw new Error(\"ajv implementation error\");\n    }\n    const deps = def.dependencies;\n    if (deps === null || deps === void 0 ? void 0 : deps.some((kwd) => !Object.prototype.hasOwnProperty.call(schema, kwd))) {\n        throw new Error(`parent schema must have dependencies of ${keyword}: ${deps.join(\",\")}`);\n    }\n    if (def.validateSchema) {\n        const valid = def.validateSchema(schema[keyword]);\n        if (!valid) {\n            const msg = `keyword \"${keyword}\" value is invalid at path \"${errSchemaPath}\": ` +\n                self.errorsText(def.validateSchema.errors);\n            if (opts.validateSchema === \"log\")\n                self.logger.error(msg);\n            else\n                throw new Error(msg);\n        }\n    }\n}\nexports.validateKeywordUsage = validateKeywordUsage;\n//# sourceMappingURL=keyword.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.extendSubschemaMode = exports.extendSubschemaData = exports.getSubschema = void 0;\nconst codegen_1 = require(\"../codegen\");\nconst util_1 = require(\"../util\");\nfunction getSubschema(it, { keyword, schemaProp, schema, schemaPath, errSchemaPath, topSchemaRef }) {\n    if (keyword !== undefined && schema !== undefined) {\n        throw new Error('both \"keyword\" and \"schema\" passed, only one allowed');\n    }\n    if (keyword !== undefined) {\n        const sch = it.schema[keyword];\n        return schemaProp === undefined\n            ? {\n                schema: sch,\n                schemaPath: (0, codegen_1._) `${it.schemaPath}${(0, codegen_1.getProperty)(keyword)}`,\n                errSchemaPath: `${it.errSchemaPath}/${keyword}`,\n            }\n            : {\n                schema: sch[schemaProp],\n                schemaPath: (0, codegen_1._) `${it.schemaPath}${(0, codegen_1.getProperty)(keyword)}${(0, codegen_1.getProperty)(schemaProp)}`,\n                errSchemaPath: `${it.errSchemaPath}/${keyword}/${(0, util_1.escapeFragment)(schemaProp)}`,\n            };\n    }\n    if (schema !== undefined) {\n        if (schemaPath === undefined || errSchemaPath === undefined || topSchemaRef === undefined) {\n            throw new Error('\"schemaPath\", \"errSchemaPath\" and \"topSchemaRef\" are required with \"schema\"');\n        }\n        return {\n            schema,\n            schemaPath,\n            topSchemaRef,\n            errSchemaPath,\n        };\n    }\n    throw new Error('either \"keyword\" or \"schema\" must be passed');\n}\nexports.getSubschema = getSubschema;\nfunction extendSubschemaData(subschema, it, { dataProp, dataPropType: dpType, data, dataTypes, propertyName }) {\n    if (data !== undefined && dataProp !== undefined) {\n        throw new Error('both \"data\" and \"dataProp\" passed, only one allowed');\n    }\n    const { gen } = it;\n    if (dataProp !== undefined) {\n        const { errorPath, dataPathArr, opts } = it;\n        const nextData = gen.let(\"data\", (0, codegen_1._) `${it.data}${(0, codegen_1.getProperty)(dataProp)}`, true);\n        dataContextProps(nextData);\n        subschema.errorPath = (0, codegen_1.str) `${errorPath}${(0, util_1.getErrorPath)(dataProp, dpType, opts.jsPropertySyntax)}`;\n        subschema.parentDataProperty = (0, codegen_1._) `${dataProp}`;\n        subschema.dataPathArr = [...dataPathArr, subschema.parentDataProperty];\n    }\n    if (data !== undefined) {\n        const nextData = data instanceof codegen_1.Name ? data : gen.let(\"data\", data, true); // replaceable if used once?\n        dataContextProps(nextData);\n        if (propertyName !== undefined)\n            subschema.propertyName = propertyName;\n        // TODO something is possibly wrong here with not changing parentDataProperty and not appending dataPathArr\n    }\n    if (dataTypes)\n        subschema.dataTypes = dataTypes;\n    function dataContextProps(_nextData) {\n        subschema.data = _nextData;\n        subschema.dataLevel = it.dataLevel + 1;\n        subschema.dataTypes = [];\n        it.definedProperties = new Set();\n        subschema.parentData = it.data;\n        subschema.dataNames = [...it.dataNames, _nextData];\n    }\n}\nexports.extendSubschemaData = extendSubschemaData;\nfunction extendSubschemaMode(subschema, { jtdDiscriminator, jtdMetadata, compositeRule, createErrors, allErrors }) {\n    if (compositeRule !== undefined)\n        subschema.compositeRule = compositeRule;\n    if (createErrors !== undefined)\n        subschema.createErrors = createErrors;\n    if (allErrors !== undefined)\n        subschema.allErrors = allErrors;\n    subschema.jtdDiscriminator = jtdDiscriminator; // not inherited\n    subschema.jtdMetadata = jtdMetadata; // not inherited\n}\nexports.extendSubschemaMode = extendSubschemaMode;\n//# sourceMappingURL=subschema.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CodeGen = exports.Name = exports.nil = exports.stringify = exports.str = exports._ = exports.KeywordCxt = void 0;\nvar validate_1 = require(\"./compile/validate\");\nObject.defineProperty(exports, \"KeywordCxt\", { enumerable: true, get: function () { return validate_1.KeywordCxt; } });\nvar codegen_1 = require(\"./compile/codegen\");\nObject.defineProperty(exports, \"_\", { enumerable: true, get: function () { return codegen_1._; } });\nObject.defineProperty(exports, \"str\", { enumerable: true, get: function () { return codegen_1.str; } });\nObject.defineProperty(exports, \"stringify\", { enumerable: true, get: function () { return codegen_1.stringify; } });\nObject.defineProperty(exports, \"nil\", { enumerable: true, get: function () { return codegen_1.nil; } });\nObject.defineProperty(exports, \"Name\", { enumerable: true, get: function () { return codegen_1.Name; } });\nObject.defineProperty(exports, \"CodeGen\", { enumerable: true, get: function () { return codegen_1.CodeGen; } });\nconst validation_error_1 = require(\"./runtime/validation_error\");\nconst ref_error_1 = require(\"./compile/ref_error\");\nconst rules_1 = require(\"./compile/rules\");\nconst compile_1 = require(\"./compile\");\nconst codegen_2 = require(\"./compile/codegen\");\nconst resolve_1 = require(\"./compile/resolve\");\nconst dataType_1 = require(\"./compile/validate/dataType\");\nconst util_1 = require(\"./compile/util\");\nconst $dataRefSchema = require(\"./refs/data.json\");\nconst uri_1 = require(\"./runtime/uri\");\nconst defaultRegExp = (str, flags) => new RegExp(str, flags);\ndefaultRegExp.code = \"new RegExp\";\nconst META_IGNORE_OPTIONS = [\"removeAdditional\", \"useDefaults\", \"coerceTypes\"];\nconst EXT_SCOPE_NAMES = new Set([\n    \"validate\",\n    \"serialize\",\n    \"parse\",\n    \"wrapper\",\n    \"root\",\n    \"schema\",\n    \"keyword\",\n    \"pattern\",\n    \"formats\",\n    \"validate$data\",\n    \"func\",\n    \"obj\",\n    \"Error\",\n]);\nconst removedOptions = {\n    errorDataPath: \"\",\n    format: \"`validateFormats: false` can be used instead.\",\n    nullable: '\"nullable\" keyword is supported by default.',\n    jsonPointers: \"Deprecated jsPropertySyntax can be used instead.\",\n    extendRefs: \"Deprecated ignoreKeywordsWithRef can be used instead.\",\n    missingRefs: \"Pass empty schema with $id that should be ignored to ajv.addSchema.\",\n    processCode: \"Use option `code: {process: (code, schemaEnv: object) => string}`\",\n    sourceCode: \"Use option `code: {source: true}`\",\n    strictDefaults: \"It is default now, see option `strict`.\",\n    strictKeywords: \"It is default now, see option `strict`.\",\n    uniqueItems: '\"uniqueItems\" keyword is always validated.',\n    unknownFormats: \"Disable strict mode or pass `true` to `ajv.addFormat` (or `formats` option).\",\n    cache: \"Map is used as cache, schema object as key.\",\n    serialize: \"Map is used as cache, schema object as key.\",\n    ajvErrors: \"It is default now.\",\n};\nconst deprecatedOptions = {\n    ignoreKeywordsWithRef: \"\",\n    jsPropertySyntax: \"\",\n    unicode: '\"minLength\"/\"maxLength\" account for unicode characters by default.',\n};\nconst MAX_EXPRESSION = 200;\n// eslint-disable-next-line complexity\nfunction requiredOptions(o) {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t, _u, _v, _w, _x, _y, _z, _0;\n    const s = o.strict;\n    const _optz = (_a = o.code) === null || _a === void 0 ? void 0 : _a.optimize;\n    const optimize = _optz === true || _optz === undefined ? 1 : _optz || 0;\n    const regExp = (_c = (_b = o.code) === null || _b === void 0 ? void 0 : _b.regExp) !== null && _c !== void 0 ? _c : defaultRegExp;\n    const uriResolver = (_d = o.uriResolver) !== null && _d !== void 0 ? _d : uri_1.default;\n    return {\n        strictSchema: (_f = (_e = o.strictSchema) !== null && _e !== void 0 ? _e : s) !== null && _f !== void 0 ? _f : true,\n        strictNumbers: (_h = (_g = o.strictNumbers) !== null && _g !== void 0 ? _g : s) !== null && _h !== void 0 ? _h : true,\n        strictTypes: (_k = (_j = o.strictTypes) !== null && _j !== void 0 ? _j : s) !== null && _k !== void 0 ? _k : \"log\",\n        strictTuples: (_m = (_l = o.strictTuples) !== null && _l !== void 0 ? _l : s) !== null && _m !== void 0 ? _m : \"log\",\n        strictRequired: (_p = (_o = o.strictRequired) !== null && _o !== void 0 ? _o : s) !== null && _p !== void 0 ? _p : false,\n        code: o.code ? { ...o.code, optimize, regExp } : { optimize, regExp },\n        loopRequired: (_q = o.loopRequired) !== null && _q !== void 0 ? _q : MAX_EXPRESSION,\n        loopEnum: (_r = o.loopEnum) !== null && _r !== void 0 ? _r : MAX_EXPRESSION,\n        meta: (_s = o.meta) !== null && _s !== void 0 ? _s : true,\n        messages: (_t = o.messages) !== null && _t !== void 0 ? _t : true,\n        inlineRefs: (_u = o.inlineRefs) !== null && _u !== void 0 ? _u : true,\n        schemaId: (_v = o.schemaId) !== null && _v !== void 0 ? _v : \"$id\",\n        addUsedSchema: (_w = o.addUsedSchema) !== null && _w !== void 0 ? _w : true,\n        validateSchema: (_x = o.validateSchema) !== null && _x !== void 0 ? _x : true,\n        validateFormats: (_y = o.validateFormats) !== null && _y !== void 0 ? _y : true,\n        unicodeRegExp: (_z = o.unicodeRegExp) !== null && _z !== void 0 ? _z : true,\n        int32range: (_0 = o.int32range) !== null && _0 !== void 0 ? _0 : true,\n        uriResolver: uriResolver,\n    };\n}\nclass Ajv {\n    constructor(opts = {}) {\n        this.schemas = {};\n        this.refs = {};\n        this.formats = {};\n        this._compilations = new Set();\n        this._loading = {};\n        this._cache = new Map();\n        opts = this.opts = { ...opts, ...requiredOptions(opts) };\n        const { es5, lines } = this.opts.code;\n        this.scope = new codegen_2.ValueScope({ scope: {}, prefixes: EXT_SCOPE_NAMES, es5, lines });\n        this.logger = getLogger(opts.logger);\n        const formatOpt = opts.validateFormats;\n        opts.validateFormats = false;\n        this.RULES = (0, rules_1.getRules)();\n        checkOptions.call(this, removedOptions, opts, \"NOT SUPPORTED\");\n        checkOptions.call(this, deprecatedOptions, opts, \"DEPRECATED\", \"warn\");\n        this._metaOpts = getMetaSchemaOptions.call(this);\n        if (opts.formats)\n            addInitialFormats.call(this);\n        this._addVocabularies();\n        this._addDefaultMetaSchema();\n        if (opts.keywords)\n            addInitialKeywords.call(this, opts.keywords);\n        if (typeof opts.meta == \"object\")\n            this.addMetaSchema(opts.meta);\n        addInitialSchemas.call(this);\n        opts.validateFormats = formatOpt;\n    }\n    _addVocabularies() {\n        this.addKeyword(\"$async\");\n    }\n    _addDefaultMetaSchema() {\n        const { $data, meta, schemaId } = this.opts;\n        let _dataRefSchema = $dataRefSchema;\n        if (schemaId === \"id\") {\n            _dataRefSchema = { ...$dataRefSchema };\n            _dataRefSchema.id = _dataRefSchema.$id;\n            delete _dataRefSchema.$id;\n        }\n        if (meta && $data)\n            this.addMetaSchema(_dataRefSchema, _dataRefSchema[schemaId], false);\n    }\n    defaultMeta() {\n        const { meta, schemaId } = this.opts;\n        return (this.opts.defaultMeta = typeof meta == \"object\" ? meta[schemaId] || meta : undefined);\n    }\n    validate(schemaKeyRef, // key, ref or schema object\n    data // to be validated\n    ) {\n        let v;\n        if (typeof schemaKeyRef == \"string\") {\n            v = this.getSchema(schemaKeyRef);\n            if (!v)\n                throw new Error(`no schema with key or ref \"${schemaKeyRef}\"`);\n        }\n        else {\n            v = this.compile(schemaKeyRef);\n        }\n        const valid = v(data);\n        if (!(\"$async\" in v))\n            this.errors = v.errors;\n        return valid;\n    }\n    compile(schema, _meta) {\n        const sch = this._addSchema(schema, _meta);\n        return (sch.validate || this._compileSchemaEnv(sch));\n    }\n    compileAsync(schema, meta) {\n        if (typeof this.opts.loadSchema != \"function\") {\n            throw new Error(\"options.loadSchema should be a function\");\n        }\n        const { loadSchema } = this.opts;\n        return runCompileAsync.call(this, schema, meta);\n        async function runCompileAsync(_schema, _meta) {\n            await loadMetaSchema.call(this, _schema.$schema);\n            const sch = this._addSchema(_schema, _meta);\n            return sch.validate || _compileAsync.call(this, sch);\n        }\n        async function loadMetaSchema($ref) {\n            if ($ref && !this.getSchema($ref)) {\n                await runCompileAsync.call(this, { $ref }, true);\n            }\n        }\n        async function _compileAsync(sch) {\n            try {\n                return this._compileSchemaEnv(sch);\n            }\n            catch (e) {\n                if (!(e instanceof ref_error_1.default))\n                    throw e;\n                checkLoaded.call(this, e);\n                await loadMissingSchema.call(this, e.missingSchema);\n                return _compileAsync.call(this, sch);\n            }\n        }\n        function checkLoaded({ missingSchema: ref, missingRef }) {\n            if (this.refs[ref]) {\n                throw new Error(`AnySchema ${ref} is loaded but ${missingRef} cannot be resolved`);\n            }\n        }\n        async function loadMissingSchema(ref) {\n            const _schema = await _loadSchema.call(this, ref);\n            if (!this.refs[ref])\n                await loadMetaSchema.call(this, _schema.$schema);\n            if (!this.refs[ref])\n                this.addSchema(_schema, ref, meta);\n        }\n        async function _loadSchema(ref) {\n            const p = this._loading[ref];\n            if (p)\n                return p;\n            try {\n                return await (this._loading[ref] = loadSchema(ref));\n            }\n            finally {\n                delete this._loading[ref];\n            }\n        }\n    }\n    // Adds schema to the instance\n    addSchema(schema, // If array is passed, `key` will be ignored\n    key, // Optional schema key. Can be passed to `validate` method instead of schema object or id/ref. One schema per instance can have empty `id` and `key`.\n    _meta, // true if schema is a meta-schema. Used internally, addMetaSchema should be used instead.\n    _validateSchema = this.opts.validateSchema // false to skip schema validation. Used internally, option validateSchema should be used instead.\n    ) {\n        if (Array.isArray(schema)) {\n            for (const sch of schema)\n                this.addSchema(sch, undefined, _meta, _validateSchema);\n            return this;\n        }\n        let id;\n        if (typeof schema === \"object\") {\n            const { schemaId } = this.opts;\n            id = schema[schemaId];\n            if (id !== undefined && typeof id != \"string\") {\n                throw new Error(`schema ${schemaId} must be string`);\n            }\n        }\n        key = (0, resolve_1.normalizeId)(key || id);\n        this._checkUnique(key);\n        this.schemas[key] = this._addSchema(schema, _meta, key, _validateSchema, true);\n        return this;\n    }\n    // Add schema that will be used to validate other schemas\n    // options in META_IGNORE_OPTIONS are alway set to false\n    addMetaSchema(schema, key, // schema key\n    _validateSchema = this.opts.validateSchema // false to skip schema validation, can be used to override validateSchema option for meta-schema\n    ) {\n        this.addSchema(schema, key, true, _validateSchema);\n        return this;\n    }\n    //  Validate schema against its meta-schema\n    validateSchema(schema, throwOrLogError) {\n        if (typeof schema == \"boolean\")\n            return true;\n        let $schema;\n        $schema = schema.$schema;\n        if ($schema !== undefined && typeof $schema != \"string\") {\n            throw new Error(\"$schema must be a string\");\n        }\n        $schema = $schema || this.opts.defaultMeta || this.defaultMeta();\n        if (!$schema) {\n            this.logger.warn(\"meta-schema not available\");\n            this.errors = null;\n            return true;\n        }\n        const valid = this.validate($schema, schema);\n        if (!valid && throwOrLogError) {\n            const message = \"schema is invalid: \" + this.errorsText();\n            if (this.opts.validateSchema === \"log\")\n                this.logger.error(message);\n            else\n                throw new Error(message);\n        }\n        return valid;\n    }\n    // Get compiled schema by `key` or `ref`.\n    // (`key` that was passed to `addSchema` or full schema reference - `schema.$id` or resolved id)\n    getSchema(keyRef) {\n        let sch;\n        while (typeof (sch = getSchEnv.call(this, keyRef)) == \"string\")\n            keyRef = sch;\n        if (sch === undefined) {\n            const { schemaId } = this.opts;\n            const root = new compile_1.SchemaEnv({ schema: {}, schemaId });\n            sch = compile_1.resolveSchema.call(this, root, keyRef);\n            if (!sch)\n                return;\n            this.refs[keyRef] = sch;\n        }\n        return (sch.validate || this._compileSchemaEnv(sch));\n    }\n    // Remove cached schema(s).\n    // If no parameter is passed all schemas but meta-schemas are removed.\n    // If RegExp is passed all schemas with key/id matching pattern but meta-schemas are removed.\n    // Even if schema is referenced by other schemas it still can be removed as other schemas have local references.\n    removeSchema(schemaKeyRef) {\n        if (schemaKeyRef instanceof RegExp) {\n            this._removeAllSchemas(this.schemas, schemaKeyRef);\n            this._removeAllSchemas(this.refs, schemaKeyRef);\n            return this;\n        }\n        switch (typeof schemaKeyRef) {\n            case \"undefined\":\n                this._removeAllSchemas(this.schemas);\n                this._removeAllSchemas(this.refs);\n                this._cache.clear();\n                return this;\n            case \"string\": {\n                const sch = getSchEnv.call(this, schemaKeyRef);\n                if (typeof sch == \"object\")\n                    this._cache.delete(sch.schema);\n                delete this.schemas[schemaKeyRef];\n                delete this.refs[schemaKeyRef];\n                return this;\n            }\n            case \"object\": {\n                const cacheKey = schemaKeyRef;\n                this._cache.delete(cacheKey);\n                let id = schemaKeyRef[this.opts.schemaId];\n                if (id) {\n                    id = (0, resolve_1.normalizeId)(id);\n                    delete this.schemas[id];\n                    delete this.refs[id];\n                }\n                return this;\n            }\n            default:\n                throw new Error(\"ajv.removeSchema: invalid parameter\");\n        }\n    }\n    // add \"vocabulary\" - a collection of keywords\n    addVocabulary(definitions) {\n        for (const def of definitions)\n            this.addKeyword(def);\n        return this;\n    }\n    addKeyword(kwdOrDef, def // deprecated\n    ) {\n        let keyword;\n        if (typeof kwdOrDef == \"string\") {\n            keyword = kwdOrDef;\n            if (typeof def == \"object\") {\n                this.logger.warn(\"these parameters are deprecated, see docs for addKeyword\");\n                def.keyword = keyword;\n            }\n        }\n        else if (typeof kwdOrDef == \"object\" && def === undefined) {\n            def = kwdOrDef;\n            keyword = def.keyword;\n            if (Array.isArray(keyword) && !keyword.length) {\n                throw new Error(\"addKeywords: keyword must be string or non-empty array\");\n            }\n        }\n        else {\n            throw new Error(\"invalid addKeywords parameters\");\n        }\n        checkKeyword.call(this, keyword, def);\n        if (!def) {\n            (0, util_1.eachItem)(keyword, (kwd) => addRule.call(this, kwd));\n            return this;\n        }\n        keywordMetaschema.call(this, def);\n        const definition = {\n            ...def,\n            type: (0, dataType_1.getJSONTypes)(def.type),\n            schemaType: (0, dataType_1.getJSONTypes)(def.schemaType),\n        };\n        (0, util_1.eachItem)(keyword, definition.type.length === 0\n            ? (k) => addRule.call(this, k, definition)\n            : (k) => definition.type.forEach((t) => addRule.call(this, k, definition, t)));\n        return this;\n    }\n    getKeyword(keyword) {\n        const rule = this.RULES.all[keyword];\n        return typeof rule == \"object\" ? rule.definition : !!rule;\n    }\n    // Remove keyword\n    removeKeyword(keyword) {\n        // TODO return type should be Ajv\n        const { RULES } = this;\n        delete RULES.keywords[keyword];\n        delete RULES.all[keyword];\n        for (const group of RULES.rules) {\n            const i = group.rules.findIndex((rule) => rule.keyword === keyword);\n            if (i >= 0)\n                group.rules.splice(i, 1);\n        }\n        return this;\n    }\n    // Add format\n    addFormat(name, format) {\n        if (typeof format == \"string\")\n            format = new RegExp(format);\n        this.formats[name] = format;\n        return this;\n    }\n    errorsText(errors = this.errors, // optional array of validation errors\n    { separator = \", \", dataVar = \"data\" } = {} // optional options with properties `separator` and `dataVar`\n    ) {\n        if (!errors || errors.length === 0)\n            return \"No errors\";\n        return errors\n            .map((e) => `${dataVar}${e.instancePath} ${e.message}`)\n            .reduce((text, msg) => text + separator + msg);\n    }\n    $dataMetaSchema(metaSchema, keywordsJsonPointers) {\n        const rules = this.RULES.all;\n        metaSchema = JSON.parse(JSON.stringify(metaSchema));\n        for (const jsonPointer of keywordsJsonPointers) {\n            const segments = jsonPointer.split(\"/\").slice(1); // first segment is an empty string\n            let keywords = metaSchema;\n            for (const seg of segments)\n                keywords = keywords[seg];\n            for (const key in rules) {\n                const rule = rules[key];\n                if (typeof rule != \"object\")\n                    continue;\n                const { $data } = rule.definition;\n                const schema = keywords[key];\n                if ($data && schema)\n                    keywords[key] = schemaOrData(schema);\n            }\n        }\n        return metaSchema;\n    }\n    _removeAllSchemas(schemas, regex) {\n        for (const keyRef in schemas) {\n            const sch = schemas[keyRef];\n            if (!regex || regex.test(keyRef)) {\n                if (typeof sch == \"string\") {\n                    delete schemas[keyRef];\n                }\n                else if (sch && !sch.meta) {\n                    this._cache.delete(sch.schema);\n                    delete schemas[keyRef];\n                }\n            }\n        }\n    }\n    _addSchema(schema, meta, baseId, validateSchema = this.opts.validateSchema, addSchema = this.opts.addUsedSchema) {\n        let id;\n        const { schemaId } = this.opts;\n        if (typeof schema == \"object\") {\n            id = schema[schemaId];\n        }\n        else {\n            if (this.opts.jtd)\n                throw new Error(\"schema must be object\");\n            else if (typeof schema != \"boolean\")\n                throw new Error(\"schema must be object or boolean\");\n        }\n        let sch = this._cache.get(schema);\n        if (sch !== undefined)\n            return sch;\n        baseId = (0, resolve_1.normalizeId)(id || baseId);\n        const localRefs = resolve_1.getSchemaRefs.call(this, schema, baseId);\n        sch = new compile_1.SchemaEnv({ schema, schemaId, meta, baseId, localRefs });\n        this._cache.set(sch.schema, sch);\n        if (addSchema && !baseId.startsWith(\"#\")) {\n            // TODO atm it is allowed to overwrite schemas without id (instead of not adding them)\n            if (baseId)\n                this._checkUnique(baseId);\n            this.refs[baseId] = sch;\n        }\n        if (validateSchema)\n            this.validateSchema(schema, true);\n        return sch;\n    }\n    _checkUnique(id) {\n        if (this.schemas[id] || this.refs[id]) {\n            throw new Error(`schema with key or id \"${id}\" already exists`);\n        }\n    }\n    _compileSchemaEnv(sch) {\n        if (sch.meta)\n            this._compileMetaSchema(sch);\n        else\n            compile_1.compileSchema.call(this, sch);\n        /* istanbul ignore if */\n        if (!sch.validate)\n            throw new Error(\"ajv implementation error\");\n        return sch.validate;\n    }\n    _compileMetaSchema(sch) {\n        const currentOpts = this.opts;\n        this.opts = this._metaOpts;\n        try {\n            compile_1.compileSchema.call(this, sch);\n        }\n        finally {\n            this.opts = currentOpts;\n        }\n    }\n}\nexports.default = Ajv;\nAjv.ValidationError = validation_error_1.default;\nAjv.MissingRefError = ref_error_1.default;\nfunction checkOptions(checkOpts, options, msg, log = \"error\") {\n    for (const key in checkOpts) {\n        const opt = key;\n        if (opt in options)\n            this.logger[log](`${msg}: option ${key}. ${checkOpts[opt]}`);\n    }\n}\nfunction getSchEnv(keyRef) {\n    keyRef = (0, resolve_1.normalizeId)(keyRef); // TODO tests fail without this line\n    return this.schemas[keyRef] || this.refs[keyRef];\n}\nfunction addInitialSchemas() {\n    const optsSchemas = this.opts.schemas;\n    if (!optsSchemas)\n        return;\n    if (Array.isArray(optsSchemas))\n        this.addSchema(optsSchemas);\n    else\n        for (const key in optsSchemas)\n            this.addSchema(optsSchemas[key], key);\n}\nfunction addInitialFormats() {\n    for (const name in this.opts.formats) {\n        const format = this.opts.formats[name];\n        if (format)\n            this.addFormat(name, format);\n    }\n}\nfunction addInitialKeywords(defs) {\n    if (Array.isArray(defs)) {\n        this.addVocabulary(defs);\n        return;\n    }\n    this.logger.warn(\"keywords option as map is deprecated, pass array\");\n    for (const keyword in defs) {\n        const def = defs[keyword];\n        if (!def.keyword)\n            def.keyword = keyword;\n        this.addKeyword(def);\n    }\n}\nfunction getMetaSchemaOptions() {\n    const metaOpts = { ...this.opts };\n    for (const opt of META_IGNORE_OPTIONS)\n        delete metaOpts[opt];\n    return metaOpts;\n}\nconst noLogs = { log() { }, warn() { }, error() { } };\nfunction getLogger(logger) {\n    if (logger === false)\n        return noLogs;\n    if (logger === undefined)\n        return console;\n    if (logger.log && logger.warn && logger.error)\n        return logger;\n    throw new Error(\"logger must implement log, warn and error methods\");\n}\nconst KEYWORD_NAME = /^[a-z_$][a-z0-9_$:-]*$/i;\nfunction checkKeyword(keyword, def) {\n    const { RULES } = this;\n    (0, util_1.eachItem)(keyword, (kwd) => {\n        if (RULES.keywords[kwd])\n            throw new Error(`Keyword ${kwd} is already defined`);\n        if (!KEYWORD_NAME.test(kwd))\n            throw new Error(`Keyword ${kwd} has invalid name`);\n    });\n    if (!def)\n        return;\n    if (def.$data && !(\"code\" in def || \"validate\" in def)) {\n        throw new Error('$data keyword must have \"code\" or \"validate\" function');\n    }\n}\nfunction addRule(keyword, definition, dataType) {\n    var _a;\n    const post = definition === null || definition === void 0 ? void 0 : definition.post;\n    if (dataType && post)\n        throw new Error('keyword with \"post\" flag cannot have \"type\"');\n    const { RULES } = this;\n    let ruleGroup = post ? RULES.post : RULES.rules.find(({ type: t }) => t === dataType);\n    if (!ruleGroup) {\n        ruleGroup = { type: dataType, rules: [] };\n        RULES.rules.push(ruleGroup);\n    }\n    RULES.keywords[keyword] = true;\n    if (!definition)\n        return;\n    const rule = {\n        keyword,\n        definition: {\n            ...definition,\n            type: (0, dataType_1.getJSONTypes)(definition.type),\n            schemaType: (0, dataType_1.getJSONTypes)(definition.schemaType),\n        },\n    };\n    if (definition.before)\n        addBeforeRule.call(this, ruleGroup, rule, definition.before);\n    else\n        ruleGroup.rules.push(rule);\n    RULES.all[keyword] = rule;\n    (_a = definition.implements) === null || _a === void 0 ? void 0 : _a.forEach((kwd) => this.addKeyword(kwd));\n}\nfunction addBeforeRule(ruleGroup, rule, before) {\n    const i = ruleGroup.rules.findIndex((_rule) => _rule.keyword === before);\n    if (i >= 0) {\n        ruleGroup.rules.splice(i, 0, rule);\n    }\n    else {\n        ruleGroup.rules.push(rule);\n        this.logger.warn(`rule ${before} is not defined`);\n    }\n}\nfunction keywordMetaschema(def) {\n    let { metaSchema } = def;\n    if (metaSchema === undefined)\n        return;\n    if (def.$data && this.opts.$data)\n        metaSchema = schemaOrData(metaSchema);\n    def.validateSchema = this.compile(metaSchema, true);\n}\nconst $dataRef = {\n    $ref: \"https://raw.githubusercontent.com/ajv-validator/ajv/master/lib/refs/data.json#\",\n};\nfunction schemaOrData(schema) {\n    return { anyOf: [schema, $dataRef] };\n}\n//# sourceMappingURL=core.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst metaSchema = require(\"./schema.json\");\nconst applicator = require(\"./meta/applicator.json\");\nconst content = require(\"./meta/content.json\");\nconst core = require(\"./meta/core.json\");\nconst format = require(\"./meta/format.json\");\nconst metadata = require(\"./meta/meta-data.json\");\nconst validation = require(\"./meta/validation.json\");\nconst META_SUPPORT_DATA = [\"/properties\"];\nfunction addMetaSchema2019($data) {\n    ;\n    [\n        metaSchema,\n        applicator,\n        content,\n        core,\n        with$data(this, format),\n        metadata,\n        with$data(this, validation),\n    ].forEach((sch) => this.addMetaSchema(sch, undefined, false));\n    return this;\n    function with$data(ajv, sch) {\n        return $data ? ajv.$dataMetaSchema(sch, META_SUPPORT_DATA) : sch;\n    }\n}\nexports.default = addMetaSchema2019;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// https://github.com/ajv-validator/ajv/issues/889\nconst equal = require(\"fast-deep-equal\");\nequal.code = 'require(\"ajv/dist/runtime/equal\").default';\nexports.default = equal;\n//# sourceMappingURL=equal.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// https://mathiasbynens.be/notes/javascript-encoding\n// https://github.com/bestiejs/punycode.js - punycode.ucs2.decode\nfunction ucs2length(str) {\n    const len = str.length;\n    let length = 0;\n    let pos = 0;\n    let value;\n    while (pos < len) {\n        length++;\n        value = str.charCodeAt(pos++);\n        if (value >= 0xd800 && value <= 0xdbff && pos < len) {\n            // high surrogate, and there is a next character\n            value = str.charCodeAt(pos);\n            if ((value & 0xfc00) === 0xdc00)\n                pos++; // low surrogate\n        }\n    }\n    return length;\n}\nexports.default = ucs2length;\nucs2length.code = 'require(\"ajv/dist/runtime/ucs2length\").default';\n//# sourceMappingURL=ucs2length.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst uri = require(\"uri-js\");\nuri.code = 'require(\"ajv/dist/runtime/uri\").default';\nexports.default = uri;\n//# sourceMappingURL=uri.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass ValidationError extends Error {\n    constructor(errors) {\n        super(\"validation failed\");\n        this.errors = errors;\n        this.ajv = this.validation = true;\n    }\n}\nexports.default = ValidationError;\n//# sourceMappingURL=validation_error.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.validateAdditionalItems = void 0;\nconst codegen_1 = require(\"../../compile/codegen\");\nconst util_1 = require(\"../../compile/util\");\nconst error = {\n    message: ({ params: { len } }) => (0, codegen_1.str) `must NOT have more than ${len} items`,\n    params: ({ params: { len } }) => (0, codegen_1._) `{limit: ${len}}`,\n};\nconst def = {\n    keyword: \"additionalItems\",\n    type: \"array\",\n    schemaType: [\"boolean\", \"object\"],\n    before: \"uniqueItems\",\n    error,\n    code(cxt) {\n        const { parentSchema, it } = cxt;\n        const { items } = parentSchema;\n        if (!Array.isArray(items)) {\n            (0, util_1.checkStrictMode)(it, '\"additionalItems\" is ignored when \"items\" is not an array of schemas');\n            return;\n        }\n        validateAdditionalItems(cxt, items);\n    },\n};\nfunction validateAdditionalItems(cxt, items) {\n    const { gen, schema, data, keyword, it } = cxt;\n    it.items = true;\n    const len = gen.const(\"len\", (0, codegen_1._) `${data}.length`);\n    if (schema === false) {\n        cxt.setParams({ len: items.length });\n        cxt.pass((0, codegen_1._) `${len} <= ${items.length}`);\n    }\n    else if (typeof schema == \"object\" && !(0, util_1.alwaysValidSchema)(it, schema)) {\n        const valid = gen.var(\"valid\", (0, codegen_1._) `${len} <= ${items.length}`); // TODO var\n        gen.if((0, codegen_1.not)(valid), () => validateItems(valid));\n        cxt.ok(valid);\n    }\n    function validateItems(valid) {\n        gen.forRange(\"i\", items.length, len, (i) => {\n            cxt.subschema({ keyword, dataProp: i, dataPropType: util_1.Type.Num }, valid);\n            if (!it.allErrors)\n                gen.if((0, codegen_1.not)(valid), () => gen.break());\n        });\n    }\n}\nexports.validateAdditionalItems = validateAdditionalItems;\nexports.default = def;\n//# sourceMappingURL=additionalItems.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst code_1 = require(\"../code\");\nconst codegen_1 = require(\"../../compile/codegen\");\nconst names_1 = require(\"../../compile/names\");\nconst util_1 = require(\"../../compile/util\");\nconst error = {\n    message: \"must NOT have additional properties\",\n    params: ({ params }) => (0, codegen_1._) `{additionalProperty: ${params.additionalProperty}}`,\n};\nconst def = {\n    keyword: \"additionalProperties\",\n    type: [\"object\"],\n    schemaType: [\"boolean\", \"object\"],\n    allowUndefined: true,\n    trackErrors: true,\n    error,\n    code(cxt) {\n        const { gen, schema, parentSchema, data, errsCount, it } = cxt;\n        /* istanbul ignore if */\n        if (!errsCount)\n            throw new Error(\"ajv implementation error\");\n        const { allErrors, opts } = it;\n        it.props = true;\n        if (opts.removeAdditional !== \"all\" && (0, util_1.alwaysValidSchema)(it, schema))\n            return;\n        const props = (0, code_1.allSchemaProperties)(parentSchema.properties);\n        const patProps = (0, code_1.allSchemaProperties)(parentSchema.patternProperties);\n        checkAdditionalProperties();\n        cxt.ok((0, codegen_1._) `${errsCount} === ${names_1.default.errors}`);\n        function checkAdditionalProperties() {\n            gen.forIn(\"key\", data, (key) => {\n                if (!props.length && !patProps.length)\n                    additionalPropertyCode(key);\n                else\n                    gen.if(isAdditional(key), () => additionalPropertyCode(key));\n            });\n        }\n        function isAdditional(key) {\n            let definedProp;\n            if (props.length > 8) {\n                // TODO maybe an option instead of hard-coded 8?\n                const propsSchema = (0, util_1.schemaRefOrVal)(it, parentSchema.properties, \"properties\");\n                definedProp = (0, code_1.isOwnProperty)(gen, propsSchema, key);\n            }\n            else if (props.length) {\n                definedProp = (0, codegen_1.or)(...props.map((p) => (0, codegen_1._) `${key} === ${p}`));\n            }\n            else {\n                definedProp = codegen_1.nil;\n            }\n            if (patProps.length) {\n                definedProp = (0, codegen_1.or)(definedProp, ...patProps.map((p) => (0, codegen_1._) `${(0, code_1.usePattern)(cxt, p)}.test(${key})`));\n            }\n            return (0, codegen_1.not)(definedProp);\n        }\n        function deleteAdditional(key) {\n            gen.code((0, codegen_1._) `delete ${data}[${key}]`);\n        }\n        function additionalPropertyCode(key) {\n            if (opts.removeAdditional === \"all\" || (opts.removeAdditional && schema === false)) {\n                deleteAdditional(key);\n                return;\n            }\n            if (schema === false) {\n                cxt.setParams({ additionalProperty: key });\n                cxt.error();\n                if (!allErrors)\n                    gen.break();\n                return;\n            }\n            if (typeof schema == \"object\" && !(0, util_1.alwaysValidSchema)(it, schema)) {\n                const valid = gen.name(\"valid\");\n                if (opts.removeAdditional === \"failing\") {\n                    applyAdditionalSchema(key, valid, false);\n                    gen.if((0, codegen_1.not)(valid), () => {\n                        cxt.reset();\n                        deleteAdditional(key);\n                    });\n                }\n                else {\n                    applyAdditionalSchema(key, valid);\n                    if (!allErrors)\n                        gen.if((0, codegen_1.not)(valid), () => gen.break());\n                }\n            }\n        }\n        function applyAdditionalSchema(key, valid, errors) {\n            const subschema = {\n                keyword: \"additionalProperties\",\n                dataProp: key,\n                dataPropType: util_1.Type.Str,\n            };\n            if (errors === false) {\n                Object.assign(subschema, {\n                    compositeRule: true,\n                    createErrors: false,\n                    allErrors: false,\n                });\n            }\n            cxt.subschema(subschema, valid);\n        }\n    },\n};\nexports.default = def;\n//# sourceMappingURL=additionalProperties.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst util_1 = require(\"../../compile/util\");\nconst def = {\n    keyword: \"allOf\",\n    schemaType: \"array\",\n    code(cxt) {\n        const { gen, schema, it } = cxt;\n        /* istanbul ignore if */\n        if (!Array.isArray(schema))\n            throw new Error(\"ajv implementation error\");\n        const valid = gen.name(\"valid\");\n        schema.forEach((sch, i) => {\n            if ((0, util_1.alwaysValidSchema)(it, sch))\n                return;\n            const schCxt = cxt.subschema({ keyword: \"allOf\", schemaProp: i }, valid);\n            cxt.ok(valid);\n            cxt.mergeEvaluated(schCxt);\n        });\n    },\n};\nexports.default = def;\n//# sourceMappingURL=allOf.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst code_1 = require(\"../code\");\nconst def = {\n    keyword: \"anyOf\",\n    schemaType: \"array\",\n    trackErrors: true,\n    code: code_1.validateUnion,\n    error: { message: \"must match a schema in anyOf\" },\n};\nexports.default = def;\n//# sourceMappingURL=anyOf.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst codegen_1 = require(\"../../compile/codegen\");\nconst util_1 = require(\"../../compile/util\");\nconst error = {\n    message: ({ params: { min, max } }) => max === undefined\n        ? (0, codegen_1.str) `must contain at least ${min} valid item(s)`\n        : (0, codegen_1.str) `must contain at least ${min} and no more than ${max} valid item(s)`,\n    params: ({ params: { min, max } }) => max === undefined ? (0, codegen_1._) `{minContains: ${min}}` : (0, codegen_1._) `{minContains: ${min}, maxContains: ${max}}`,\n};\nconst def = {\n    keyword: \"contains\",\n    type: \"array\",\n    schemaType: [\"object\", \"boolean\"],\n    before: \"uniqueItems\",\n    trackErrors: true,\n    error,\n    code(cxt) {\n        const { gen, schema, parentSchema, data, it } = cxt;\n        let min;\n        let max;\n        const { minContains, maxContains } = parentSchema;\n        if (it.opts.next) {\n            min = minContains === undefined ? 1 : minContains;\n            max = maxContains;\n        }\n        else {\n            min = 1;\n        }\n        const len = gen.const(\"len\", (0, codegen_1._) `${data}.length`);\n        cxt.setParams({ min, max });\n        if (max === undefined && min === 0) {\n            (0, util_1.checkStrictMode)(it, `\"minContains\" == 0 without \"maxContains\": \"contains\" keyword ignored`);\n            return;\n        }\n        if (max !== undefined && min > max) {\n            (0, util_1.checkStrictMode)(it, `\"minContains\" > \"maxContains\" is always invalid`);\n            cxt.fail();\n            return;\n        }\n        if ((0, util_1.alwaysValidSchema)(it, schema)) {\n            let cond = (0, codegen_1._) `${len} >= ${min}`;\n            if (max !== undefined)\n                cond = (0, codegen_1._) `${cond} && ${len} <= ${max}`;\n            cxt.pass(cond);\n            return;\n        }\n        it.items = true;\n        const valid = gen.name(\"valid\");\n        if (max === undefined && min === 1) {\n            validateItems(valid, () => gen.if(valid, () => gen.break()));\n        }\n        else if (min === 0) {\n            gen.let(valid, true);\n            if (max !== undefined)\n                gen.if((0, codegen_1._) `${data}.length > 0`, validateItemsWithCount);\n        }\n        else {\n            gen.let(valid, false);\n            validateItemsWithCount();\n        }\n        cxt.result(valid, () => cxt.reset());\n        function validateItemsWithCount() {\n            const schValid = gen.name(\"_valid\");\n            const count = gen.let(\"count\", 0);\n            validateItems(schValid, () => gen.if(schValid, () => checkLimits(count)));\n        }\n        function validateItems(_valid, block) {\n            gen.forRange(\"i\", 0, len, (i) => {\n                cxt.subschema({\n                    keyword: \"contains\",\n                    dataProp: i,\n                    dataPropType: util_1.Type.Num,\n                    compositeRule: true,\n                }, _valid);\n                block();\n            });\n        }\n        function checkLimits(count) {\n            gen.code((0, codegen_1._) `${count}++`);\n            if (max === undefined) {\n                gen.if((0, codegen_1._) `${count} >= ${min}`, () => gen.assign(valid, true).break());\n            }\n            else {\n                gen.if((0, codegen_1._) `${count} > ${max}`, () => gen.assign(valid, false).break());\n                if (min === 1)\n                    gen.assign(valid, true);\n                else\n                    gen.if((0, codegen_1._) `${count} >= ${min}`, () => gen.assign(valid, true));\n            }\n        }\n    },\n};\nexports.default = def;\n//# sourceMappingURL=contains.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.validateSchemaDeps = exports.validatePropertyDeps = exports.error = void 0;\nconst codegen_1 = require(\"../../compile/codegen\");\nconst util_1 = require(\"../../compile/util\");\nconst code_1 = require(\"../code\");\nexports.error = {\n    message: ({ params: { property, depsCount, deps } }) => {\n        const property_ies = depsCount === 1 ? \"property\" : \"properties\";\n        return (0, codegen_1.str) `must have ${property_ies} ${deps} when property ${property} is present`;\n    },\n    params: ({ params: { property, depsCount, deps, missingProperty } }) => (0, codegen_1._) `{property: ${property},\n    missingProperty: ${missingProperty},\n    depsCount: ${depsCount},\n    deps: ${deps}}`, // TODO change to reference\n};\nconst def = {\n    keyword: \"dependencies\",\n    type: \"object\",\n    schemaType: \"object\",\n    error: exports.error,\n    code(cxt) {\n        const [propDeps, schDeps] = splitDependencies(cxt);\n        validatePropertyDeps(cxt, propDeps);\n        validateSchemaDeps(cxt, schDeps);\n    },\n};\nfunction splitDependencies({ schema }) {\n    const propertyDeps = {};\n    const schemaDeps = {};\n    for (const key in schema) {\n        if (key === \"__proto__\")\n            continue;\n        const deps = Array.isArray(schema[key]) ? propertyDeps : schemaDeps;\n        deps[key] = schema[key];\n    }\n    return [propertyDeps, schemaDeps];\n}\nfunction validatePropertyDeps(cxt, propertyDeps = cxt.schema) {\n    const { gen, data, it } = cxt;\n    if (Object.keys(propertyDeps).length === 0)\n        return;\n    const missing = gen.let(\"missing\");\n    for (const prop in propertyDeps) {\n        const deps = propertyDeps[prop];\n        if (deps.length === 0)\n            continue;\n        const hasProperty = (0, code_1.propertyInData)(gen, data, prop, it.opts.ownProperties);\n        cxt.setParams({\n            property: prop,\n            depsCount: deps.length,\n            deps: deps.join(\", \"),\n        });\n        if (it.allErrors) {\n            gen.if(hasProperty, () => {\n                for (const depProp of deps) {\n                    (0, code_1.checkReportMissingProp)(cxt, depProp);\n                }\n            });\n        }\n        else {\n            gen.if((0, codegen_1._) `${hasProperty} && (${(0, code_1.checkMissingProp)(cxt, deps, missing)})`);\n            (0, code_1.reportMissingProp)(cxt, missing);\n            gen.else();\n        }\n    }\n}\nexports.validatePropertyDeps = validatePropertyDeps;\nfunction validateSchemaDeps(cxt, schemaDeps = cxt.schema) {\n    const { gen, data, keyword, it } = cxt;\n    const valid = gen.name(\"valid\");\n    for (const prop in schemaDeps) {\n        if ((0, util_1.alwaysValidSchema)(it, schemaDeps[prop]))\n            continue;\n        gen.if((0, code_1.propertyInData)(gen, data, prop, it.opts.ownProperties), () => {\n            const schCxt = cxt.subschema({ keyword, schemaProp: prop }, valid);\n            cxt.mergeValidEvaluated(schCxt, valid);\n        }, () => gen.var(valid, true) // TODO var\n        );\n        cxt.ok(valid);\n    }\n}\nexports.validateSchemaDeps = validateSchemaDeps;\nexports.default = def;\n//# sourceMappingURL=dependencies.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst dependencies_1 = require(\"./dependencies\");\nconst def = {\n    keyword: \"dependentSchemas\",\n    type: \"object\",\n    schemaType: \"object\",\n    code: (cxt) => (0, dependencies_1.validateSchemaDeps)(cxt),\n};\nexports.default = def;\n//# sourceMappingURL=dependentSchemas.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst codegen_1 = require(\"../../compile/codegen\");\nconst util_1 = require(\"../../compile/util\");\nconst error = {\n    message: ({ params }) => (0, codegen_1.str) `must match \"${params.ifClause}\" schema`,\n    params: ({ params }) => (0, codegen_1._) `{failingKeyword: ${params.ifClause}}`,\n};\nconst def = {\n    keyword: \"if\",\n    schemaType: [\"object\", \"boolean\"],\n    trackErrors: true,\n    error,\n    code(cxt) {\n        const { gen, parentSchema, it } = cxt;\n        if (parentSchema.then === undefined && parentSchema.else === undefined) {\n            (0, util_1.checkStrictMode)(it, '\"if\" without \"then\" and \"else\" is ignored');\n        }\n        const hasThen = hasSchema(it, \"then\");\n        const hasElse = hasSchema(it, \"else\");\n        if (!hasThen && !hasElse)\n            return;\n        const valid = gen.let(\"valid\", true);\n        const schValid = gen.name(\"_valid\");\n        validateIf();\n        cxt.reset();\n        if (hasThen && hasElse) {\n            const ifClause = gen.let(\"ifClause\");\n            cxt.setParams({ ifClause });\n            gen.if(schValid, validateClause(\"then\", ifClause), validateClause(\"else\", ifClause));\n        }\n        else if (hasThen) {\n            gen.if(schValid, validateClause(\"then\"));\n        }\n        else {\n            gen.if((0, codegen_1.not)(schValid), validateClause(\"else\"));\n        }\n        cxt.pass(valid, () => cxt.error(true));\n        function validateIf() {\n            const schCxt = cxt.subschema({\n                keyword: \"if\",\n                compositeRule: true,\n                createErrors: false,\n                allErrors: false,\n            }, schValid);\n            cxt.mergeEvaluated(schCxt);\n        }\n        function validateClause(keyword, ifClause) {\n            return () => {\n                const schCxt = cxt.subschema({ keyword }, schValid);\n                gen.assign(valid, schValid);\n                cxt.mergeValidEvaluated(schCxt, valid);\n                if (ifClause)\n                    gen.assign(ifClause, (0, codegen_1._) `${keyword}`);\n                else\n                    cxt.setParams({ ifClause: keyword });\n            };\n        }\n    },\n};\nfunction hasSchema(it, keyword) {\n    const schema = it.schema[keyword];\n    return schema !== undefined && !(0, util_1.alwaysValidSchema)(it, schema);\n}\nexports.default = def;\n//# sourceMappingURL=if.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst additionalItems_1 = require(\"./additionalItems\");\nconst prefixItems_1 = require(\"./prefixItems\");\nconst items_1 = require(\"./items\");\nconst items2020_1 = require(\"./items2020\");\nconst contains_1 = require(\"./contains\");\nconst dependencies_1 = require(\"./dependencies\");\nconst propertyNames_1 = require(\"./propertyNames\");\nconst additionalProperties_1 = require(\"./additionalProperties\");\nconst properties_1 = require(\"./properties\");\nconst patternProperties_1 = require(\"./patternProperties\");\nconst not_1 = require(\"./not\");\nconst anyOf_1 = require(\"./anyOf\");\nconst oneOf_1 = require(\"./oneOf\");\nconst allOf_1 = require(\"./allOf\");\nconst if_1 = require(\"./if\");\nconst thenElse_1 = require(\"./thenElse\");\nfunction getApplicator(draft2020 = false) {\n    const applicator = [\n        // any\n        not_1.default,\n        anyOf_1.default,\n        oneOf_1.default,\n        allOf_1.default,\n        if_1.default,\n        thenElse_1.default,\n        // object\n        propertyNames_1.default,\n        additionalProperties_1.default,\n        dependencies_1.default,\n        properties_1.default,\n        patternProperties_1.default,\n    ];\n    // array\n    if (draft2020)\n        applicator.push(prefixItems_1.default, items2020_1.default);\n    else\n        applicator.push(additionalItems_1.default, items_1.default);\n    applicator.push(contains_1.default);\n    return applicator;\n}\nexports.default = getApplicator;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.validateTuple = void 0;\nconst codegen_1 = require(\"../../compile/codegen\");\nconst util_1 = require(\"../../compile/util\");\nconst code_1 = require(\"../code\");\nconst def = {\n    keyword: \"items\",\n    type: \"array\",\n    schemaType: [\"object\", \"array\", \"boolean\"],\n    before: \"uniqueItems\",\n    code(cxt) {\n        const { schema, it } = cxt;\n        if (Array.isArray(schema))\n            return validateTuple(cxt, \"additionalItems\", schema);\n        it.items = true;\n        if ((0, util_1.alwaysValidSchema)(it, schema))\n            return;\n        cxt.ok((0, code_1.validateArray)(cxt));\n    },\n};\nfunction validateTuple(cxt, extraItems, schArr = cxt.schema) {\n    const { gen, parentSchema, data, keyword, it } = cxt;\n    checkStrictTuple(parentSchema);\n    if (it.opts.unevaluated && schArr.length && it.items !== true) {\n        it.items = util_1.mergeEvaluated.items(gen, schArr.length, it.items);\n    }\n    const valid = gen.name(\"valid\");\n    const len = gen.const(\"len\", (0, codegen_1._) `${data}.length`);\n    schArr.forEach((sch, i) => {\n        if ((0, util_1.alwaysValidSchema)(it, sch))\n            return;\n        gen.if((0, codegen_1._) `${len} > ${i}`, () => cxt.subschema({\n            keyword,\n            schemaProp: i,\n            dataProp: i,\n        }, valid));\n        cxt.ok(valid);\n    });\n    function checkStrictTuple(sch) {\n        const { opts, errSchemaPath } = it;\n        const l = schArr.length;\n        const fullTuple = l === sch.minItems && (l === sch.maxItems || sch[extraItems] === false);\n        if (opts.strictTuples && !fullTuple) {\n            const msg = `\"${keyword}\" is ${l}-tuple, but minItems or maxItems/${extraItems} are not specified or different at path \"${errSchemaPath}\"`;\n            (0, util_1.checkStrictMode)(it, msg, opts.strictTuples);\n        }\n    }\n}\nexports.validateTuple = validateTuple;\nexports.default = def;\n//# sourceMappingURL=items.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst codegen_1 = require(\"../../compile/codegen\");\nconst util_1 = require(\"../../compile/util\");\nconst code_1 = require(\"../code\");\nconst additionalItems_1 = require(\"./additionalItems\");\nconst error = {\n    message: ({ params: { len } }) => (0, codegen_1.str) `must NOT have more than ${len} items`,\n    params: ({ params: { len } }) => (0, codegen_1._) `{limit: ${len}}`,\n};\nconst def = {\n    keyword: \"items\",\n    type: \"array\",\n    schemaType: [\"object\", \"boolean\"],\n    before: \"uniqueItems\",\n    error,\n    code(cxt) {\n        const { schema, parentSchema, it } = cxt;\n        const { prefixItems } = parentSchema;\n        it.items = true;\n        if ((0, util_1.alwaysValidSchema)(it, schema))\n            return;\n        if (prefixItems)\n            (0, additionalItems_1.validateAdditionalItems)(cxt, prefixItems);\n        else\n            cxt.ok((0, code_1.validateArray)(cxt));\n    },\n};\nexports.default = def;\n//# sourceMappingURL=items2020.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst util_1 = require(\"../../compile/util\");\nconst def = {\n    keyword: \"not\",\n    schemaType: [\"object\", \"boolean\"],\n    trackErrors: true,\n    code(cxt) {\n        const { gen, schema, it } = cxt;\n        if ((0, util_1.alwaysValidSchema)(it, schema)) {\n            cxt.fail();\n            return;\n        }\n        const valid = gen.name(\"valid\");\n        cxt.subschema({\n            keyword: \"not\",\n            compositeRule: true,\n            createErrors: false,\n            allErrors: false,\n        }, valid);\n        cxt.failResult(valid, () => cxt.reset(), () => cxt.error());\n    },\n    error: { message: \"must NOT be valid\" },\n};\nexports.default = def;\n//# sourceMappingURL=not.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst codegen_1 = require(\"../../compile/codegen\");\nconst util_1 = require(\"../../compile/util\");\nconst error = {\n    message: \"must match exactly one schema in oneOf\",\n    params: ({ params }) => (0, codegen_1._) `{passingSchemas: ${params.passing}}`,\n};\nconst def = {\n    keyword: \"oneOf\",\n    schemaType: \"array\",\n    trackErrors: true,\n    error,\n    code(cxt) {\n        const { gen, schema, parentSchema, it } = cxt;\n        /* istanbul ignore if */\n        if (!Array.isArray(schema))\n            throw new Error(\"ajv implementation error\");\n        if (it.opts.discriminator && parentSchema.discriminator)\n            return;\n        const schArr = schema;\n        const valid = gen.let(\"valid\", false);\n        const passing = gen.let(\"passing\", null);\n        const schValid = gen.name(\"_valid\");\n        cxt.setParams({ passing });\n        // TODO possibly fail straight away (with warning or exception) if there are two empty always valid schemas\n        gen.block(validateOneOf);\n        cxt.result(valid, () => cxt.reset(), () => cxt.error(true));\n        function validateOneOf() {\n            schArr.forEach((sch, i) => {\n                let schCxt;\n                if ((0, util_1.alwaysValidSchema)(it, sch)) {\n                    gen.var(schValid, true);\n                }\n                else {\n                    schCxt = cxt.subschema({\n                        keyword: \"oneOf\",\n                        schemaProp: i,\n                        compositeRule: true,\n                    }, schValid);\n                }\n                if (i > 0) {\n                    gen\n                        .if((0, codegen_1._) `${schValid} && ${valid}`)\n                        .assign(valid, false)\n                        .assign(passing, (0, codegen_1._) `[${passing}, ${i}]`)\n                        .else();\n                }\n                gen.if(schValid, () => {\n                    gen.assign(valid, true);\n                    gen.assign(passing, i);\n                    if (schCxt)\n                        cxt.mergeEvaluated(schCxt, codegen_1.Name);\n                });\n            });\n        }\n    },\n};\nexports.default = def;\n//# sourceMappingURL=oneOf.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst code_1 = require(\"../code\");\nconst codegen_1 = require(\"../../compile/codegen\");\nconst util_1 = require(\"../../compile/util\");\nconst util_2 = require(\"../../compile/util\");\nconst def = {\n    keyword: \"patternProperties\",\n    type: \"object\",\n    schemaType: \"object\",\n    code(cxt) {\n        const { gen, schema, data, parentSchema, it } = cxt;\n        const { opts } = it;\n        const patterns = (0, code_1.allSchemaProperties)(schema);\n        const alwaysValidPatterns = patterns.filter((p) => (0, util_1.alwaysValidSchema)(it, schema[p]));\n        if (patterns.length === 0 ||\n            (alwaysValidPatterns.length === patterns.length &&\n                (!it.opts.unevaluated || it.props === true))) {\n            return;\n        }\n        const checkProperties = opts.strictSchema && !opts.allowMatchingProperties && parentSchema.properties;\n        const valid = gen.name(\"valid\");\n        if (it.props !== true && !(it.props instanceof codegen_1.Name)) {\n            it.props = (0, util_2.evaluatedPropsToName)(gen, it.props);\n        }\n        const { props } = it;\n        validatePatternProperties();\n        function validatePatternProperties() {\n            for (const pat of patterns) {\n                if (checkProperties)\n                    checkMatchingProperties(pat);\n                if (it.allErrors) {\n                    validateProperties(pat);\n                }\n                else {\n                    gen.var(valid, true); // TODO var\n                    validateProperties(pat);\n                    gen.if(valid);\n                }\n            }\n        }\n        function checkMatchingProperties(pat) {\n            for (const prop in checkProperties) {\n                if (new RegExp(pat).test(prop)) {\n                    (0, util_1.checkStrictMode)(it, `property ${prop} matches pattern ${pat} (use allowMatchingProperties)`);\n                }\n            }\n        }\n        function validateProperties(pat) {\n            gen.forIn(\"key\", data, (key) => {\n                gen.if((0, codegen_1._) `${(0, code_1.usePattern)(cxt, pat)}.test(${key})`, () => {\n                    const alwaysValid = alwaysValidPatterns.includes(pat);\n                    if (!alwaysValid) {\n                        cxt.subschema({\n                            keyword: \"patternProperties\",\n                            schemaProp: pat,\n                            dataProp: key,\n                            dataPropType: util_2.Type.Str,\n                        }, valid);\n                    }\n                    if (it.opts.unevaluated && props !== true) {\n                        gen.assign((0, codegen_1._) `${props}[${key}]`, true);\n                    }\n                    else if (!alwaysValid && !it.allErrors) {\n                        // can short-circuit if `unevaluatedProperties` is not supported (opts.next === false)\n                        // or if all properties were evaluated (props === true)\n                        gen.if((0, codegen_1.not)(valid), () => gen.break());\n                    }\n                });\n            });\n        }\n    },\n};\nexports.default = def;\n//# sourceMappingURL=patternProperties.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst items_1 = require(\"./items\");\nconst def = {\n    keyword: \"prefixItems\",\n    type: \"array\",\n    schemaType: [\"array\"],\n    before: \"uniqueItems\",\n    code: (cxt) => (0, items_1.validateTuple)(cxt, \"items\"),\n};\nexports.default = def;\n//# sourceMappingURL=prefixItems.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst validate_1 = require(\"../../compile/validate\");\nconst code_1 = require(\"../code\");\nconst util_1 = require(\"../../compile/util\");\nconst additionalProperties_1 = require(\"./additionalProperties\");\nconst def = {\n    keyword: \"properties\",\n    type: \"object\",\n    schemaType: \"object\",\n    code(cxt) {\n        const { gen, schema, parentSchema, data, it } = cxt;\n        if (it.opts.removeAdditional === \"all\" && parentSchema.additionalProperties === undefined) {\n            additionalProperties_1.default.code(new validate_1.KeywordCxt(it, additionalProperties_1.default, \"additionalProperties\"));\n        }\n        const allProps = (0, code_1.allSchemaProperties)(schema);\n        for (const prop of allProps) {\n            it.definedProperties.add(prop);\n        }\n        if (it.opts.unevaluated && allProps.length && it.props !== true) {\n            it.props = util_1.mergeEvaluated.props(gen, (0, util_1.toHash)(allProps), it.props);\n        }\n        const properties = allProps.filter((p) => !(0, util_1.alwaysValidSchema)(it, schema[p]));\n        if (properties.length === 0)\n            return;\n        const valid = gen.name(\"valid\");\n        for (const prop of properties) {\n            if (hasDefault(prop)) {\n                applyPropertySchema(prop);\n            }\n            else {\n                gen.if((0, code_1.propertyInData)(gen, data, prop, it.opts.ownProperties));\n                applyPropertySchema(prop);\n                if (!it.allErrors)\n                    gen.else().var(valid, true);\n                gen.endIf();\n            }\n            cxt.it.definedProperties.add(prop);\n            cxt.ok(valid);\n        }\n        function hasDefault(prop) {\n            return it.opts.useDefaults && !it.compositeRule && schema[prop].default !== undefined;\n        }\n        function applyPropertySchema(prop) {\n            cxt.subschema({\n                keyword: \"properties\",\n                schemaProp: prop,\n                dataProp: prop,\n            }, valid);\n        }\n    },\n};\nexports.default = def;\n//# sourceMappingURL=properties.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst codegen_1 = require(\"../../compile/codegen\");\nconst util_1 = require(\"../../compile/util\");\nconst error = {\n    message: \"property name must be valid\",\n    params: ({ params }) => (0, codegen_1._) `{propertyName: ${params.propertyName}}`,\n};\nconst def = {\n    keyword: \"propertyNames\",\n    type: \"object\",\n    schemaType: [\"object\", \"boolean\"],\n    error,\n    code(cxt) {\n        const { gen, schema, data, it } = cxt;\n        if ((0, util_1.alwaysValidSchema)(it, schema))\n            return;\n        const valid = gen.name(\"valid\");\n        gen.forIn(\"key\", data, (key) => {\n            cxt.setParams({ propertyName: key });\n            cxt.subschema({\n                keyword: \"propertyNames\",\n                data: key,\n                dataTypes: [\"string\"],\n                propertyName: key,\n                compositeRule: true,\n            }, valid);\n            gen.if((0, codegen_1.not)(valid), () => {\n                cxt.error(true);\n                if (!it.allErrors)\n                    gen.break();\n            });\n        });\n        cxt.ok(valid);\n    },\n};\nexports.default = def;\n//# sourceMappingURL=propertyNames.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst util_1 = require(\"../../compile/util\");\nconst def = {\n    keyword: [\"then\", \"else\"],\n    schemaType: [\"object\", \"boolean\"],\n    code({ keyword, parentSchema, it }) {\n        if (parentSchema.if === undefined)\n            (0, util_1.checkStrictMode)(it, `\"${keyword}\" without \"if\" is ignored`);\n    },\n};\nexports.default = def;\n//# sourceMappingURL=thenElse.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.validateUnion = exports.validateArray = exports.usePattern = exports.callValidateCode = exports.schemaProperties = exports.allSchemaProperties = exports.noPropertyInData = exports.propertyInData = exports.isOwnProperty = exports.hasPropFunc = exports.reportMissingProp = exports.checkMissingProp = exports.checkReportMissingProp = void 0;\nconst codegen_1 = require(\"../compile/codegen\");\nconst util_1 = require(\"../compile/util\");\nconst names_1 = require(\"../compile/names\");\nconst util_2 = require(\"../compile/util\");\nfunction checkReportMissingProp(cxt, prop) {\n    const { gen, data, it } = cxt;\n    gen.if(noPropertyInData(gen, data, prop, it.opts.ownProperties), () => {\n        cxt.setParams({ missingProperty: (0, codegen_1._) `${prop}` }, true);\n        cxt.error();\n    });\n}\nexports.checkReportMissingProp = checkReportMissingProp;\nfunction checkMissingProp({ gen, data, it: { opts } }, properties, missing) {\n    return (0, codegen_1.or)(...properties.map((prop) => (0, codegen_1.and)(noPropertyInData(gen, data, prop, opts.ownProperties), (0, codegen_1._) `${missing} = ${prop}`)));\n}\nexports.checkMissingProp = checkMissingProp;\nfunction reportMissingProp(cxt, missing) {\n    cxt.setParams({ missingProperty: missing }, true);\n    cxt.error();\n}\nexports.reportMissingProp = reportMissingProp;\nfunction hasPropFunc(gen) {\n    return gen.scopeValue(\"func\", {\n        // eslint-disable-next-line @typescript-eslint/unbound-method\n        ref: Object.prototype.hasOwnProperty,\n        code: (0, codegen_1._) `Object.prototype.hasOwnProperty`,\n    });\n}\nexports.hasPropFunc = hasPropFunc;\nfunction isOwnProperty(gen, data, property) {\n    return (0, codegen_1._) `${hasPropFunc(gen)}.call(${data}, ${property})`;\n}\nexports.isOwnProperty = isOwnProperty;\nfunction propertyInData(gen, data, property, ownProperties) {\n    const cond = (0, codegen_1._) `${data}${(0, codegen_1.getProperty)(property)} !== undefined`;\n    return ownProperties ? (0, codegen_1._) `${cond} && ${isOwnProperty(gen, data, property)}` : cond;\n}\nexports.propertyInData = propertyInData;\nfunction noPropertyInData(gen, data, property, ownProperties) {\n    const cond = (0, codegen_1._) `${data}${(0, codegen_1.getProperty)(property)} === undefined`;\n    return ownProperties ? (0, codegen_1.or)(cond, (0, codegen_1.not)(isOwnProperty(gen, data, property))) : cond;\n}\nexports.noPropertyInData = noPropertyInData;\nfunction allSchemaProperties(schemaMap) {\n    return schemaMap ? Object.keys(schemaMap).filter((p) => p !== \"__proto__\") : [];\n}\nexports.allSchemaProperties = allSchemaProperties;\nfunction schemaProperties(it, schemaMap) {\n    return allSchemaProperties(schemaMap).filter((p) => !(0, util_1.alwaysValidSchema)(it, schemaMap[p]));\n}\nexports.schemaProperties = schemaProperties;\nfunction callValidateCode({ schemaCode, data, it: { gen, topSchemaRef, schemaPath, errorPath }, it }, func, context, passSchema) {\n    const dataAndSchema = passSchema ? (0, codegen_1._) `${schemaCode}, ${data}, ${topSchemaRef}${schemaPath}` : data;\n    const valCxt = [\n        [names_1.default.instancePath, (0, codegen_1.strConcat)(names_1.default.instancePath, errorPath)],\n        [names_1.default.parentData, it.parentData],\n        [names_1.default.parentDataProperty, it.parentDataProperty],\n        [names_1.default.rootData, names_1.default.rootData],\n    ];\n    if (it.opts.dynamicRef)\n        valCxt.push([names_1.default.dynamicAnchors, names_1.default.dynamicAnchors]);\n    const args = (0, codegen_1._) `${dataAndSchema}, ${gen.object(...valCxt)}`;\n    return context !== codegen_1.nil ? (0, codegen_1._) `${func}.call(${context}, ${args})` : (0, codegen_1._) `${func}(${args})`;\n}\nexports.callValidateCode = callValidateCode;\nconst newRegExp = (0, codegen_1._) `new RegExp`;\nfunction usePattern({ gen, it: { opts } }, pattern) {\n    const u = opts.unicodeRegExp ? \"u\" : \"\";\n    const { regExp } = opts.code;\n    const rx = regExp(pattern, u);\n    return gen.scopeValue(\"pattern\", {\n        key: rx.toString(),\n        ref: rx,\n        code: (0, codegen_1._) `${regExp.code === \"new RegExp\" ? newRegExp : (0, util_2.useFunc)(gen, regExp)}(${pattern}, ${u})`,\n    });\n}\nexports.usePattern = usePattern;\nfunction validateArray(cxt) {\n    const { gen, data, keyword, it } = cxt;\n    const valid = gen.name(\"valid\");\n    if (it.allErrors) {\n        const validArr = gen.let(\"valid\", true);\n        validateItems(() => gen.assign(validArr, false));\n        return validArr;\n    }\n    gen.var(valid, true);\n    validateItems(() => gen.break());\n    return valid;\n    function validateItems(notValid) {\n        const len = gen.const(\"len\", (0, codegen_1._) `${data}.length`);\n        gen.forRange(\"i\", 0, len, (i) => {\n            cxt.subschema({\n                keyword,\n                dataProp: i,\n                dataPropType: util_1.Type.Num,\n            }, valid);\n            gen.if((0, codegen_1.not)(valid), notValid);\n        });\n    }\n}\nexports.validateArray = validateArray;\nfunction validateUnion(cxt) {\n    const { gen, schema, keyword, it } = cxt;\n    /* istanbul ignore if */\n    if (!Array.isArray(schema))\n        throw new Error(\"ajv implementation error\");\n    const alwaysValid = schema.some((sch) => (0, util_1.alwaysValidSchema)(it, sch));\n    if (alwaysValid && !it.opts.unevaluated)\n        return;\n    const valid = gen.let(\"valid\", false);\n    const schValid = gen.name(\"_valid\");\n    gen.block(() => schema.forEach((_sch, i) => {\n        const schCxt = cxt.subschema({\n            keyword,\n            schemaProp: i,\n            compositeRule: true,\n        }, schValid);\n        gen.assign(valid, (0, codegen_1._) `${valid} || ${schValid}`);\n        const merged = cxt.mergeValidEvaluated(schCxt, schValid);\n        // can short-circuit if `unevaluatedProperties/Items` not supported (opts.unevaluated !== true)\n        // or if all properties and items were evaluated (it.props === true && it.items === true)\n        if (!merged)\n            gen.if((0, codegen_1.not)(valid));\n    }));\n    cxt.result(valid, () => cxt.reset(), () => cxt.error(true));\n}\nexports.validateUnion = validateUnion;\n//# sourceMappingURL=code.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst def = {\n    keyword: \"id\",\n    code() {\n        throw new Error('NOT SUPPORTED: keyword \"id\", use \"$id\" for schema ID');\n    },\n};\nexports.default = def;\n//# sourceMappingURL=id.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst id_1 = require(\"./id\");\nconst ref_1 = require(\"./ref\");\nconst core = [\n    \"$schema\",\n    \"$id\",\n    \"$defs\",\n    \"$vocabulary\",\n    { keyword: \"$comment\" },\n    \"definitions\",\n    id_1.default,\n    ref_1.default,\n];\nexports.default = core;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.callRef = exports.getValidate = void 0;\nconst ref_error_1 = require(\"../../compile/ref_error\");\nconst code_1 = require(\"../code\");\nconst codegen_1 = require(\"../../compile/codegen\");\nconst names_1 = require(\"../../compile/names\");\nconst compile_1 = require(\"../../compile\");\nconst util_1 = require(\"../../compile/util\");\nconst def = {\n    keyword: \"$ref\",\n    schemaType: \"string\",\n    code(cxt) {\n        const { gen, schema: $ref, it } = cxt;\n        const { baseId, schemaEnv: env, validateName, opts, self } = it;\n        const { root } = env;\n        if (($ref === \"#\" || $ref === \"#/\") && baseId === root.baseId)\n            return callRootRef();\n        const schOrEnv = compile_1.resolveRef.call(self, root, baseId, $ref);\n        if (schOrEnv === undefined)\n            throw new ref_error_1.default(it.opts.uriResolver, baseId, $ref);\n        if (schOrEnv instanceof compile_1.SchemaEnv)\n            return callValidate(schOrEnv);\n        return inlineRefSchema(schOrEnv);\n        function callRootRef() {\n            if (env === root)\n                return callRef(cxt, validateName, env, env.$async);\n            const rootName = gen.scopeValue(\"root\", { ref: root });\n            return callRef(cxt, (0, codegen_1._) `${rootName}.validate`, root, root.$async);\n        }\n        function callValidate(sch) {\n            const v = getValidate(cxt, sch);\n            callRef(cxt, v, sch, sch.$async);\n        }\n        function inlineRefSchema(sch) {\n            const schName = gen.scopeValue(\"schema\", opts.code.source === true ? { ref: sch, code: (0, codegen_1.stringify)(sch) } : { ref: sch });\n            const valid = gen.name(\"valid\");\n            const schCxt = cxt.subschema({\n                schema: sch,\n                dataTypes: [],\n                schemaPath: codegen_1.nil,\n                topSchemaRef: schName,\n                errSchemaPath: $ref,\n            }, valid);\n            cxt.mergeEvaluated(schCxt);\n            cxt.ok(valid);\n        }\n    },\n};\nfunction getValidate(cxt, sch) {\n    const { gen } = cxt;\n    return sch.validate\n        ? gen.scopeValue(\"validate\", { ref: sch.validate })\n        : (0, codegen_1._) `${gen.scopeValue(\"wrapper\", { ref: sch })}.validate`;\n}\nexports.getValidate = getValidate;\nfunction callRef(cxt, v, sch, $async) {\n    const { gen, it } = cxt;\n    const { allErrors, schemaEnv: env, opts } = it;\n    const passCxt = opts.passContext ? names_1.default.this : codegen_1.nil;\n    if ($async)\n        callAsyncRef();\n    else\n        callSyncRef();\n    function callAsyncRef() {\n        if (!env.$async)\n            throw new Error(\"async schema referenced by sync schema\");\n        const valid = gen.let(\"valid\");\n        gen.try(() => {\n            gen.code((0, codegen_1._) `await ${(0, code_1.callValidateCode)(cxt, v, passCxt)}`);\n            addEvaluatedFrom(v); // TODO will not work with async, it has to be returned with the result\n            if (!allErrors)\n                gen.assign(valid, true);\n        }, (e) => {\n            gen.if((0, codegen_1._) `!(${e} instanceof ${it.ValidationError})`, () => gen.throw(e));\n            addErrorsFrom(e);\n            if (!allErrors)\n                gen.assign(valid, false);\n        });\n        cxt.ok(valid);\n    }\n    function callSyncRef() {\n        cxt.result((0, code_1.callValidateCode)(cxt, v, passCxt), () => addEvaluatedFrom(v), () => addErrorsFrom(v));\n    }\n    function addErrorsFrom(source) {\n        const errs = (0, codegen_1._) `${source}.errors`;\n        gen.assign(names_1.default.vErrors, (0, codegen_1._) `${names_1.default.vErrors} === null ? ${errs} : ${names_1.default.vErrors}.concat(${errs})`); // TODO tagged\n        gen.assign(names_1.default.errors, (0, codegen_1._) `${names_1.default.vErrors}.length`);\n    }\n    function addEvaluatedFrom(source) {\n        var _a;\n        if (!it.opts.unevaluated)\n            return;\n        const schEvaluated = (_a = sch === null || sch === void 0 ? void 0 : sch.validate) === null || _a === void 0 ? void 0 : _a.evaluated;\n        // TODO refactor\n        if (it.props !== true) {\n            if (schEvaluated && !schEvaluated.dynamicProps) {\n                if (schEvaluated.props !== undefined) {\n                    it.props = util_1.mergeEvaluated.props(gen, schEvaluated.props, it.props);\n                }\n            }\n            else {\n                const props = gen.var(\"props\", (0, codegen_1._) `${source}.evaluated.props`);\n                it.props = util_1.mergeEvaluated.props(gen, props, it.props, codegen_1.Name);\n            }\n        }\n        if (it.items !== true) {\n            if (schEvaluated && !schEvaluated.dynamicItems) {\n                if (schEvaluated.items !== undefined) {\n                    it.items = util_1.mergeEvaluated.items(gen, schEvaluated.items, it.items);\n                }\n            }\n            else {\n                const items = gen.var(\"items\", (0, codegen_1._) `${source}.evaluated.items`);\n                it.items = util_1.mergeEvaluated.items(gen, items, it.items, codegen_1.Name);\n            }\n        }\n    }\n}\nexports.callRef = callRef;\nexports.default = def;\n//# sourceMappingURL=ref.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst codegen_1 = require(\"../../compile/codegen\");\nconst types_1 = require(\"../discriminator/types\");\nconst compile_1 = require(\"../../compile\");\nconst util_1 = require(\"../../compile/util\");\nconst error = {\n    message: ({ params: { discrError, tagName } }) => discrError === types_1.DiscrError.Tag\n        ? `tag \"${tagName}\" must be string`\n        : `value of tag \"${tagName}\" must be in oneOf`,\n    params: ({ params: { discrError, tag, tagName } }) => (0, codegen_1._) `{error: ${discrError}, tag: ${tagName}, tagValue: ${tag}}`,\n};\nconst def = {\n    keyword: \"discriminator\",\n    type: \"object\",\n    schemaType: \"object\",\n    error,\n    code(cxt) {\n        const { gen, data, schema, parentSchema, it } = cxt;\n        const { oneOf } = parentSchema;\n        if (!it.opts.discriminator) {\n            throw new Error(\"discriminator: requires discriminator option\");\n        }\n        const tagName = schema.propertyName;\n        if (typeof tagName != \"string\")\n            throw new Error(\"discriminator: requires propertyName\");\n        if (schema.mapping)\n            throw new Error(\"discriminator: mapping is not supported\");\n        if (!oneOf)\n            throw new Error(\"discriminator: requires oneOf keyword\");\n        const valid = gen.let(\"valid\", false);\n        const tag = gen.const(\"tag\", (0, codegen_1._) `${data}${(0, codegen_1.getProperty)(tagName)}`);\n        gen.if((0, codegen_1._) `typeof ${tag} == \"string\"`, () => validateMapping(), () => cxt.error(false, { discrError: types_1.DiscrError.Tag, tag, tagName }));\n        cxt.ok(valid);\n        function validateMapping() {\n            const mapping = getMapping();\n            gen.if(false);\n            for (const tagValue in mapping) {\n                gen.elseIf((0, codegen_1._) `${tag} === ${tagValue}`);\n                gen.assign(valid, applyTagSchema(mapping[tagValue]));\n            }\n            gen.else();\n            cxt.error(false, { discrError: types_1.DiscrError.Mapping, tag, tagName });\n            gen.endIf();\n        }\n        function applyTagSchema(schemaProp) {\n            const _valid = gen.name(\"valid\");\n            const schCxt = cxt.subschema({ keyword: \"oneOf\", schemaProp }, _valid);\n            cxt.mergeEvaluated(schCxt, codegen_1.Name);\n            return _valid;\n        }\n        function getMapping() {\n            var _a;\n            const oneOfMapping = {};\n            const topRequired = hasRequired(parentSchema);\n            let tagRequired = true;\n            for (let i = 0; i < oneOf.length; i++) {\n                let sch = oneOf[i];\n                if ((sch === null || sch === void 0 ? void 0 : sch.$ref) && !(0, util_1.schemaHasRulesButRef)(sch, it.self.RULES)) {\n                    sch = compile_1.resolveRef.call(it.self, it.schemaEnv.root, it.baseId, sch === null || sch === void 0 ? void 0 : sch.$ref);\n                    if (sch instanceof compile_1.SchemaEnv)\n                        sch = sch.schema;\n                }\n                const propSch = (_a = sch === null || sch === void 0 ? void 0 : sch.properties) === null || _a === void 0 ? void 0 : _a[tagName];\n                if (typeof propSch != \"object\") {\n                    throw new Error(`discriminator: oneOf subschemas (or referenced schemas) must have \"properties/${tagName}\"`);\n                }\n                tagRequired = tagRequired && (topRequired || hasRequired(sch));\n                addMappings(propSch, i);\n            }\n            if (!tagRequired)\n                throw new Error(`discriminator: \"${tagName}\" must be required`);\n            return oneOfMapping;\n            function hasRequired({ required }) {\n                return Array.isArray(required) && required.includes(tagName);\n            }\n            function addMappings(sch, i) {\n                if (sch.const) {\n                    addMapping(sch.const, i);\n                }\n                else if (sch.enum) {\n                    for (const tagValue of sch.enum) {\n                        addMapping(tagValue, i);\n                    }\n                }\n                else {\n                    throw new Error(`discriminator: \"properties/${tagName}\" must have \"const\" or \"enum\"`);\n                }\n            }\n            function addMapping(tagValue, i) {\n                if (typeof tagValue != \"string\" || tagValue in oneOfMapping) {\n                    throw new Error(`discriminator: \"${tagName}\" values must be unique strings`);\n                }\n                oneOfMapping[tagValue] = i;\n            }\n        }\n    },\n};\nexports.default = def;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DiscrError = void 0;\nvar DiscrError;\n(function (DiscrError) {\n    DiscrError[\"Tag\"] = \"tag\";\n    DiscrError[\"Mapping\"] = \"mapping\";\n})(DiscrError = exports.DiscrError || (exports.DiscrError = {}));\n//# sourceMappingURL=types.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst core_1 = require(\"./core\");\nconst validation_1 = require(\"./validation\");\nconst applicator_1 = require(\"./applicator\");\nconst format_1 = require(\"./format\");\nconst metadata_1 = require(\"./metadata\");\nconst draft7Vocabularies = [\n    core_1.default,\n    validation_1.default,\n    (0, applicator_1.default)(),\n    format_1.default,\n    metadata_1.metadataVocabulary,\n    metadata_1.contentVocabulary,\n];\nexports.default = draft7Vocabularies;\n//# sourceMappingURL=draft7.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.dynamicAnchor = void 0;\nconst codegen_1 = require(\"../../compile/codegen\");\nconst names_1 = require(\"../../compile/names\");\nconst compile_1 = require(\"../../compile\");\nconst ref_1 = require(\"../core/ref\");\nconst def = {\n    keyword: \"$dynamicAnchor\",\n    schemaType: \"string\",\n    code: (cxt) => dynamicAnchor(cxt, cxt.schema),\n};\nfunction dynamicAnchor(cxt, anchor) {\n    const { gen, it } = cxt;\n    it.schemaEnv.root.dynamicAnchors[anchor] = true;\n    const v = (0, codegen_1._) `${names_1.default.dynamicAnchors}${(0, codegen_1.getProperty)(anchor)}`;\n    const validate = it.errSchemaPath === \"#\" ? it.validateName : _getValidate(cxt);\n    gen.if((0, codegen_1._) `!${v}`, () => gen.assign(v, validate));\n}\nexports.dynamicAnchor = dynamicAnchor;\nfunction _getValidate(cxt) {\n    const { schemaEnv, schema, self } = cxt.it;\n    const { root, baseId, localRefs, meta } = schemaEnv.root;\n    const { schemaId } = self.opts;\n    const sch = new compile_1.SchemaEnv({ schema, schemaId, root, baseId, localRefs, meta });\n    compile_1.compileSchema.call(self, sch);\n    return (0, ref_1.getValidate)(cxt, sch);\n}\nexports.default = def;\n//# sourceMappingURL=dynamicAnchor.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.dynamicRef = void 0;\nconst codegen_1 = require(\"../../compile/codegen\");\nconst names_1 = require(\"../../compile/names\");\nconst ref_1 = require(\"../core/ref\");\nconst def = {\n    keyword: \"$dynamicRef\",\n    schemaType: \"string\",\n    code: (cxt) => dynamicRef(cxt, cxt.schema),\n};\nfunction dynamicRef(cxt, ref) {\n    const { gen, keyword, it } = cxt;\n    if (ref[0] !== \"#\")\n        throw new Error(`\"${keyword}\" only supports hash fragment reference`);\n    const anchor = ref.slice(1);\n    if (it.allErrors) {\n        _dynamicRef();\n    }\n    else {\n        const valid = gen.let(\"valid\", false);\n        _dynamicRef(valid);\n        cxt.ok(valid);\n    }\n    function _dynamicRef(valid) {\n        // TODO the assumption here is that `recursiveRef: #` always points to the root\n        // of the schema object, which is not correct, because there may be $id that\n        // makes # point to it, and the target schema may not contain dynamic/recursiveAnchor.\n        // Because of that 2 tests in recursiveRef.json fail.\n        // This is a similar problem to #815 (`$id` doesn't alter resolution scope for `{ \"$ref\": \"#\" }`).\n        // (This problem is not tested in JSON-Schema-Test-Suite)\n        if (it.schemaEnv.root.dynamicAnchors[anchor]) {\n            const v = gen.let(\"_v\", (0, codegen_1._) `${names_1.default.dynamicAnchors}${(0, codegen_1.getProperty)(anchor)}`);\n            gen.if(v, _callRef(v, valid), _callRef(it.validateName, valid));\n        }\n        else {\n            _callRef(it.validateName, valid)();\n        }\n    }\n    function _callRef(validate, valid) {\n        return valid\n            ? () => gen.block(() => {\n                (0, ref_1.callRef)(cxt, validate);\n                gen.let(valid, true);\n            })\n            : () => (0, ref_1.callRef)(cxt, validate);\n    }\n}\nexports.dynamicRef = dynamicRef;\nexports.default = def;\n//# sourceMappingURL=dynamicRef.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst dynamicAnchor_1 = require(\"./dynamicAnchor\");\nconst dynamicRef_1 = require(\"./dynamicRef\");\nconst recursiveAnchor_1 = require(\"./recursiveAnchor\");\nconst recursiveRef_1 = require(\"./recursiveRef\");\nconst dynamic = [dynamicAnchor_1.default, dynamicRef_1.default, recursiveAnchor_1.default, recursiveRef_1.default];\nexports.default = dynamic;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst dynamicAnchor_1 = require(\"./dynamicAnchor\");\nconst util_1 = require(\"../../compile/util\");\nconst def = {\n    keyword: \"$recursiveAnchor\",\n    schemaType: \"boolean\",\n    code(cxt) {\n        if (cxt.schema)\n            (0, dynamicAnchor_1.dynamicAnchor)(cxt, \"\");\n        else\n            (0, util_1.checkStrictMode)(cxt.it, \"$recursiveAnchor: false is ignored\");\n    },\n};\nexports.default = def;\n//# sourceMappingURL=recursiveAnchor.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst dynamicRef_1 = require(\"./dynamicRef\");\nconst def = {\n    keyword: \"$recursiveRef\",\n    schemaType: \"string\",\n    code: (cxt) => (0, dynamicRef_1.dynamicRef)(cxt, cxt.schema),\n};\nexports.default = def;\n//# sourceMappingURL=recursiveRef.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst codegen_1 = require(\"../../compile/codegen\");\nconst error = {\n    message: ({ schemaCode }) => (0, codegen_1.str) `must match format \"${schemaCode}\"`,\n    params: ({ schemaCode }) => (0, codegen_1._) `{format: ${schemaCode}}`,\n};\nconst def = {\n    keyword: \"format\",\n    type: [\"number\", \"string\"],\n    schemaType: \"string\",\n    $data: true,\n    error,\n    code(cxt, ruleType) {\n        const { gen, data, $data, schema, schemaCode, it } = cxt;\n        const { opts, errSchemaPath, schemaEnv, self } = it;\n        if (!opts.validateFormats)\n            return;\n        if ($data)\n            validate$DataFormat();\n        else\n            validateFormat();\n        function validate$DataFormat() {\n            const fmts = gen.scopeValue(\"formats\", {\n                ref: self.formats,\n                code: opts.code.formats,\n            });\n            const fDef = gen.const(\"fDef\", (0, codegen_1._) `${fmts}[${schemaCode}]`);\n            const fType = gen.let(\"fType\");\n            const format = gen.let(\"format\");\n            // TODO simplify\n            gen.if((0, codegen_1._) `typeof ${fDef} == \"object\" && !(${fDef} instanceof RegExp)`, () => gen.assign(fType, (0, codegen_1._) `${fDef}.type || \"string\"`).assign(format, (0, codegen_1._) `${fDef}.validate`), () => gen.assign(fType, (0, codegen_1._) `\"string\"`).assign(format, fDef));\n            cxt.fail$data((0, codegen_1.or)(unknownFmt(), invalidFmt()));\n            function unknownFmt() {\n                if (opts.strictSchema === false)\n                    return codegen_1.nil;\n                return (0, codegen_1._) `${schemaCode} && !${format}`;\n            }\n            function invalidFmt() {\n                const callFormat = schemaEnv.$async\n                    ? (0, codegen_1._) `(${fDef}.async ? await ${format}(${data}) : ${format}(${data}))`\n                    : (0, codegen_1._) `${format}(${data})`;\n                const validData = (0, codegen_1._) `(typeof ${format} == \"function\" ? ${callFormat} : ${format}.test(${data}))`;\n                return (0, codegen_1._) `${format} && ${format} !== true && ${fType} === ${ruleType} && !${validData}`;\n            }\n        }\n        function validateFormat() {\n            const formatDef = self.formats[schema];\n            if (!formatDef) {\n                unknownFormat();\n                return;\n            }\n            if (formatDef === true)\n                return;\n            const [fmtType, format, fmtRef] = getFormat(formatDef);\n            if (fmtType === ruleType)\n                cxt.pass(validCondition());\n            function unknownFormat() {\n                if (opts.strictSchema === false) {\n                    self.logger.warn(unknownMsg());\n                    return;\n                }\n                throw new Error(unknownMsg());\n                function unknownMsg() {\n                    return `unknown format \"${schema}\" ignored in schema at path \"${errSchemaPath}\"`;\n                }\n            }\n            function getFormat(fmtDef) {\n                const code = fmtDef instanceof RegExp\n                    ? (0, codegen_1.regexpCode)(fmtDef)\n                    : opts.code.formats\n                        ? (0, codegen_1._) `${opts.code.formats}${(0, codegen_1.getProperty)(schema)}`\n                        : undefined;\n                const fmt = gen.scopeValue(\"formats\", { key: schema, ref: fmtDef, code });\n                if (typeof fmtDef == \"object\" && !(fmtDef instanceof RegExp)) {\n                    return [fmtDef.type || \"string\", fmtDef.validate, (0, codegen_1._) `${fmt}.validate`];\n                }\n                return [\"string\", fmtDef, fmt];\n            }\n            function validCondition() {\n                if (typeof formatDef == \"object\" && !(formatDef instanceof RegExp) && formatDef.async) {\n                    if (!schemaEnv.$async)\n                        throw new Error(\"async format in sync schema\");\n                    return (0, codegen_1._) `await ${fmtRef}(${data})`;\n                }\n                return typeof format == \"function\" ? (0, codegen_1._) `${fmtRef}(${data})` : (0, codegen_1._) `${fmtRef}.test(${data})`;\n            }\n        }\n    },\n};\nexports.default = def;\n//# sourceMappingURL=format.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst format_1 = require(\"./format\");\nconst format = [format_1.default];\nexports.default = format;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.contentVocabulary = exports.metadataVocabulary = void 0;\nexports.metadataVocabulary = [\n    \"title\",\n    \"description\",\n    \"default\",\n    \"deprecated\",\n    \"readOnly\",\n    \"writeOnly\",\n    \"examples\",\n];\nexports.contentVocabulary = [\n    \"contentMediaType\",\n    \"contentEncoding\",\n    \"contentSchema\",\n];\n//# sourceMappingURL=metadata.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst dependentRequired_1 = require(\"./validation/dependentRequired\");\nconst dependentSchemas_1 = require(\"./applicator/dependentSchemas\");\nconst limitContains_1 = require(\"./validation/limitContains\");\nconst next = [dependentRequired_1.default, dependentSchemas_1.default, limitContains_1.default];\nexports.default = next;\n//# sourceMappingURL=next.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst unevaluatedProperties_1 = require(\"./unevaluatedProperties\");\nconst unevaluatedItems_1 = require(\"./unevaluatedItems\");\nconst unevaluated = [unevaluatedProperties_1.default, unevaluatedItems_1.default];\nexports.default = unevaluated;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst codegen_1 = require(\"../../compile/codegen\");\nconst util_1 = require(\"../../compile/util\");\nconst error = {\n    message: ({ params: { len } }) => (0, codegen_1.str) `must NOT have more than ${len} items`,\n    params: ({ params: { len } }) => (0, codegen_1._) `{limit: ${len}}`,\n};\nconst def = {\n    keyword: \"unevaluatedItems\",\n    type: \"array\",\n    schemaType: [\"boolean\", \"object\"],\n    error,\n    code(cxt) {\n        const { gen, schema, data, it } = cxt;\n        const items = it.items || 0;\n        if (items === true)\n            return;\n        const len = gen.const(\"len\", (0, codegen_1._) `${data}.length`);\n        if (schema === false) {\n            cxt.setParams({ len: items });\n            cxt.fail((0, codegen_1._) `${len} > ${items}`);\n        }\n        else if (typeof schema == \"object\" && !(0, util_1.alwaysValidSchema)(it, schema)) {\n            const valid = gen.var(\"valid\", (0, codegen_1._) `${len} <= ${items}`);\n            gen.if((0, codegen_1.not)(valid), () => validateItems(valid, items));\n            cxt.ok(valid);\n        }\n        it.items = true;\n        function validateItems(valid, from) {\n            gen.forRange(\"i\", from, len, (i) => {\n                cxt.subschema({ keyword: \"unevaluatedItems\", dataProp: i, dataPropType: util_1.Type.Num }, valid);\n                if (!it.allErrors)\n                    gen.if((0, codegen_1.not)(valid), () => gen.break());\n            });\n        }\n    },\n};\nexports.default = def;\n//# sourceMappingURL=unevaluatedItems.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst codegen_1 = require(\"../../compile/codegen\");\nconst util_1 = require(\"../../compile/util\");\nconst names_1 = require(\"../../compile/names\");\nconst error = {\n    message: \"must NOT have unevaluated properties\",\n    params: ({ params }) => (0, codegen_1._) `{unevaluatedProperty: ${params.unevaluatedProperty}}`,\n};\nconst def = {\n    keyword: \"unevaluatedProperties\",\n    type: \"object\",\n    schemaType: [\"boolean\", \"object\"],\n    trackErrors: true,\n    error,\n    code(cxt) {\n        const { gen, schema, data, errsCount, it } = cxt;\n        /* istanbul ignore if */\n        if (!errsCount)\n            throw new Error(\"ajv implementation error\");\n        const { allErrors, props } = it;\n        if (props instanceof codegen_1.Name) {\n            gen.if((0, codegen_1._) `${props} !== true`, () => gen.forIn(\"key\", data, (key) => gen.if(unevaluatedDynamic(props, key), () => unevaluatedPropCode(key))));\n        }\n        else if (props !== true) {\n            gen.forIn(\"key\", data, (key) => props === undefined\n                ? unevaluatedPropCode(key)\n                : gen.if(unevaluatedStatic(props, key), () => unevaluatedPropCode(key)));\n        }\n        it.props = true;\n        cxt.ok((0, codegen_1._) `${errsCount} === ${names_1.default.errors}`);\n        function unevaluatedPropCode(key) {\n            if (schema === false) {\n                cxt.setParams({ unevaluatedProperty: key });\n                cxt.error();\n                if (!allErrors)\n                    gen.break();\n                return;\n            }\n            if (!(0, util_1.alwaysValidSchema)(it, schema)) {\n                const valid = gen.name(\"valid\");\n                cxt.subschema({\n                    keyword: \"unevaluatedProperties\",\n                    dataProp: key,\n                    dataPropType: util_1.Type.Str,\n                }, valid);\n                if (!allErrors)\n                    gen.if((0, codegen_1.not)(valid), () => gen.break());\n            }\n        }\n        function unevaluatedDynamic(evaluatedProps, key) {\n            return (0, codegen_1._) `!${evaluatedProps} || !${evaluatedProps}[${key}]`;\n        }\n        function unevaluatedStatic(evaluatedProps, key) {\n            const ps = [];\n            for (const p in evaluatedProps) {\n                if (evaluatedProps[p] === true)\n                    ps.push((0, codegen_1._) `${key} !== ${p}`);\n            }\n            return (0, codegen_1.and)(...ps);\n        }\n    },\n};\nexports.default = def;\n//# sourceMappingURL=unevaluatedProperties.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst codegen_1 = require(\"../../compile/codegen\");\nconst util_1 = require(\"../../compile/util\");\nconst equal_1 = require(\"../../runtime/equal\");\nconst error = {\n    message: \"must be equal to constant\",\n    params: ({ schemaCode }) => (0, codegen_1._) `{allowedValue: ${schemaCode}}`,\n};\nconst def = {\n    keyword: \"const\",\n    $data: true,\n    error,\n    code(cxt) {\n        const { gen, data, $data, schemaCode, schema } = cxt;\n        if ($data || (schema && typeof schema == \"object\")) {\n            cxt.fail$data((0, codegen_1._) `!${(0, util_1.useFunc)(gen, equal_1.default)}(${data}, ${schemaCode})`);\n        }\n        else {\n            cxt.fail((0, codegen_1._) `${schema} !== ${data}`);\n        }\n    },\n};\nexports.default = def;\n//# sourceMappingURL=const.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst dependencies_1 = require(\"../applicator/dependencies\");\nconst def = {\n    keyword: \"dependentRequired\",\n    type: \"object\",\n    schemaType: \"object\",\n    error: dependencies_1.error,\n    code: (cxt) => (0, dependencies_1.validatePropertyDeps)(cxt),\n};\nexports.default = def;\n//# sourceMappingURL=dependentRequired.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst codegen_1 = require(\"../../compile/codegen\");\nconst util_1 = require(\"../../compile/util\");\nconst equal_1 = require(\"../../runtime/equal\");\nconst error = {\n    message: \"must be equal to one of the allowed values\",\n    params: ({ schemaCode }) => (0, codegen_1._) `{allowedValues: ${schemaCode}}`,\n};\nconst def = {\n    keyword: \"enum\",\n    schemaType: \"array\",\n    $data: true,\n    error,\n    code(cxt) {\n        const { gen, data, $data, schema, schemaCode, it } = cxt;\n        if (!$data && schema.length === 0)\n            throw new Error(\"enum must have non-empty array\");\n        const useLoop = schema.length >= it.opts.loopEnum;\n        let eql;\n        const getEql = () => (eql !== null && eql !== void 0 ? eql : (eql = (0, util_1.useFunc)(gen, equal_1.default)));\n        let valid;\n        if (useLoop || $data) {\n            valid = gen.let(\"valid\");\n            cxt.block$data(valid, loopEnum);\n        }\n        else {\n            /* istanbul ignore if */\n            if (!Array.isArray(schema))\n                throw new Error(\"ajv implementation error\");\n            const vSchema = gen.const(\"vSchema\", schemaCode);\n            valid = (0, codegen_1.or)(...schema.map((_x, i) => equalCode(vSchema, i)));\n        }\n        cxt.pass(valid);\n        function loopEnum() {\n            gen.assign(valid, false);\n            gen.forOf(\"v\", schemaCode, (v) => gen.if((0, codegen_1._) `${getEql()}(${data}, ${v})`, () => gen.assign(valid, true).break()));\n        }\n        function equalCode(vSchema, i) {\n            const sch = schema[i];\n            return typeof sch === \"object\" && sch !== null\n                ? (0, codegen_1._) `${getEql()}(${data}, ${vSchema}[${i}])`\n                : (0, codegen_1._) `${data} === ${sch}`;\n        }\n    },\n};\nexports.default = def;\n//# sourceMappingURL=enum.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst limitNumber_1 = require(\"./limitNumber\");\nconst multipleOf_1 = require(\"./multipleOf\");\nconst limitLength_1 = require(\"./limitLength\");\nconst pattern_1 = require(\"./pattern\");\nconst limitProperties_1 = require(\"./limitProperties\");\nconst required_1 = require(\"./required\");\nconst limitItems_1 = require(\"./limitItems\");\nconst uniqueItems_1 = require(\"./uniqueItems\");\nconst const_1 = require(\"./const\");\nconst enum_1 = require(\"./enum\");\nconst validation = [\n    // number\n    limitNumber_1.default,\n    multipleOf_1.default,\n    // string\n    limitLength_1.default,\n    pattern_1.default,\n    // object\n    limitProperties_1.default,\n    required_1.default,\n    // array\n    limitItems_1.default,\n    uniqueItems_1.default,\n    // any\n    { keyword: \"type\", schemaType: [\"string\", \"array\"] },\n    { keyword: \"nullable\", schemaType: \"boolean\" },\n    const_1.default,\n    enum_1.default,\n];\nexports.default = validation;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst util_1 = require(\"../../compile/util\");\nconst def = {\n    keyword: [\"maxContains\", \"minContains\"],\n    type: \"array\",\n    schemaType: \"number\",\n    code({ keyword, parentSchema, it }) {\n        if (parentSchema.contains === undefined) {\n            (0, util_1.checkStrictMode)(it, `\"${keyword}\" without \"contains\" is ignored`);\n        }\n    },\n};\nexports.default = def;\n//# sourceMappingURL=limitContains.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst codegen_1 = require(\"../../compile/codegen\");\nconst error = {\n    message({ keyword, schemaCode }) {\n        const comp = keyword === \"maxItems\" ? \"more\" : \"fewer\";\n        return (0, codegen_1.str) `must NOT have ${comp} than ${schemaCode} items`;\n    },\n    params: ({ schemaCode }) => (0, codegen_1._) `{limit: ${schemaCode}}`,\n};\nconst def = {\n    keyword: [\"maxItems\", \"minItems\"],\n    type: \"array\",\n    schemaType: \"number\",\n    $data: true,\n    error,\n    code(cxt) {\n        const { keyword, data, schemaCode } = cxt;\n        const op = keyword === \"maxItems\" ? codegen_1.operators.GT : codegen_1.operators.LT;\n        cxt.fail$data((0, codegen_1._) `${data}.length ${op} ${schemaCode}`);\n    },\n};\nexports.default = def;\n//# sourceMappingURL=limitItems.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst codegen_1 = require(\"../../compile/codegen\");\nconst util_1 = require(\"../../compile/util\");\nconst ucs2length_1 = require(\"../../runtime/ucs2length\");\nconst error = {\n    message({ keyword, schemaCode }) {\n        const comp = keyword === \"maxLength\" ? \"more\" : \"fewer\";\n        return (0, codegen_1.str) `must NOT have ${comp} than ${schemaCode} characters`;\n    },\n    params: ({ schemaCode }) => (0, codegen_1._) `{limit: ${schemaCode}}`,\n};\nconst def = {\n    keyword: [\"maxLength\", \"minLength\"],\n    type: \"string\",\n    schemaType: \"number\",\n    $data: true,\n    error,\n    code(cxt) {\n        const { keyword, data, schemaCode, it } = cxt;\n        const op = keyword === \"maxLength\" ? codegen_1.operators.GT : codegen_1.operators.LT;\n        const len = it.opts.unicode === false ? (0, codegen_1._) `${data}.length` : (0, codegen_1._) `${(0, util_1.useFunc)(cxt.gen, ucs2length_1.default)}(${data})`;\n        cxt.fail$data((0, codegen_1._) `${len} ${op} ${schemaCode}`);\n    },\n};\nexports.default = def;\n//# sourceMappingURL=limitLength.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst codegen_1 = require(\"../../compile/codegen\");\nconst ops = codegen_1.operators;\nconst KWDs = {\n    maximum: { okStr: \"<=\", ok: ops.LTE, fail: ops.GT },\n    minimum: { okStr: \">=\", ok: ops.GTE, fail: ops.LT },\n    exclusiveMaximum: { okStr: \"<\", ok: ops.LT, fail: ops.GTE },\n    exclusiveMinimum: { okStr: \">\", ok: ops.GT, fail: ops.LTE },\n};\nconst error = {\n    message: ({ keyword, schemaCode }) => (0, codegen_1.str) `must be ${KWDs[keyword].okStr} ${schemaCode}`,\n    params: ({ keyword, schemaCode }) => (0, codegen_1._) `{comparison: ${KWDs[keyword].okStr}, limit: ${schemaCode}}`,\n};\nconst def = {\n    keyword: Object.keys(KWDs),\n    type: \"number\",\n    schemaType: \"number\",\n    $data: true,\n    error,\n    code(cxt) {\n        const { keyword, data, schemaCode } = cxt;\n        cxt.fail$data((0, codegen_1._) `${data} ${KWDs[keyword].fail} ${schemaCode} || isNaN(${data})`);\n    },\n};\nexports.default = def;\n//# sourceMappingURL=limitNumber.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst codegen_1 = require(\"../../compile/codegen\");\nconst error = {\n    message({ keyword, schemaCode }) {\n        const comp = keyword === \"maxProperties\" ? \"more\" : \"fewer\";\n        return (0, codegen_1.str) `must NOT have ${comp} than ${schemaCode} properties`;\n    },\n    params: ({ schemaCode }) => (0, codegen_1._) `{limit: ${schemaCode}}`,\n};\nconst def = {\n    keyword: [\"maxProperties\", \"minProperties\"],\n    type: \"object\",\n    schemaType: \"number\",\n    $data: true,\n    error,\n    code(cxt) {\n        const { keyword, data, schemaCode } = cxt;\n        const op = keyword === \"maxProperties\" ? codegen_1.operators.GT : codegen_1.operators.LT;\n        cxt.fail$data((0, codegen_1._) `Object.keys(${data}).length ${op} ${schemaCode}`);\n    },\n};\nexports.default = def;\n//# sourceMappingURL=limitProperties.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst codegen_1 = require(\"../../compile/codegen\");\nconst error = {\n    message: ({ schemaCode }) => (0, codegen_1.str) `must be multiple of ${schemaCode}`,\n    params: ({ schemaCode }) => (0, codegen_1._) `{multipleOf: ${schemaCode}}`,\n};\nconst def = {\n    keyword: \"multipleOf\",\n    type: \"number\",\n    schemaType: \"number\",\n    $data: true,\n    error,\n    code(cxt) {\n        const { gen, data, schemaCode, it } = cxt;\n        // const bdt = bad$DataType(schemaCode, <string>def.schemaType, $data)\n        const prec = it.opts.multipleOfPrecision;\n        const res = gen.let(\"res\");\n        const invalid = prec\n            ? (0, codegen_1._) `Math.abs(Math.round(${res}) - ${res}) > 1e-${prec}`\n            : (0, codegen_1._) `${res} !== parseInt(${res})`;\n        cxt.fail$data((0, codegen_1._) `(${schemaCode} === 0 || (${res} = ${data}/${schemaCode}, ${invalid}))`);\n    },\n};\nexports.default = def;\n//# sourceMappingURL=multipleOf.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst code_1 = require(\"../code\");\nconst codegen_1 = require(\"../../compile/codegen\");\nconst error = {\n    message: ({ schemaCode }) => (0, codegen_1.str) `must match pattern \"${schemaCode}\"`,\n    params: ({ schemaCode }) => (0, codegen_1._) `{pattern: ${schemaCode}}`,\n};\nconst def = {\n    keyword: \"pattern\",\n    type: \"string\",\n    schemaType: \"string\",\n    $data: true,\n    error,\n    code(cxt) {\n        const { data, $data, schema, schemaCode, it } = cxt;\n        // TODO regexp should be wrapped in try/catchs\n        const u = it.opts.unicodeRegExp ? \"u\" : \"\";\n        const regExp = $data ? (0, codegen_1._) `(new RegExp(${schemaCode}, ${u}))` : (0, code_1.usePattern)(cxt, schema);\n        cxt.fail$data((0, codegen_1._) `!${regExp}.test(${data})`);\n    },\n};\nexports.default = def;\n//# sourceMappingURL=pattern.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst code_1 = require(\"../code\");\nconst codegen_1 = require(\"../../compile/codegen\");\nconst util_1 = require(\"../../compile/util\");\nconst error = {\n    message: ({ params: { missingProperty } }) => (0, codegen_1.str) `must have required property '${missingProperty}'`,\n    params: ({ params: { missingProperty } }) => (0, codegen_1._) `{missingProperty: ${missingProperty}}`,\n};\nconst def = {\n    keyword: \"required\",\n    type: \"object\",\n    schemaType: \"array\",\n    $data: true,\n    error,\n    code(cxt) {\n        const { gen, schema, schemaCode, data, $data, it } = cxt;\n        const { opts } = it;\n        if (!$data && schema.length === 0)\n            return;\n        const useLoop = schema.length >= opts.loopRequired;\n        if (it.allErrors)\n            allErrorsMode();\n        else\n            exitOnErrorMode();\n        if (opts.strictRequired) {\n            const props = cxt.parentSchema.properties;\n            const { definedProperties } = cxt.it;\n            for (const requiredKey of schema) {\n                if ((props === null || props === void 0 ? void 0 : props[requiredKey]) === undefined && !definedProperties.has(requiredKey)) {\n                    const schemaPath = it.schemaEnv.baseId + it.errSchemaPath;\n                    const msg = `required property \"${requiredKey}\" is not defined at \"${schemaPath}\" (strictRequired)`;\n                    (0, util_1.checkStrictMode)(it, msg, it.opts.strictRequired);\n                }\n            }\n        }\n        function allErrorsMode() {\n            if (useLoop || $data) {\n                cxt.block$data(codegen_1.nil, loopAllRequired);\n            }\n            else {\n                for (const prop of schema) {\n                    (0, code_1.checkReportMissingProp)(cxt, prop);\n                }\n            }\n        }\n        function exitOnErrorMode() {\n            const missing = gen.let(\"missing\");\n            if (useLoop || $data) {\n                const valid = gen.let(\"valid\", true);\n                cxt.block$data(valid, () => loopUntilMissing(missing, valid));\n                cxt.ok(valid);\n            }\n            else {\n                gen.if((0, code_1.checkMissingProp)(cxt, schema, missing));\n                (0, code_1.reportMissingProp)(cxt, missing);\n                gen.else();\n            }\n        }\n        function loopAllRequired() {\n            gen.forOf(\"prop\", schemaCode, (prop) => {\n                cxt.setParams({ missingProperty: prop });\n                gen.if((0, code_1.noPropertyInData)(gen, data, prop, opts.ownProperties), () => cxt.error());\n            });\n        }\n        function loopUntilMissing(missing, valid) {\n            cxt.setParams({ missingProperty: missing });\n            gen.forOf(missing, schemaCode, () => {\n                gen.assign(valid, (0, code_1.propertyInData)(gen, data, missing, opts.ownProperties));\n                gen.if((0, codegen_1.not)(valid), () => {\n                    cxt.error();\n                    gen.break();\n                });\n            }, codegen_1.nil);\n        }\n    },\n};\nexports.default = def;\n//# sourceMappingURL=required.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst dataType_1 = require(\"../../compile/validate/dataType\");\nconst codegen_1 = require(\"../../compile/codegen\");\nconst util_1 = require(\"../../compile/util\");\nconst equal_1 = require(\"../../runtime/equal\");\nconst error = {\n    message: ({ params: { i, j } }) => (0, codegen_1.str) `must NOT have duplicate items (items ## ${j} and ${i} are identical)`,\n    params: ({ params: { i, j } }) => (0, codegen_1._) `{i: ${i}, j: ${j}}`,\n};\nconst def = {\n    keyword: \"uniqueItems\",\n    type: \"array\",\n    schemaType: \"boolean\",\n    $data: true,\n    error,\n    code(cxt) {\n        const { gen, data, $data, schema, parentSchema, schemaCode, it } = cxt;\n        if (!$data && !schema)\n            return;\n        const valid = gen.let(\"valid\");\n        const itemTypes = parentSchema.items ? (0, dataType_1.getSchemaTypes)(parentSchema.items) : [];\n        cxt.block$data(valid, validateUniqueItems, (0, codegen_1._) `${schemaCode} === false`);\n        cxt.ok(valid);\n        function validateUniqueItems() {\n            const i = gen.let(\"i\", (0, codegen_1._) `${data}.length`);\n            const j = gen.let(\"j\");\n            cxt.setParams({ i, j });\n            gen.assign(valid, true);\n            gen.if((0, codegen_1._) `${i} > 1`, () => (canOptimize() ? loopN : loopN2)(i, j));\n        }\n        function canOptimize() {\n            return itemTypes.length > 0 && !itemTypes.some((t) => t === \"object\" || t === \"array\");\n        }\n        function loopN(i, j) {\n            const item = gen.name(\"item\");\n            const wrongType = (0, dataType_1.checkDataTypes)(itemTypes, item, it.opts.strictNumbers, dataType_1.DataType.Wrong);\n            const indices = gen.const(\"indices\", (0, codegen_1._) `{}`);\n            gen.for((0, codegen_1._) `;${i}--;`, () => {\n                gen.let(item, (0, codegen_1._) `${data}[${i}]`);\n                gen.if(wrongType, (0, codegen_1._) `continue`);\n                if (itemTypes.length > 1)\n                    gen.if((0, codegen_1._) `typeof ${item} == \"string\"`, (0, codegen_1._) `${item} += \"_\"`);\n                gen\n                    .if((0, codegen_1._) `typeof ${indices}[${item}] == \"number\"`, () => {\n                    gen.assign(j, (0, codegen_1._) `${indices}[${item}]`);\n                    cxt.error();\n                    gen.assign(valid, false).break();\n                })\n                    .code((0, codegen_1._) `${indices}[${item}] = ${i}`);\n            });\n        }\n        function loopN2(i, j) {\n            const eql = (0, util_1.useFunc)(gen, equal_1.default);\n            const outer = gen.name(\"outer\");\n            gen.label(outer).for((0, codegen_1._) `;${i}--;`, () => gen.for((0, codegen_1._) `${j} = ${i}; ${j}--;`, () => gen.if((0, codegen_1._) `${eql}(${data}[${i}], ${data}[${j}])`, () => {\n                cxt.error();\n                gen.assign(valid, false).break(outer);\n            })));\n        }\n    },\n};\nexports.default = def;\n//# sourceMappingURL=uniqueItems.js.map"],"names":["Object","defineProperty","exports","value","MissingRefError","ValidationError","CodeGen","Name","nil","stringify","str","_","KeywordCxt","core_1","draft7_1","dynamic_1","next_1","unevaluated_1","discriminator_1","json_schema_2019_09_1","META_SCHEMA_ID","Ajv2019","default","constructor","opts","super","dynamicRef","next","unevaluated","_addVocabularies","this","addVocabulary","forEach","v","discriminator","addKeyword","_addDefaultMetaSchema","$data","meta","call","refs","defaultMeta","getSchema","undefined","module","validate_1","enumerable","get","codegen_1","validation_error_1","ref_error_1","draft7MetaSchema","META_SUPPORT_DATA","Ajv","metaSchema","$dataMetaSchema","addMetaSchema","regexpCode","getEsmExportName","getProperty","safeStringify","strConcat","addCodeArg","_Code","IDENTIFIER","_CodeOrName","s","test","Error","toString","emptyStr","names","code","_items","length","item","_a","_str","reduce","c","_names","strs","args","i","push","plus","expr","res","mergeExprItems","splice","optimize","arg","x","Array","isArray","join","a","b","slice","JSON","replace","c1","c2","key","rx","or","and","not","operators","varKinds","ValueScopeName","ValueScope","Scope","code_1","scope_1","code_2","scope_2","GT","GTE","LT","LTE","EQ","NEQ","NOT","OR","AND","ADD","Node","optimizeNodes","optimizeNames","_constants","Def","varKind","name","rhs","render","es5","_n","var","constants","optimizeExpr","Assign","lhs","sideEffects","addExprNames","AssignOp","op","Label","label","Break","Throw","error","AnyCode","ParentNode","nodes","n","subtractNames","addNames","BlockNode","Root","Else","kind","If","condition","else","cond","e","ns","For","ForLoop","iteration","ForRange","from","to","ForIter","loop","iterable","Func","async","Return","Try","catch","finally","_b","Catch","Finally","replaceName","some","items","par","extScope","_values","_blockStarts","lines","_extScope","_scope","parent","_nodes","_root","prefix","scopeName","scopeValue","prefixOrName","Set","add","getScopeValue","keyOrRef","getValue","scopeRefs","scopeCode","_def","nameOrPrefix","constant","toName","_leafNode","_constant","const","let","assign","object","keyValues","thenBody","elseBody","_blockNode","endIf","elseIf","_elseNode","_endBlockNode","_for","node","forBody","endFor","forRange","forOf","arr","forIn","obj","ownProperties","tryBody","catchCode","finallyCode","_currNode","block","body","nodeCount","endBlock","len","pop","toClose","func","funcBody","endFunc","N1","N2","andCode","mappend","orCode","y","UsedValueState","ValueError","prefixes","_prefixes","_parent","_newName","_nameGroup","index","has","nameStr","setValue","property","itemIndex","scopePath","line","scope","ref","valueKey","vs","_name","Map","set","values","_reduceValues","usedValues","getCode","valueCode","nameSet","Started","def","Completed","extendErrors","resetErrorsCount","reportExtraError","reportError","keyword$DataError","keywordError","util_1","names_1","addError","gen","errObj","err","if","vErrors","errors","returnErrors","it","errs","validateName","schemaEnv","$async","throw","return","message","keyword","schemaType","cxt","errorPaths","overrideAllErrors","compositeRule","allErrors","errorObjectCode","errsCount","schemaValue","data","instancePath","errorPath","errSchemaPath","verbose","E","schemaPath","params","propertyName","schema","parentSchema","createErrors","errorInstancePath","errorSchemaPath","topSchemaRef","messages","extraErrorProps","errorObject","instPath","getErrorPath","Type","Str","schPath","resolveSchema","getCompilingSchema","resolveRef","compileSchema","SchemaEnv","resolve_1","env","dynamicAnchors","schemaId","root","baseId","normalizeId","localRefs","sch","_sch","rootId","getFullPath","uriResolver","_ValidationError","schemaCxt","parentData","parentDataProperty","dataNames","dataPathArr","dataLevel","dataTypes","definedProperties","source","jtd","self","sourceCode","_compilations","validateFunctionCode","validateCode","process","validate","Function","makeValidate","scopeValues","props","evaluated","dynamicProps","dynamicItems","logger","delete","inlineOrCompile","inlineRef","inlineRefs","schEnv","s2","s1","resolve","schemas","p","parse","refPath","_getFullPath","keys","getJsonPointer","id","schOrRef","schId","resolveUrl","schOrFunc","PREVENT_SCOPE_CHANGE","parsedRef","fragment","part","split","partSchema","unescapeFragment","$ref","schemaHasRulesButRef","RULES","valCxt","rootData","json","jsonPos","jsonLen","jsonPart","resolver","msg","missingRef","missingSchema","getSchemaRefs","equal","traverse","SIMPLE_INLINED","limit","hasRef","countKeys","REF_KEYWORDS","count","Infinity","eachItem","normalize","serialize","TRAILING_SLASH_HASH","ANCHOR","baseIds","pathPrefix","schemaRefs","allKeys","jsonPtr","parentJsonPtr","fullPath","addRef","_resolve","ambiguos","checkAmbiguosRef","addAnchor","anchor","$anchor","$dynamicAnchor","sch1","sch2","getRules","isJSONType","jsonTypes","groups","number","type","rules","string","array","types","integer","boolean","null","post","all","keywords","checkStrictMode","useFunc","setEvaluated","evaluatedPropsToName","mergeEvaluated","unescapeJsonPointer","escapeJsonPointer","escapeFragment","schemaRefOrVal","schemaHasRules","checkUnknownRules","alwaysValidSchema","toHash","strictSchema","makeMergeEvaluated","mergeNames","mergeToName","mergeValues","resultToName","ps","hash","decodeURIComponent","encodeURIComponent","xs","f","Math","max","snippets","mode","warn","dataProp","dataPropType","jsPropertySyntax","isNumber","Num","shouldUseGroup","group","rule","shouldUseRule","definition","implements","kwd","schemaHasRulesForType","boolOrEmptySchema","topBoolOrEmptySchema","errors_1","boolError","falseSchemaError","schemaCode","valid","reportTypeError","checkDataTypes","checkDataType","coerceAndCheckDataType","getJSONTypes","getSchemaTypes","DataType","rules_1","applicability_1","ts","every","includes","nullable","coerceTo","coerceTypes","filter","t","COERCIBLE","coerceToTypes","checkTypes","wrongType","strictNumbers","Wrong","dataType","coerced","coerceSpecificType","assignParentData","coerceData","strictNums","correct","Correct","numCond","_cond","notObj","typeError","getTypeErrorContext","assignDefaults","assignDefault","prop","defaultValue","childData","useDefaults","ty","properties","getData","boolSchema_1","dataType_1","dataType_2","defaults_1","keyword_1","subschema_1","validateFunction","funcSourceUrl","destructureValCxtES5","destructureValCxt","schemaCxtHasRules","isSchemaObj","checkKeywords","ignoreKeywordsWithRef","checkRefsAndKeywords","typeAndKeywords","schemaKeywords","commentKeyword","$comment","rootName","typeErrors","groupKeywords","iterateKeywords","strictTypes","includesType","strictTypesError","withTypes","narrowSchemaTypes","checkContextTypes","allowUnionTypes","checkMultipleTypes","hasApplicableType","kwdT","schTs","checkKeywordTypes","checkStrictTypes","keywordCode","checkNoDefault","resetEvaluated","assignEvaluated","returnResults","topSchemaObjCode","validateKeywordUsage","validSchemaType","allowUndefined","trackErrors","result","successAction","failAction","failResult","pass","fail","fail$data","invalid$data","append","errorParams","setParams","_error","$dataError","reset","ok","block$data","codeBlock","$dataValid","check$data","validateSchema","st","wrong$DataType","validateSchemaRef","invalid$DataSchema","subschema","appl","getSubschema","extendSubschemaData","extendSubschemaMode","nextContext","updateContext","checkAsyncSchema","subSchemaObjCode","subschemaCode","mergeValidEvaluated","ruleType","funcKeywordCode","macroKeywordCode","compile","JSON_POINTER","RELATIVE_JSON_POINTER","jsonPointer","matches","exec","up","errorMsg","segments","segment","pointerType","modifyData","useKeyword","macroSchema","macro","schemaRef","checkAsyncKeyword","validateRef","assignValid","_await","passCxt","passContext","passSchema","callValidateCode","modifying","reportErrs","ruleErrs","try","validateAsync","validateErrs","validateSync","addErrs","deps","dependencies","prototype","hasOwnProperty","errorsText","schemaProp","dpType","dataContextProps","_nextData","jtdDiscriminator","jtdMetadata","compile_1","codegen_2","$dataRefSchema","uri_1","defaultRegExp","flags","RegExp","META_IGNORE_OPTIONS","EXT_SCOPE_NAMES","removedOptions","errorDataPath","format","jsonPointers","extendRefs","missingRefs","processCode","strictDefaults","strictKeywords","uniqueItems","unknownFormats","cache","ajvErrors","deprecatedOptions","unicode","requiredOptions","o","_c","_d","_e","_f","_g","_h","_j","_k","_l","_m","_o","_p","_q","_r","_s","_t","_u","_v","_w","_x","_y","_z","_0","strict","_optz","regExp","strictTuples","strictRequired","loopRequired","loopEnum","addUsedSchema","validateFormats","unicodeRegExp","int32range","formats","_loading","_cache","noLogs","console","log","getLogger","formatOpt","checkOptions","_metaOpts","getMetaSchemaOptions","addInitialFormats","addInitialKeywords","addInitialSchemas","_dataRefSchema","$id","schemaKeyRef","_meta","_addSchema","_compileSchemaEnv","compileAsync","loadSchema","runCompileAsync","_schema","loadMetaSchema","$schema","_compileAsync","checkLoaded","loadMissingSchema","_loadSchema","addSchema","_validateSchema","_checkUnique","throwOrLogError","keyRef","getSchEnv","removeSchema","_removeAllSchemas","clear","cacheKey","definitions","kwdOrDef","checkKeyword","addRule","keywordMetaschema","k","getKeyword","removeKeyword","findIndex","addFormat","separator","dataVar","map","text","keywordsJsonPointers","seg","schemaOrData","regex","startsWith","_compileMetaSchema","currentOpts","checkOpts","options","opt","optsSchemas","defs","metaOpts","KEYWORD_NAME","ruleGroup","find","before","addBeforeRule","_rule","$dataRef","anyOf","applicator","content","core","metadata","validation","with$data","ajv","ucs2length","pos","charCodeAt","uri","validateAdditionalItems","break","validateItems","additionalProperty","removeAdditional","allSchemaProperties","patProps","patternProperties","deleteAdditional","additionalPropertyCode","applyAdditionalSchema","definedProp","propsSchema","isOwnProperty","usePattern","isAdditional","schCxt","validateUnion","min","minContains","maxContains","validateItemsWithCount","schValid","checkLimits","_valid","validateSchemaDeps","validatePropertyDeps","depsCount","property_ies","missingProperty","propDeps","schDeps","propertyDeps","schemaDeps","splitDependencies","missing","hasProperty","propertyInData","depProp","checkReportMissingProp","checkMissingProp","reportMissingProp","dependencies_1","ifClause","then","hasThen","hasSchema","hasElse","validateIf","validateClause","additionalItems_1","prefixItems_1","items_1","items2020_1","contains_1","propertyNames_1","additionalProperties_1","properties_1","patternProperties_1","not_1","anyOf_1","oneOf_1","allOf_1","if_1","thenElse_1","draft2020","validateTuple","validateArray","extraItems","schArr","l","fullTuple","minItems","maxItems","checkStrictTuple","prefixItems","passing","util_2","patterns","alwaysValidPatterns","checkProperties","allowMatchingProperties","checkMatchingProperties","pat","validateProperties","alwaysValid","validatePatternProperties","additionalProperties","allProps","hasDefault","applyPropertySchema","schemaProperties","noPropertyInData","hasPropFunc","schemaMap","context","dataAndSchema","newRegExp","pattern","u","validArr","notValid","id_1","ref_1","callRef","getValidate","callRootRef","schOrEnv","callValidate","schName","inlineRefSchema","addErrorsFrom","addEvaluatedFrom","schEvaluated","callAsyncRef","types_1","discrError","tagName","DiscrError","Tag","tag","oneOf","mapping","applyTagSchema","oneOfMapping","topRequired","hasRequired","tagRequired","propSch","addMappings","required","addMapping","enum","tagValue","getMapping","Mapping","validateMapping","validation_1","applicator_1","format_1","metadata_1","draft7Vocabularies","metadataVocabulary","contentVocabulary","dynamicAnchor","_getValidate","_dynamicRef","_callRef","dynamicAnchor_1","dynamicRef_1","recursiveAnchor_1","recursiveRef_1","dynamic","fmts","fDef","fType","callFormat","validData","invalidFmt","validate$DataFormat","formatDef","unknownMsg","unknownFormat","fmtType","fmtRef","fmtDef","fmt","getFormat","validCondition","validateFormat","dependentRequired_1","dependentSchemas_1","limitContains_1","unevaluatedProperties_1","unevaluatedItems_1","unevaluatedProperty","unevaluatedPropCode","evaluatedProps","unevaluatedDynamic","unevaluatedStatic","equal_1","useLoop","eql","getEql","vSchema","equalCode","limitNumber_1","multipleOf_1","limitLength_1","pattern_1","limitProperties_1","required_1","limitItems_1","uniqueItems_1","const_1","enum_1","contains","comp","ucs2length_1","ops","KWDs","maximum","okStr","minimum","exclusiveMaximum","exclusiveMinimum","prec","multipleOfPrecision","invalid","loopAllRequired","allErrorsMode","loopUntilMissing","exitOnErrorMode","requiredKey","j","itemTypes","loopN","indices","for","loopN2","outer"],"sourceRoot":""}