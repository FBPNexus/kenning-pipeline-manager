#!/usr/bin/env python3

# Copyright (c) 2022-2023 Antmicro <www.antmicro.com>
#
# SPDX-License-Identifier: Apache-2.0

from pathlib import Path
import subprocess
import sys
import argparse

from pipeline_manager.frontend_builder import build_prepare  # noqa: E402

if __name__ == "__main__":
    validator_parser = argparse.ArgumentParser(
        description="Tool for validating dataflow and specification files"
    )
    validator_parser.add_argument(
        "specification",
        help="Path to specification file",
        type=Path,
    )
    validator_parser.add_argument(
        "dataflow",
        help="Path to dataflow file",
        nargs="?",
        type=Path,
    )
    validator_parser.add_argument(
        "--install-dependencies",
        help="Determines whether to install dependencies before running the script",  # noqa: E501
        action='store_true',
    )
    args = validator_parser.parse_args()

    projectpath = Path(__file__).parent.absolute()
    frontend_path = projectpath / "pipeline_manager/frontend"

    if (args.instal_dependencies):
        build_prepare()

    if args.dataflow:
        exit_status = subprocess.run(
            [
                "node",
                "--no-warnings",
                "validator.js",
                args.specification.absolute(),
                args.dataflow.absolute(),
            ],
            cwd=frontend_path,
        )
    else:
        exit_status = subprocess.run(
            [
                "node",
                "--no-warnings",
                "validator.js",
                args.specification.absolute()
            ],
            cwd=frontend_path,
        )

    sys.exit(exit_status.returncode)
